{
    "docs": [
        {
            "location": "/",
            "text": "Welcome to anasme's doc !\n\u00b6\n\n\nCe site est consacr\u00e9 \u00e0 ma doc orient\u00e9 devops et AdminSYS principalement.\n\n\nN'h\u00e9sitez pas \u00e0 me contacter ou \u00e0 contribuer \n\n\nBonne navigation !\n\n\n\n\nAnas Asmi.",
            "title": "Welcome to anasme's doc !"
        },
        {
            "location": "/#welcome-to-anasmes-doc",
            "text": "Ce site est consacr\u00e9 \u00e0 ma doc orient\u00e9 devops et AdminSYS principalement.  N'h\u00e9sitez pas \u00e0 me contacter ou \u00e0 contribuer   Bonne navigation !   Anas Asmi.",
            "title": "Welcome to anasme's doc !"
        },
        {
            "location": "/AdminSys/OpenVPN/",
            "text": "OpenVPN\n\u00b6\n\n\nInstallation\n\u00b6\n\n\nPr\u00e9requis\n\u00b6\n\n\n\n\nServeur Linux (debian ou ubuntu)\n\n\nIP public\n\n\n\n\nmachine utilis\u00e9 : Instance sous AWS / ubuntu 16\n\n\nPaquets\n\u00b6\n\n\nsudo apt update \n&&\n sudo apt install openvpn easy-rsa\n\n\n\n\nCr\u00e9ation des cl\u00e9s serveur\n\u00b6\n\n\nCr\u00e9ation d'un dossier pour les cl\u00e9s\n\n\nsudo mkdir /etc/openvpn/keys\n\n\n\n\nCopy du dossier easy-rsa dans /etc/openvpn\n\n\nsudo cp -r /usr/share/easy-rsa/ /etc/openvpn\n\n\n\n\nOn donne les droits sur easy-rsa\n\n\nsudo chown -R \n$USER\n /etc/openvpn/easy-rsa/\n\n\n\n\nConfiguration server\n\u00b6\n\n\nmodification des variables pour la cr\u00e9ation des certificats\n\u00b6\n\n\nediter \n/etc/openvpn/easy-rsa/vars\n\n\n#exemple\n\n...\n\nexport\n \nKEY_COUNTRY\n=\n\"FR\"\n\n\nexport\n \nKEY_PROVINCE\n=\n\"FR\"\n\n\nexport\n \nKEY_CITY\n=\n\"FONTAINEBLEAU\"\n\n\nexport\n \nKEY_ORG\n=\n\"LPASSR\"\n\n\nexport\n \nKEY_EMAIL\n=\n\"anas.asmi@me.com\"\n\n\nexport\n \nKEY_OU\n=\n\"195858\"\n\n...\n\n\n\n\nCr\u00e9ation des .key et .crt\n\u00b6\n\n\ndans \n/etc/openvpn/easy-rsa/\n\n\nsource\n vars\n./clean-all\n./build-dh\n./pkitool --initca\n./pkitool --server server\nopenvpn --genkey --secret keys/ta.key\n\n\n\n\nCopie des cl\u00e9s et certs dans le dossier keys\n\u00b6\n\n\nsudo cp keys/ca.crt keys/ta.key keys/server.crt keys/server.key keys/dh2048.pem /etc/openvpn/keys\n\n\n\n\nCr\u00e9ation du dossier client\n\u00b6\n\n\ndossier \nclientconf\n pour stocker les config des clients\n\n\nsudo mkdir /etc/openvpn/clientconf\n\n\n\n\nConfiguration du server\n\u00b6\n\n\nCr\u00e9ation d'un fichier \nserver.conf\n\n\nsudo vim /etc/openvpn/server.conf\n\n\n# Serveur TCP/443\n\nmode server \nproto tcp\nport \n443\n\ndev tun \n\n\n# Cl\u00e9s et certificats\n\nca keys/ca.crt\ncert keys/server.crt\nkey keys/server.key\ndh keys/dh2048.pem\ntls-auth keys/ta.key \n0\n\ncipher AES-256-CBC\n\n\n# R\u00e9seau\n\nserver \n10\n.8.0.0 \n255\n.255.255.0\npush \n\"redirect-gateway def1 bypass-dhcp\"\n\npush \n\"dhcp-option DNS 172.31.0.2\"\n\n\n#push \"dhcp-option DNS 8.8.4.4\"\n\nkeepalive \n10\n \n120\n\n\n\n# S\u00e9curite\n\nuser nobody\ngroup nogroup\npersist-key\npersist-tun\ncomp-lzo\n\n\n# Log\n\nverb \n3\n\nmute \n20\n\nstatus openvpn-status.log\nlog-append /var/log/openvpn.log\n\n\n\n\nCr\u00e9ation des r\u00e8gles iptables (nat)\n\u00b6\n\n\nAutorise le routage \n\n\nsudo vim /etc/sysctl.conf\n...\nnet.ipv4.ip_forward \n=\n \n1\n\n...\n\n\n\n\nConfiguration du NAT\n\n\n#ajouter cette ligne dans iptables ou fichier interfaces\n\n...\niptables -t nat -A POSTROUTING -s \n10\n.8.0.0/24 -o eth0 -j MASQUERADE\n...\n\n\n\n\nD\u00e9marrage du server\n\u00b6\n\n\nsudo systemctl start openvpn@server\n\n\n\n\nD\u00e9marrage au boot\n\u00b6\n\n\nsudo systemctl \nenable\n openvpn@server.service\n\n\n\n\nConfiguration client\n\u00b6\n\n\nG\u00e9n\u00e9ration des cl\u00e9s\n\u00b6\n\n\ncd\n /etc/openvpn/easy-rsa\n\nsource\n vars\n./build-key client1\n\n\n\n\n\n\nNote\n\n\nSi vous souhaitez prot\u00e9ger l'acc\u00e8s \u00e0 vos cl\u00e9s par un mot de passe (c'est \u00e0 dire qu'un mot de passe sera demand\u00e9 \u00e0 la mont\u00e9e du tunnel VPN), il faut utiliser la commande **./build-key-pass**en lieu et place de \n./buil-key\n.\n\n\n\n\ncopie des des 3 fichier g\u00e9n\u00e9r\u00e9s (crt csr key)\n\u00b6\n\n\n#cr\u00e9ation d'un dossier pour l'utilisateur en question\n\nsudo mkdir /etc/openvpn/clientconf/client1/\n\n#copie des certificats ()\n\n/etc/openvpn/easy-rsa$ sudo cp /etc/openvpn/keys/ca.crt /etc/openvpn/keys/ta.key keys/client1.crt keys/client1.key /etc/openvpn/clientconf/client1/\n\n\n\n\nCr\u00e9ation du fichier client.conf\n\u00b6\n\n\nsudo vim /etc/openvpn/clientconf/client1/client.conf\n\n# Client\n\n\n#on signale que c'est une configuration cliente\n\nclient\n\n#type d'interface virtuelle qui sera cr\u00e9\u00e9e\n\ndev tun\n\n#protocole de communication\n\n\n#tcp pour li\u00e9 au port 443 et reduction d'erreur mais plus gourmant en bande passante\n\n\n#et en cpu\n\nproto tcp-client\n\n#IP publique qui redirige vers notre serveur vpn et le port d'\u00e9coute du serveur VPN\n\n\n#nous utilisons le port 443 afin de passer le maximum de pare-feu\n\nremote \n\"ip publique\"\n \n443\n \n\n#retry de connexion infinie\n\nresolv-retry infinite\n\n#type d'encryptage des donn\u00e9es (algorithme de chiffrement/d\u00e9chiffrement)\n\ncipher AES-256-CBC\n\n\n# Cl\u00e9s\n\n\n#master CA\n\nca ca.crt\n\n#certificat client\n\ncert client1.crt\n\n#cl\u00e9 priv\u00e9e du client\n\nkey client1.key\n\n#Cl\u00e9 HMAC\n\ntls-auth ta.key \n1\n\n\n\n#v\u00e9rifier les certificats server pour \u00e9viter les \"man-in-the-middle's attack\"\n\nremote-cert-tls server\n\n\n# S\u00e9curite\n\nnobind\n\n#connexion persistante\n\npersist-key\npersist-tun\n\n#activation de la compression\n\ncomp-lzo\n\n#niveau de verbosit\u00e9 (1 \u00e0 9)\n\nverb \n3\n\n\n\n\n\n\n\nWarning\n\n\nPour les clients Windows OpenVPN, copier le client.conf en client.ovpn \n\n\n\n\nCr\u00e9ation d'une tarball client\n\u00b6\n\n\n/etc/openvpn/clientconf/client1$ sudo tar czfv client.tar.gz *\n\n\n\n\ntest de la connexion (linux)\n\u00b6\n\n\n\n\ninstallation du client\n\n\n\n\napt install openvpn\n\n\n\n\n\n\ncopie des fichier de conf et cert clients & untar\n\n\n\n\nsudo cp client.tar.gz /etc/openvpn/client\nsudo tar xvzf client.tar.gz\n\n\n\n\n\n\nlancement de la connexion\n\n\n\n\nsudo openvpn --config /etc/openvpn/client\n\n\n\n\n\n\nNote\n\n\nSur AWS il faut cr\u00e9er une r\u00e8gle de flux via le groupe de s\u00e9curit\u00e9 configur\u00e9 sur l'instance en question, dans notre cas il faut autoris\u00e9 le flux entrant (https) 443.\n\n\n\n\n\n\nr\u00e9sultat si cela fonctionne:\n\n\n\n\n...\nSat Mar \n24\n \n11\n:04:19 \n2018\n /sbin/ip route add \n\"ip publique\"\n/32 via \n\"passerelle\"\n\nSat Mar \n24\n \n11\n:04:19 \n2018\n /sbin/ip route add \n0\n.0.0.0/1 via \n10\n.8.0.5\nSat Mar \n24\n \n11\n:04:19 \n2018\n /sbin/ip route add \n128\n.0.0.0/1 via \n10\n.8.0.5\nSat Mar \n24\n \n11\n:04:19 \n2018\n /sbin/ip route add \n10\n.8.0.1/32 via \n10\n.8.0.5\nSat Mar \n24\n \n11\n:04:19 \n2018\n Initialization Sequence Completed\n\n\n\n\nConfiguration du NAT\n\u00b6\n\n\nremote-cert-tls serverAutorisation du forward sur la VM\n\u00b6\n\n\ndans \n/etc/sysctl.conf\n on d\u00e9commente\n\n\nnet.ipv4.ip_forward \n=\n \n1\n\n\n\n\n\nR\u00e8gle de NAT\n\u00b6\n\n\nsudo iptables -t nat -A POSTROUTING -s \n10\n.8.0.0/24 -o eth0 -j MASQUERADE\n\n\n\n\nRendre la r\u00e8gle persistante\n\u00b6\n\n\n\n\ninstallation de \niptables-persistent\n\n\n\n\nsudo apt install iptables-persistent\n\n\n\n\n\n\nSave des rules\n\n\n\n\nsudo iptables-save\n\n\n\n\n\n\ncheck \n\n\n\n\nsudo iptables -t nat -L -v\n\n\n#result        \n\n...\nChain POSTROUTING \n(\npolicy ACCEPT \n6\n packets, \n491\n bytes\n)\n\n pkts bytes target     prot opt in     out     \nsource\n               destination         \n    \n0\n     \n0\n MASQUERADE  all  --  any    eth0    ip-10-8-0-0.us-west-2.compute.internal/24  anywhere",
            "title": "OpenVPN"
        },
        {
            "location": "/AdminSys/OpenVPN/#openvpn",
            "text": "",
            "title": "OpenVPN"
        },
        {
            "location": "/AdminSys/OpenVPN/#installation",
            "text": "",
            "title": "Installation"
        },
        {
            "location": "/AdminSys/OpenVPN/#prerequis",
            "text": "Serveur Linux (debian ou ubuntu)  IP public   machine utilis\u00e9 : Instance sous AWS / ubuntu 16",
            "title": "Pr\u00e9requis"
        },
        {
            "location": "/AdminSys/OpenVPN/#paquets",
            "text": "sudo apt update  &&  sudo apt install openvpn easy-rsa",
            "title": "Paquets"
        },
        {
            "location": "/AdminSys/OpenVPN/#creation-des-cles-serveur",
            "text": "Cr\u00e9ation d'un dossier pour les cl\u00e9s  sudo mkdir /etc/openvpn/keys  Copy du dossier easy-rsa dans /etc/openvpn  sudo cp -r /usr/share/easy-rsa/ /etc/openvpn  On donne les droits sur easy-rsa  sudo chown -R  $USER  /etc/openvpn/easy-rsa/",
            "title": "Cr\u00e9ation des cl\u00e9s serveur"
        },
        {
            "location": "/AdminSys/OpenVPN/#configuration-server",
            "text": "",
            "title": "Configuration server"
        },
        {
            "location": "/AdminSys/OpenVPN/#modification-des-variables-pour-la-creation-des-certificats",
            "text": "editer  /etc/openvpn/easy-rsa/vars  #exemple \n... export   KEY_COUNTRY = \"FR\"  export   KEY_PROVINCE = \"FR\"  export   KEY_CITY = \"FONTAINEBLEAU\"  export   KEY_ORG = \"LPASSR\"  export   KEY_EMAIL = \"anas.asmi@me.com\"  export   KEY_OU = \"195858\" \n...",
            "title": "modification des variables pour la cr\u00e9ation des certificats"
        },
        {
            "location": "/AdminSys/OpenVPN/#creation-des-key-et-crt",
            "text": "dans  /etc/openvpn/easy-rsa/  source  vars\n./clean-all\n./build-dh\n./pkitool --initca\n./pkitool --server server\nopenvpn --genkey --secret keys/ta.key",
            "title": "Cr\u00e9ation des .key et .crt"
        },
        {
            "location": "/AdminSys/OpenVPN/#copie-des-cles-et-certs-dans-le-dossier-keys",
            "text": "sudo cp keys/ca.crt keys/ta.key keys/server.crt keys/server.key keys/dh2048.pem /etc/openvpn/keys",
            "title": "Copie des cl\u00e9s et certs dans le dossier keys"
        },
        {
            "location": "/AdminSys/OpenVPN/#creation-du-dossier-client",
            "text": "dossier  clientconf  pour stocker les config des clients  sudo mkdir /etc/openvpn/clientconf",
            "title": "Cr\u00e9ation du dossier client"
        },
        {
            "location": "/AdminSys/OpenVPN/#configuration-du-server",
            "text": "Cr\u00e9ation d'un fichier  server.conf  sudo vim /etc/openvpn/server.conf # Serveur TCP/443 \nmode server \nproto tcp\nport  443 \ndev tun  # Cl\u00e9s et certificats \nca keys/ca.crt\ncert keys/server.crt\nkey keys/server.key\ndh keys/dh2048.pem\ntls-auth keys/ta.key  0 \ncipher AES-256-CBC # R\u00e9seau \nserver  10 .8.0.0  255 .255.255.0\npush  \"redirect-gateway def1 bypass-dhcp\" \npush  \"dhcp-option DNS 172.31.0.2\"  #push \"dhcp-option DNS 8.8.4.4\" \nkeepalive  10   120  # S\u00e9curite \nuser nobody\ngroup nogroup\npersist-key\npersist-tun\ncomp-lzo # Log \nverb  3 \nmute  20 \nstatus openvpn-status.log\nlog-append /var/log/openvpn.log",
            "title": "Configuration du server"
        },
        {
            "location": "/AdminSys/OpenVPN/#creation-des-regles-iptables-nat",
            "text": "Autorise le routage   sudo vim /etc/sysctl.conf\n...\nnet.ipv4.ip_forward  =   1 \n...  Configuration du NAT  #ajouter cette ligne dans iptables ou fichier interfaces \n...\niptables -t nat -A POSTROUTING -s  10 .8.0.0/24 -o eth0 -j MASQUERADE\n...",
            "title": "Cr\u00e9ation des r\u00e8gles iptables (nat)"
        },
        {
            "location": "/AdminSys/OpenVPN/#demarrage-du-server",
            "text": "sudo systemctl start openvpn@server",
            "title": "D\u00e9marrage du server"
        },
        {
            "location": "/AdminSys/OpenVPN/#demarrage-au-boot",
            "text": "sudo systemctl  enable  openvpn@server.service",
            "title": "D\u00e9marrage au boot"
        },
        {
            "location": "/AdminSys/OpenVPN/#configuration-client",
            "text": "",
            "title": "Configuration client"
        },
        {
            "location": "/AdminSys/OpenVPN/#generation-des-cles",
            "text": "cd  /etc/openvpn/easy-rsa source  vars\n./build-key client1   Note  Si vous souhaitez prot\u00e9ger l'acc\u00e8s \u00e0 vos cl\u00e9s par un mot de passe (c'est \u00e0 dire qu'un mot de passe sera demand\u00e9 \u00e0 la mont\u00e9e du tunnel VPN), il faut utiliser la commande **./build-key-pass**en lieu et place de  ./buil-key .",
            "title": "G\u00e9n\u00e9ration des cl\u00e9s"
        },
        {
            "location": "/AdminSys/OpenVPN/#copie-des-des-3-fichier-generes-crt-csr-key",
            "text": "#cr\u00e9ation d'un dossier pour l'utilisateur en question \nsudo mkdir /etc/openvpn/clientconf/client1/ #copie des certificats () \n/etc/openvpn/easy-rsa$ sudo cp /etc/openvpn/keys/ca.crt /etc/openvpn/keys/ta.key keys/client1.crt keys/client1.key /etc/openvpn/clientconf/client1/",
            "title": "copie des des 3 fichier g\u00e9n\u00e9r\u00e9s (crt csr key)"
        },
        {
            "location": "/AdminSys/OpenVPN/#creation-du-fichier-clientconf",
            "text": "sudo vim /etc/openvpn/clientconf/client1/client.conf # Client  #on signale que c'est une configuration cliente \nclient #type d'interface virtuelle qui sera cr\u00e9\u00e9e \ndev tun #protocole de communication  #tcp pour li\u00e9 au port 443 et reduction d'erreur mais plus gourmant en bande passante  #et en cpu \nproto tcp-client #IP publique qui redirige vers notre serveur vpn et le port d'\u00e9coute du serveur VPN  #nous utilisons le port 443 afin de passer le maximum de pare-feu \nremote  \"ip publique\"   443   #retry de connexion infinie \nresolv-retry infinite #type d'encryptage des donn\u00e9es (algorithme de chiffrement/d\u00e9chiffrement) \ncipher AES-256-CBC # Cl\u00e9s  #master CA \nca ca.crt #certificat client \ncert client1.crt #cl\u00e9 priv\u00e9e du client \nkey client1.key #Cl\u00e9 HMAC \ntls-auth ta.key  1  #v\u00e9rifier les certificats server pour \u00e9viter les \"man-in-the-middle's attack\" \nremote-cert-tls server # S\u00e9curite \nnobind #connexion persistante \npersist-key\npersist-tun #activation de la compression \ncomp-lzo #niveau de verbosit\u00e9 (1 \u00e0 9) \nverb  3    Warning  Pour les clients Windows OpenVPN, copier le client.conf en client.ovpn",
            "title": "Cr\u00e9ation du fichier client.conf"
        },
        {
            "location": "/AdminSys/OpenVPN/#creation-dune-tarball-client",
            "text": "/etc/openvpn/clientconf/client1$ sudo tar czfv client.tar.gz *",
            "title": "Cr\u00e9ation d'une tarball client"
        },
        {
            "location": "/AdminSys/OpenVPN/#test-de-la-connexion-linux",
            "text": "installation du client   apt install openvpn   copie des fichier de conf et cert clients & untar   sudo cp client.tar.gz /etc/openvpn/client\nsudo tar xvzf client.tar.gz   lancement de la connexion   sudo openvpn --config /etc/openvpn/client   Note  Sur AWS il faut cr\u00e9er une r\u00e8gle de flux via le groupe de s\u00e9curit\u00e9 configur\u00e9 sur l'instance en question, dans notre cas il faut autoris\u00e9 le flux entrant (https) 443.    r\u00e9sultat si cela fonctionne:   ...\nSat Mar  24   11 :04:19  2018  /sbin/ip route add  \"ip publique\" /32 via  \"passerelle\" \nSat Mar  24   11 :04:19  2018  /sbin/ip route add  0 .0.0.0/1 via  10 .8.0.5\nSat Mar  24   11 :04:19  2018  /sbin/ip route add  128 .0.0.0/1 via  10 .8.0.5\nSat Mar  24   11 :04:19  2018  /sbin/ip route add  10 .8.0.1/32 via  10 .8.0.5\nSat Mar  24   11 :04:19  2018  Initialization Sequence Completed",
            "title": "test de la connexion (linux)"
        },
        {
            "location": "/AdminSys/OpenVPN/#configuration-du-nat",
            "text": "",
            "title": "Configuration du NAT"
        },
        {
            "location": "/AdminSys/OpenVPN/#remote-cert-tls-serverautorisation-du-forward-sur-la-vm",
            "text": "dans  /etc/sysctl.conf  on d\u00e9commente  net.ipv4.ip_forward  =   1",
            "title": "remote-cert-tls serverAutorisation du forward sur la VM"
        },
        {
            "location": "/AdminSys/OpenVPN/#regle-de-nat",
            "text": "sudo iptables -t nat -A POSTROUTING -s  10 .8.0.0/24 -o eth0 -j MASQUERADE",
            "title": "R\u00e8gle de NAT"
        },
        {
            "location": "/AdminSys/OpenVPN/#rendre-la-regle-persistante",
            "text": "installation de  iptables-persistent   sudo apt install iptables-persistent   Save des rules   sudo iptables-save   check    sudo iptables -t nat -L -v #result         \n...\nChain POSTROUTING  ( policy ACCEPT  6  packets,  491  bytes ) \n pkts bytes target     prot opt in     out      source                destination         \n     0       0  MASQUERADE  all  --  any    eth0    ip-10-8-0-0.us-west-2.compute.internal/24  anywhere",
            "title": "Rendre la r\u00e8gle persistante"
        },
        {
            "location": "/AdminSys/BDD/Environnement R\u00e9seau/",
            "text": "Environnement r\u00e9seau\n\u00b6\n\n\nImportant\n\u00b6\n\n\nLa base de donn\u00e9 est un \u00e9lement critique et sensible d'un architecture pour ces 2 raisons:\n\n\n\n\n\n\nIl n'est pas con\u00e7u pour se prot\u00e9ger efficacement des attaques\n\n\nil contient des donn\u00e9es, c'est \u00e0 dire la seule information p\u00e9renne dans notre architecture\n\n\n\n\n\n\nC'est pour cela qu'il faut l'isoler au maximum :\n \n\n\n\u00e0 ne pas faire\n\u00b6\n\n\n\n\n\u00e0 ne pas faire non plus\n\u00b6\n\n\n\n\nbien de faire\n\u00b6\n\n\n\n\nmeilleur chose \u00e0 faire\n\u00b6",
            "title": "Environnement r\u00e9seau"
        },
        {
            "location": "/AdminSys/BDD/Environnement R\u00e9seau/#environnement-reseau",
            "text": "",
            "title": "Environnement r\u00e9seau"
        },
        {
            "location": "/AdminSys/BDD/Environnement R\u00e9seau/#important",
            "text": "La base de donn\u00e9 est un \u00e9lement critique et sensible d'un architecture pour ces 2 raisons:    Il n'est pas con\u00e7u pour se prot\u00e9ger efficacement des attaques  il contient des donn\u00e9es, c'est \u00e0 dire la seule information p\u00e9renne dans notre architecture    C'est pour cela qu'il faut l'isoler au maximum :",
            "title": "Important"
        },
        {
            "location": "/AdminSys/BDD/Environnement R\u00e9seau/#a-ne-pas-faire",
            "text": "",
            "title": "\u00e0 ne pas faire"
        },
        {
            "location": "/AdminSys/BDD/Environnement R\u00e9seau/#a-ne-pas-faire-non-plus",
            "text": "",
            "title": "\u00e0 ne pas faire non plus"
        },
        {
            "location": "/AdminSys/BDD/Environnement R\u00e9seau/#bien-de-faire",
            "text": "",
            "title": "bien de faire"
        },
        {
            "location": "/AdminSys/BDD/Environnement R\u00e9seau/#meilleur-chose-a-faire",
            "text": "",
            "title": "meilleur chose \u00e0 faire"
        },
        {
            "location": "/AdminSys/BDD/MySQL/",
            "text": "MYSQL\n\u00b6\n\n\nLe fichier de configuration\n\u00b6\n\n\n\n\nle fichier de configuration est le fichier \nmy.cnf\n qui se trouve habituellement dans \n/etc/mysql/\n sinon dans \n/etc/mysql/mariadb.conf.d\n pour mariaDB\n\n\n\n\nGrandes lignes my.cnf\n\u00b6\n\n\n\n\nle port d'\u00e9coute de \nMySQLd\n : \n3306\n\n\ndiff\u00e9rents dossiers utilis\u00e9s par \nMySQLd\n\n\nle nom d'utilisateur des processus de \nMySQLd\n (qui est \nmysql\n)\n\n\ndes param\u00e8tres li\u00e9s \u00e0 la performance (taille m\u00e9moire allou\u00e9e, taille du cache ...)\n\n\nles fichiers de log \n\n\n\n\nFichier de log\n\u00b6\n\n\nDans my.cnf d\u00e9commenter :\n\n\n\n\ngeneral_log_file = /var/log/mysql/mysql.log\n\n\ngeneral_log = 1\n\n\n\n\n\n\nWarning\n\n\nlogs tr\u00e8s utiles mais consommateurs de ressources \n tueurs de perfs.\nNe pas hesiter \u00e0 les activer pour du test mais d\u00e9sactiver en production !\n\n\n\n\nChanger le r\u00e9pertoire de logs MyQSL\n\u00b6\n\n\n\n\nN\u00e9cessaire si trop d'IO sur le disque (log + datas)\n\n\n\n\nmy.cnf : \n\n\n\n\nlog-bin=/'chemindunouveaur\u00e9pertoire'/mysql-bin\n \n\n\n\n\n\n\nInfo\n\n\nPurger un maximum de logs (PURGE BINLOG...) pour ne pas avoir trop de fichiers \u00e0 transf\u00e9rer.\n\n\n\n\nArr\u00eater le service\n \n\n\nservice mysql stop\n\n\n\n\nD\u00e9placer les fichiers vers le nouveau r\u00e9pertoire\n \n\n\nmv /var/lib/mysql /mysql-bin.* /chemindunouveaur\u00e9pertoire/mysql-bin\n\n\n\n\nRed\u00e9marrer le service\n\n\n service mysql start\n\n\n\n\nLa directive bind-address\n\u00b6\n\n\n\n\nCette directive sert \u00e0 restreindre l'acc\u00e8s au service MySQLd. Seule la machine (et donc les logiciels outils install\u00e9s dessus) indiqu\u00e9e dans cette directive peut acc\u00e9der au service.\n\n\n\n\nSi on veut acc\u00e9der que par la machine local (localhost) :\n\n\nbind-address \n=\n \n127\n.0.0.1\n\n\n\n\nSi on veut uniquement un serveur distant :\n \n\n\nbind-address \n=\n \n\"ip du serveur\"\n\n\n\n\n\nSi on veut ouvrir \u00e0 tous les serveurs :\n \n\n\nbind-address \n=\n \n0\n.0.0.0\n\n\n\n\n\n\nInfo\n\n\nIl n'y a pas de demie mesure, la s\u00e9curisation doit se faire en amont pour les serveur de donn\u00e9es.\n\n\n\n\nS\u00e9curisation du service MySQL\n\u00b6\n\n\nmysql_secure_installation\n\n\n\n\nCela permet de :\n \n\n\n\n\ns'assurer de bien avoir un mot de passe root MySQL \n\n\nemp\u00eacher d'acc\u00e9der en root MySQL depuis le r\u00e9seau (par le socket MySQL ; par contre on acc\u00e8de \u00e0 distance par SSH et ensuite on se connecte \u00e0 SQL une fois rentr\u00e9 dans la machine donc en \u00ab local \u00bb.\n\n\nemp\u00eacher les connexions anonymes\n\n\nsupprimer la base de test (accessible par d\u00e9faut par tous, m\u00eame anonymes) et les privil\u00e8ges qui autorisent tout le monde \u00e0 acc\u00e9der \u00e0 toutes les bases commen\u00e7ant par test_\n\n\n\n\nCommandes MySQL (base)\n\u00b6\n\n\nSe connecter\n\n\nmysql -h \n'host '\n-u \n'user'\n -p \n\n\n\n\n\n\n-h\n premet de pr\u00e9ciser l'h\u00f4te (host)\n\n\n-u\n permet de pr\u00e9ciser l'utilisateur (user)\n\n\n-p\n indique que nous allons ensuite taper le mot de passe (password)\n\n\n\n\nLister les bases\n\n\nSHOW\n \nDATABASES\n;\n\n\n\n\n\nSelectionner une base\n\n\nUSE\n \n\"nom de la bdd\"\n;\n\n\n\n\n\nLister les tables d'une base\n\n\n\n\nsi base selectionn\u00e9\n\n\n\n\nSHOW\n \nTABLES\n;\n\n\n\n\n\n\n\nsinon\n\n\n\n\nSHOW\n \nTABLES\n \nFROM\n \n\"nom de la bdd\"\n;\n\n\n\n\nCr\u00e9er une base\n \n\n\nCREATE\n \nDATABASE\n \n\"nom bdd\"\n;\n\n\n\n\n\nCr\u00e9er un utilisateur\n \n\n\nCREATE\n \nUSER\n \n'user'\n@\n'localhost'\n;\n\n\n\n\n\nAffecter une mot de passe \u00e0 un utilisateur\n\n\nSET\n \nPASSWORD\n \nFOR\n \n'user'\n \n=\n \nPASSWORD\n(\n'mot de passe'\n);\n\n\n\n\n\nDonner tout les droits \u00e0 un utilisateur sur un BD (voir \"Les privil\u00e8ges\" pour les types de droits)\n\n\nGRANT\n \nALL\n \nPRIVILEGES\n \nON\n \n'BASE.*'\n \nTO\n \nuser\n@\nlocalhost\n \nIDENTIFIED\n \nby\n \n'mot de passe'\n;\n\n\n\n\n\nRevoquer les droits d'un utilisateur\n\n\nREVOKE\n \nALL\n \nPRIVILEGES\n \nON\n \n'BASE.*'\n \nFROM\n \nuser\n;\n\n\n\n\n\nSupprimer un compte utilisateur\n\n\nDROP\n \nuser\n \n'test'\n@\n'localhost'\n;\n\n\n\n\n\nLes privil\u00e8ges (droits)\n\u00b6\n\n\n\n\nInfo\n\n\nEn mati\u00e8re de bases de donn\u00e9es, on parle de \nprivil\u00e8ges\n pour parler des \ndroits\n. Ces privil\u00e8ges s'appliquent \u00e0 des comptes. Tel compte \u00e0 le droit de faire telle action.\n\n\n\n\nLes information des utilisateurs et des privil\u00e8ges sont stock\u00e9es dans la base de donn\u00e9es mysql :\n\n\n\n\ntable user \u27a1\ufe0f utilisateurs (privil\u00e8ges globaux) \n\n\n\n\nQuatre tables pour stocker les privil\u00e8ges users\n\u00b6\n\n\n\n\ndb\n : privil\u00e8ges au niveau des bases de donn\u00e9es. \n\n\ntables_priv\n : privil\u00e8ges au niveau des tables. \n\n\ncolumns_priv\n : privil\u00e8ges au niveau des colonnes. \n\n\nprocs_priv\n : privil\u00e8ges au niveau des routines (proc\u00e9dures et fonctions stock\u00e9es).\n\n\n\n\nDroits principaux\n\u00b6\n\n\n\n\nGRANT\n : le droit de donner des droits\n\n\nCREATE\n : Cr\u00e9er des utilisateurs, des bases, des tables ou des index\n\n\nDROP\n : Supprimer des utilisateurs, des bases, des tables ou des index\n\n\nALTER\n : modifier la structure de tables\n\n\nDELETE\n : Supprimer des donn\u00e9es\n\n\nINSERT\n : Ajouter des donn\u00e9es\n\n\nUPDATE\n : Modifier des donn\u00e9es\n\n\n\n\n\n\nExample\n\n\n\n\nAjouter le droit de faire un INSERT sur la table \u00ab table1 \u00bb pour l\u2019utilisateur \u201cinvite\u201d : \n\n\n\n\nGRANT\n \nINSERT\n \nON\n \ntable1\n \nTO\n \ninvite\n;\n\n\n\n\n\n\n\nAttribuer tous les droits \u00e0 l\u2019utilisateur \u201cinvite\u201d sur la base de donn\u00e9es utilis\u00e9e : \n\n\n\n\nGRANT\n \nALL\n \nON\n \n*\n \nTO\n \ninvite\n;\n\n\n\n\n\n\n\nRetirer le droit de faire un INSERT sur toutes les tables de la BDD utilis\u00e9e pour l\u2019utilisateur \u00ab invite \u00bb :\n\n\n\n\nREVOKE\n \nINSERT\n \nON\n \n*\n \nFROM\n \ninvite\n;\n\n\n\n\n\n\n\nRetirer le droit de faire un INSERT sur la table \u00ab table1 \u00bb pour l\u2019utilisateur \u201cinvite\u201d : \n\n\n\n\nREVOKE\n \nINSERT\n \nON\n \ntable1\n \nFROM\n \ninvite\n;\n\n\n\n\n\n\n\nRetirer tous les droits \u00e0 l\u2019utilisateur \u201cinvite\u201d sur toutes les tables de la BDD utilis\u00e9e : \n\n\n\n\nREVOKE\n \nALL\n \nPRIVILEGES\n \nON\n \n*\n \nFROM\n \ninvite\n\n\n\n\n\n\n\n\n\nDanger\n\n\nne jamais donner \nWITH GRANT OPTION\n \u00e0 un utilisateur non         administrateur syst\u00e8me \n\n\n\n\nSupervision\n\u00b6\n\n\nMySQLTuner\n\u00b6\n\n\n\n\nScript \nPERL\n qui permet d'optimiser les performances d'un serveur de bases de donn\u00e9es MySQL en faisant un diagnostic, voir: \nhttps://github.com/major/MySQLTuner-perl\n\n\n\n\nMytop\n\u00b6\n\n\n\n\nOutil \"top like\" \u00e9crit en PERL mais pour les base de donn\u00e9es. (int\u00e9gr\u00e9 \u00e0 deb9)\n\n\n\n\nutilisation\n \n\n\nmytop --prompt -d \n\"base de donn\u00e9e\"\n\n\n\n\n\nSi cela ne fonctionne pas , installer les d\u00e9pendances PERL suivante :\n\n\n apt-get install libconfig-inifiles-perl\n\n\n\n\nMysql only :\n\n\nfichier de confg d'exemple dans /usr/share /doc/mysql-server-5.X.XX\n\n\nTuning\n\u00b6\n\n\nkey_buffer\n \n\n\nSHOW\n \nGLOBAL\n \nSTATUS\n\n\n\n\n\nligne \nkey_reads/key_read_requests\n radio < 0.01 pour \u00e9viter acc\u00e8s disque \n\n\nsinon augmenter le \nkey_buffer\n\n\nthread_concurrency (machine multicoeur)\n\n\nValeur \u00e0 x2 nombre de coeurs\n\n\nActiver le log des requ\u00eates lentes\n \n\n\nslow_query_log=1\n \n\n\nslow_query_log_file=/var/log/mysql/mysql-slow.log\n \n\n\nEt demander d'indiquer le temps le plus lent\n\n\nlong_query_time = 2\n \n\n\nAnalyser les r\u00e9sultats\n\n\ntail -n \n1000\n /var/log/mysql/mysql-slow.log \n\n\n\ncheck \"connection leakage\"\n\n\nSHOW\n \nPROCESSLIST\n;\n\n\n\n\nAnalyser les verrous\n\n\nSHOW\n \nSTATUS\n \nLIKE\n \n'Table%'\n;\n\n\nSHOW\n \nENGINE\n \nINNODB\n \nSTATUS\n \n(\npour\n \ninnodb\n)\n\n\n\n\n\nSauvegarde\n\u00b6\n\n\nmysqldump (\u00e0 chaud)\n\u00b6\n\n\nbases pr\u00e9cises\n\n\n mysqldump --user\n=\nroot -p --databases mysql wiki > wiki_bd_backup.sql\n\n\n\nall base\n\n\nmysqldump --user\n=\nroot -p --all-databases \n|\n gzip > save.mysql.sql.gz\n\n\n\n\nbackup \u00e0 froid :\n\u00b6\n\n\n\n\nElle consiste \u00e0 sauvegarder les fichiers \u201cphysiques\u201d du serveur de donn\u00e9es. Elle n\u00e9cessite, par d\u00e9finition l\u2019arr\u00eat du serveur. \n\n\n\n\nAucune activit\u00e9 n\u2019est donc possible. C\u2019est un avantage pour le DBA mais il est parfois difficile voire impossible de stopper l\u2019activit\u00e9 en cours. En revanche si l\u2019on dispose d\u2019un r\u00e9plica on peut tout \u00e0 fait l\u2019envisager. Celui ci se \u201cre synchronisera\u201d \u00e0 son red\u00e9marrage. La sauvegarde \u00e0 froid consiste \u00e0 archiver certains fichiers du serveur\n**/var/lib/mysql/**\n et \n**/var/log/mysql.log**\n \n\n\nPour les tables MyISAM il s\u2019agit plus pr\u00e9cisement des fichiers \n.FRM\n, \n.MYI\n et \n.MYD\n. Pour les tables InnoDB : \n.FRM\n, les fichiers de donn\u00e9es (ibdata), les fichiers des tables .ibd (si vous \u00eates en innodb_file_per_table) et les fichiers journaux (iblogfile) interm\u00e9diaires.\n\n\nRestauration\n\u00b6\n\n\ndump en selectionnant la base\n\n\nuse\n \ndatabase\n;\n\n\nsource\n \n/\nchemin\n/\ndu\n/\nfichier\n/\nbackup\n.\nsql\n\n\n\n\n\nou pour le scripting\n \n\n\nmysql -u myuser -p < /chemin/du/fichier/backup.sql \n(\n automatisation totale avec --password \n=\n < mot de passe >\n\n\n\n\n\n\nInfo\n\n\npour restaurer \u00e0 froid, il suffit de couper le service et de d\u00e9poser les fichiers aux bons emplacements\n\n\n\n\nAutomatisation des sauvegardes\n\u00b6\n\n\nautomysqlbackup, Script \"tout en un\"\n\n\n\n\nNotification par mail\n\n\nCompression et chiffrement des sauvegardes\n\n\nRotation des sauvegardes configurable \n\n\nSauvegardes incr\u00e9mentales\n\n\n\n\napt-get install automysqlbackup\n\n\n\n\n\u00e0 configure dans  \n/etc/default/automysqlbackup\n\n\nrsnapshot\n\n\napt-get install rsnapshot\n\n\n\n\nvoir \nhttps://wiki.debian-fr.xyz/Rsnapshot\n\n\noutil de backup \u00e0 chaud\n\n\n\n\nhttps://www.percona.com/doc/percona-xtrabackup/LATEST/index.html\n\n\n\n\nMigration Mysql vers MariaDB (deb<9)\n\u00b6\n\n\nMaj du serveur Debian\n\n\napt-get update \n&&\n apt-get upgrade\napt-get install python-software-properties software-properties-common\n\n\n\nAjout des d\u00e9pot MariaDB voir\n \n\n\n\n\nhttps://downloads.mariadb.org/mariadb/repositories/\n\n\n\n\nupdate des paquets et installe\n\n\napt-get update \n&&\n apt-get install mariadb-server\n\n\n\n\n\n\nInfo\n\n\nSi Mysql > 5.5 migration directement sur 10.1 sinon 5.5\n\n\n\n\nCluser MariaDB/Galera\n\u00b6\n\n\n\n\nCluster synchro en ma\u00eetre-ma\u00eetre\n\n\n\n\n\n\nInfo\n\n\nEn production favoriser 3 serveurs minimum\n\n\n\n\nCr\u00e9ation du cluster\n\n\nservice mysql stop\nmysqld --wsrep-new-cluster\n\n#or\n\ngalera_new_cluster\n\n\nsur les autres noeuds\n\n\nservice mysql stop\nmysqld --wsrep_cluster_address\n=\ngcomm://ip\n(\nou nom DNS du serveur qui a cr\u00e9\u00e9 le cluster\n)\n\n\n\n\nvoir le statut de la syncrho\n\n\nSHOW\n \nSTATUS\n \nLIKE\n \n'wsrep_%'\n\n\n\n\n\n\n\nTip\n\n\nconfiguration affin\u00e9e voir \nhttp://www.severalnines.com/New-Galera-Configurator/index.html\n\n\n\n\nTroubleshoot\n\u00b6\n\n\nTable corrompue\n\u00b6\n\n\nMessage d'erreur\n \n\n\n\n\n\u201cTable is marked as crashed and should be repaired\u201d \n\n\n\n\nSolution\n\n\nrepair\n \ntable\n \nbd\n.\ntablename\n;\n\n\n\n\n\nR\u00e9cup\u00e9ration de mot de passe root MySQL\n\u00b6\n\n\narr\u00eat du service et red\u00e9marrage en mode rescue\n\n\nsystemctl stop mysql \n&&\n mysqld_safe --skip-grant-tables \n&\n \n\n\n\n\nConnexion en root\n \n\n\nmysql -u root\n\n\n\ndans la console mysql\n\n\n#select base\n\n\nmysql\n>\n \nuse\n \nmysql\n;\n \n\n#change password\n\n\nmysql\n>\n \nupdate\n \nuser\n \nset\n \npassword\n=\nPASSWORD\n(\n\"nouveaumotdepasse\"\n)\n \nwhere\n \nuser\n=\n'root'\n;\n \n\n#save\n\n\nmysql\n>\n \nflush\n \nprivileges\n;\n \n\n#leave\n\n\nmysql\n>\n \nquit\n \n\n\n\narr\u00eat du mode rescue\n\n\nsystemctl stop mysql\n\n\n\n\ntest de connexion\n\n\nmysql -u root -p",
            "title": "MYSQL"
        },
        {
            "location": "/AdminSys/BDD/MySQL/#mysql",
            "text": "",
            "title": "MYSQL"
        },
        {
            "location": "/AdminSys/BDD/MySQL/#le-fichier-de-configuration",
            "text": "le fichier de configuration est le fichier  my.cnf  qui se trouve habituellement dans  /etc/mysql/  sinon dans  /etc/mysql/mariadb.conf.d  pour mariaDB",
            "title": "Le fichier de configuration"
        },
        {
            "location": "/AdminSys/BDD/MySQL/#grandes-lignes-mycnf",
            "text": "le port d'\u00e9coute de  MySQLd  :  3306  diff\u00e9rents dossiers utilis\u00e9s par  MySQLd  le nom d'utilisateur des processus de  MySQLd  (qui est  mysql )  des param\u00e8tres li\u00e9s \u00e0 la performance (taille m\u00e9moire allou\u00e9e, taille du cache ...)  les fichiers de log",
            "title": "Grandes lignes my.cnf"
        },
        {
            "location": "/AdminSys/BDD/MySQL/#fichier-de-log",
            "text": "Dans my.cnf d\u00e9commenter :   general_log_file = /var/log/mysql/mysql.log  general_log = 1    Warning  logs tr\u00e8s utiles mais consommateurs de ressources   tueurs de perfs.\nNe pas hesiter \u00e0 les activer pour du test mais d\u00e9sactiver en production !",
            "title": "Fichier de log"
        },
        {
            "location": "/AdminSys/BDD/MySQL/#changer-le-repertoire-de-logs-myqsl",
            "text": "N\u00e9cessaire si trop d'IO sur le disque (log + datas)   my.cnf :    log-bin=/'chemindunouveaur\u00e9pertoire'/mysql-bin      Info  Purger un maximum de logs (PURGE BINLOG...) pour ne pas avoir trop de fichiers \u00e0 transf\u00e9rer.   Arr\u00eater le service    service mysql stop  D\u00e9placer les fichiers vers le nouveau r\u00e9pertoire    mv /var/lib/mysql /mysql-bin.* /chemindunouveaur\u00e9pertoire/mysql-bin  Red\u00e9marrer le service   service mysql start",
            "title": "Changer le r\u00e9pertoire de logs MyQSL"
        },
        {
            "location": "/AdminSys/BDD/MySQL/#la-directive-bind-address",
            "text": "Cette directive sert \u00e0 restreindre l'acc\u00e8s au service MySQLd. Seule la machine (et donc les logiciels outils install\u00e9s dessus) indiqu\u00e9e dans cette directive peut acc\u00e9der au service.   Si on veut acc\u00e9der que par la machine local (localhost) :  bind-address  =   127 .0.0.1  Si on veut uniquement un serveur distant :    bind-address  =   \"ip du serveur\"   Si on veut ouvrir \u00e0 tous les serveurs :    bind-address  =   0 .0.0.0   Info  Il n'y a pas de demie mesure, la s\u00e9curisation doit se faire en amont pour les serveur de donn\u00e9es.",
            "title": "La directive bind-address"
        },
        {
            "location": "/AdminSys/BDD/MySQL/#securisation-du-service-mysql",
            "text": "mysql_secure_installation  Cela permet de :     s'assurer de bien avoir un mot de passe root MySQL   emp\u00eacher d'acc\u00e9der en root MySQL depuis le r\u00e9seau (par le socket MySQL ; par contre on acc\u00e8de \u00e0 distance par SSH et ensuite on se connecte \u00e0 SQL une fois rentr\u00e9 dans la machine donc en \u00ab local \u00bb.  emp\u00eacher les connexions anonymes  supprimer la base de test (accessible par d\u00e9faut par tous, m\u00eame anonymes) et les privil\u00e8ges qui autorisent tout le monde \u00e0 acc\u00e9der \u00e0 toutes les bases commen\u00e7ant par test_",
            "title": "S\u00e9curisation du service MySQL"
        },
        {
            "location": "/AdminSys/BDD/MySQL/#commandes-mysql-base",
            "text": "Se connecter  mysql -h  'host ' -u  'user'  -p    -h  premet de pr\u00e9ciser l'h\u00f4te (host)  -u  permet de pr\u00e9ciser l'utilisateur (user)  -p  indique que nous allons ensuite taper le mot de passe (password)   Lister les bases  SHOW   DATABASES ;   Selectionner une base  USE   \"nom de la bdd\" ;   Lister les tables d'une base   si base selectionn\u00e9   SHOW   TABLES ;    sinon   SHOW   TABLES   FROM   \"nom de la bdd\" ;   Cr\u00e9er une base    CREATE   DATABASE   \"nom bdd\" ;   Cr\u00e9er un utilisateur    CREATE   USER   'user' @ 'localhost' ;   Affecter une mot de passe \u00e0 un utilisateur  SET   PASSWORD   FOR   'user'   =   PASSWORD ( 'mot de passe' );   Donner tout les droits \u00e0 un utilisateur sur un BD (voir \"Les privil\u00e8ges\" pour les types de droits)  GRANT   ALL   PRIVILEGES   ON   'BASE.*'   TO   user @ localhost   IDENTIFIED   by   'mot de passe' ;   Revoquer les droits d'un utilisateur  REVOKE   ALL   PRIVILEGES   ON   'BASE.*'   FROM   user ;   Supprimer un compte utilisateur  DROP   user   'test' @ 'localhost' ;",
            "title": "Commandes MySQL (base)"
        },
        {
            "location": "/AdminSys/BDD/MySQL/#les-privileges-droits",
            "text": "Info  En mati\u00e8re de bases de donn\u00e9es, on parle de  privil\u00e8ges  pour parler des  droits . Ces privil\u00e8ges s'appliquent \u00e0 des comptes. Tel compte \u00e0 le droit de faire telle action.   Les information des utilisateurs et des privil\u00e8ges sont stock\u00e9es dans la base de donn\u00e9es mysql :   table user \u27a1\ufe0f utilisateurs (privil\u00e8ges globaux)",
            "title": "Les privil\u00e8ges (droits)"
        },
        {
            "location": "/AdminSys/BDD/MySQL/#quatre-tables-pour-stocker-les-privileges-users",
            "text": "db  : privil\u00e8ges au niveau des bases de donn\u00e9es.   tables_priv  : privil\u00e8ges au niveau des tables.   columns_priv  : privil\u00e8ges au niveau des colonnes.   procs_priv  : privil\u00e8ges au niveau des routines (proc\u00e9dures et fonctions stock\u00e9es).",
            "title": "Quatre tables pour stocker les privil\u00e8ges users"
        },
        {
            "location": "/AdminSys/BDD/MySQL/#droits-principaux",
            "text": "GRANT  : le droit de donner des droits  CREATE  : Cr\u00e9er des utilisateurs, des bases, des tables ou des index  DROP  : Supprimer des utilisateurs, des bases, des tables ou des index  ALTER  : modifier la structure de tables  DELETE  : Supprimer des donn\u00e9es  INSERT  : Ajouter des donn\u00e9es  UPDATE  : Modifier des donn\u00e9es    Example   Ajouter le droit de faire un INSERT sur la table \u00ab table1 \u00bb pour l\u2019utilisateur \u201cinvite\u201d :    GRANT   INSERT   ON   table1   TO   invite ;    Attribuer tous les droits \u00e0 l\u2019utilisateur \u201cinvite\u201d sur la base de donn\u00e9es utilis\u00e9e :    GRANT   ALL   ON   *   TO   invite ;    Retirer le droit de faire un INSERT sur toutes les tables de la BDD utilis\u00e9e pour l\u2019utilisateur \u00ab invite \u00bb :   REVOKE   INSERT   ON   *   FROM   invite ;    Retirer le droit de faire un INSERT sur la table \u00ab table1 \u00bb pour l\u2019utilisateur \u201cinvite\u201d :    REVOKE   INSERT   ON   table1   FROM   invite ;    Retirer tous les droits \u00e0 l\u2019utilisateur \u201cinvite\u201d sur toutes les tables de la BDD utilis\u00e9e :    REVOKE   ALL   PRIVILEGES   ON   *   FROM   invite     Danger  ne jamais donner  WITH GRANT OPTION  \u00e0 un utilisateur non         administrateur syst\u00e8me",
            "title": "Droits principaux"
        },
        {
            "location": "/AdminSys/BDD/MySQL/#supervision",
            "text": "",
            "title": "Supervision"
        },
        {
            "location": "/AdminSys/BDD/MySQL/#mysqltuner",
            "text": "Script  PERL  qui permet d'optimiser les performances d'un serveur de bases de donn\u00e9es MySQL en faisant un diagnostic, voir:  https://github.com/major/MySQLTuner-perl",
            "title": "MySQLTuner"
        },
        {
            "location": "/AdminSys/BDD/MySQL/#mytop",
            "text": "Outil \"top like\" \u00e9crit en PERL mais pour les base de donn\u00e9es. (int\u00e9gr\u00e9 \u00e0 deb9)   utilisation    mytop --prompt -d  \"base de donn\u00e9e\"   Si cela ne fonctionne pas , installer les d\u00e9pendances PERL suivante :   apt-get install libconfig-inifiles-perl  Mysql only :  fichier de confg d'exemple dans /usr/share /doc/mysql-server-5.X.XX",
            "title": "Mytop"
        },
        {
            "location": "/AdminSys/BDD/MySQL/#tuning",
            "text": "key_buffer    SHOW   GLOBAL   STATUS   ligne  key_reads/key_read_requests  radio < 0.01 pour \u00e9viter acc\u00e8s disque   sinon augmenter le  key_buffer  thread_concurrency (machine multicoeur)  Valeur \u00e0 x2 nombre de coeurs  Activer le log des requ\u00eates lentes    slow_query_log=1    slow_query_log_file=/var/log/mysql/mysql-slow.log    Et demander d'indiquer le temps le plus lent  long_query_time = 2    Analyser les r\u00e9sultats  tail -n  1000  /var/log/mysql/mysql-slow.log   check \"connection leakage\"  SHOW   PROCESSLIST ;   Analyser les verrous  SHOW   STATUS   LIKE   'Table%' ;  SHOW   ENGINE   INNODB   STATUS   ( pour   innodb )",
            "title": "Tuning"
        },
        {
            "location": "/AdminSys/BDD/MySQL/#sauvegarde",
            "text": "",
            "title": "Sauvegarde"
        },
        {
            "location": "/AdminSys/BDD/MySQL/#mysqldump-a-chaud",
            "text": "bases pr\u00e9cises   mysqldump --user = root -p --databases mysql wiki > wiki_bd_backup.sql  all base  mysqldump --user = root -p --all-databases  |  gzip > save.mysql.sql.gz",
            "title": "mysqldump (\u00e0 chaud)"
        },
        {
            "location": "/AdminSys/BDD/MySQL/#backup-a-froid",
            "text": "Elle consiste \u00e0 sauvegarder les fichiers \u201cphysiques\u201d du serveur de donn\u00e9es. Elle n\u00e9cessite, par d\u00e9finition l\u2019arr\u00eat du serveur.    Aucune activit\u00e9 n\u2019est donc possible. C\u2019est un avantage pour le DBA mais il est parfois difficile voire impossible de stopper l\u2019activit\u00e9 en cours. En revanche si l\u2019on dispose d\u2019un r\u00e9plica on peut tout \u00e0 fait l\u2019envisager. Celui ci se \u201cre synchronisera\u201d \u00e0 son red\u00e9marrage. La sauvegarde \u00e0 froid consiste \u00e0 archiver certains fichiers du serveur **/var/lib/mysql/**  et  **/var/log/mysql.log**    Pour les tables MyISAM il s\u2019agit plus pr\u00e9cisement des fichiers  .FRM ,  .MYI  et  .MYD . Pour les tables InnoDB :  .FRM , les fichiers de donn\u00e9es (ibdata), les fichiers des tables .ibd (si vous \u00eates en innodb_file_per_table) et les fichiers journaux (iblogfile) interm\u00e9diaires.",
            "title": "backup \u00e0 froid :"
        },
        {
            "location": "/AdminSys/BDD/MySQL/#restauration",
            "text": "dump en selectionnant la base  use   database ;  source   / chemin / du / fichier / backup . sql   ou pour le scripting    mysql -u myuser -p < /chemin/du/fichier/backup.sql  (  automatisation totale avec --password  =  < mot de passe >   Info  pour restaurer \u00e0 froid, il suffit de couper le service et de d\u00e9poser les fichiers aux bons emplacements",
            "title": "Restauration"
        },
        {
            "location": "/AdminSys/BDD/MySQL/#automatisation-des-sauvegardes",
            "text": "automysqlbackup, Script \"tout en un\"   Notification par mail  Compression et chiffrement des sauvegardes  Rotation des sauvegardes configurable   Sauvegardes incr\u00e9mentales   apt-get install automysqlbackup  \u00e0 configure dans   /etc/default/automysqlbackup  rsnapshot  apt-get install rsnapshot  voir  https://wiki.debian-fr.xyz/Rsnapshot  outil de backup \u00e0 chaud   https://www.percona.com/doc/percona-xtrabackup/LATEST/index.html",
            "title": "Automatisation des sauvegardes"
        },
        {
            "location": "/AdminSys/BDD/MySQL/#migration-mysql-vers-mariadb-deb9",
            "text": "Maj du serveur Debian  apt-get update  &&  apt-get upgrade\napt-get install python-software-properties software-properties-common  Ajout des d\u00e9pot MariaDB voir     https://downloads.mariadb.org/mariadb/repositories/   update des paquets et installe  apt-get update  &&  apt-get install mariadb-server   Info  Si Mysql > 5.5 migration directement sur 10.1 sinon 5.5",
            "title": "Migration Mysql vers MariaDB (deb&lt;9)"
        },
        {
            "location": "/AdminSys/BDD/MySQL/#cluser-mariadbgalera",
            "text": "Cluster synchro en ma\u00eetre-ma\u00eetre    Info  En production favoriser 3 serveurs minimum   Cr\u00e9ation du cluster  service mysql stop\nmysqld --wsrep-new-cluster #or \ngalera_new_cluster \nsur les autres noeuds  service mysql stop\nmysqld --wsrep_cluster_address = gcomm://ip ( ou nom DNS du serveur qui a cr\u00e9\u00e9 le cluster )   voir le statut de la syncrho  SHOW   STATUS   LIKE   'wsrep_%'    Tip  configuration affin\u00e9e voir  http://www.severalnines.com/New-Galera-Configurator/index.html",
            "title": "Cluser MariaDB/Galera"
        },
        {
            "location": "/AdminSys/BDD/MySQL/#troubleshoot",
            "text": "",
            "title": "Troubleshoot"
        },
        {
            "location": "/AdminSys/BDD/MySQL/#table-corrompue",
            "text": "Message d'erreur     \u201cTable is marked as crashed and should be repaired\u201d    Solution  repair   table   bd . tablename ;",
            "title": "Table corrompue"
        },
        {
            "location": "/AdminSys/BDD/MySQL/#recuperation-de-mot-de-passe-root-mysql",
            "text": "arr\u00eat du service et red\u00e9marrage en mode rescue  systemctl stop mysql  &&  mysqld_safe --skip-grant-tables  &    Connexion en root    mysql -u root  dans la console mysql  #select base  mysql >   use   mysql ;   #change password  mysql >   update   user   set   password = PASSWORD ( \"nouveaumotdepasse\" )   where   user = 'root' ;   #save  mysql >   flush   privileges ;   #leave  mysql >   quit    arr\u00eat du mode rescue  systemctl stop mysql  test de connexion  mysql -u root -p",
            "title": "R\u00e9cup\u00e9ration de mot de passe root MySQL"
        },
        {
            "location": "/AdminSys/BDD/PostgreSQL/",
            "text": "PostgreSQL\n\u00b6\n\n\n\u2139\ufe0f pour l'installation chercher LAMP\n\n\nCommande\n\u00b6\n\n\n\n\nModifier le mot de passe de l'utilisateur syst\u00e8me postgres \n\n\n\n\npasswd postgres\n\n\n\n\n\n\nModifier le mot de passe de l'utilisateur administrateur de la base postgres \n\n\n\n\nsu - postgres\npsql -d template1 -c \n\"ALTER USER postgres WITH PASSWORD 'mot de passe'\"\n\n\n\n\n\nou\n\n\npsql\n\npostgres\n=\n# \\password postgres\n\n\n\n\n\n\n\nCr\u00e9er une base \n\n\n\n\nsu - postgres\ncreatedb \n\"nom de la base\"\n\n\n\n\n\n\n\nSe connecter \u00e0 une base\n\n\n\n\npsql \n\"nom de la base\"\n\n\n\n\n\n\n\nhelp\n\n\n\n\n\\h\n\n\n\n\n\n\nfermer la connexion\n\n\n\n\n\\q\n\n\n\n\n\n\n\nCr\u00e9er un utilisateur \n\n\n\n\npsql -d template1 -c \n\"create user \"\nnom de l\n'user\" with password '\nmotdepasse\n'\n\"\n\n\n\n\n\n\n\nPour g\u00e9rer la base \u00e0 distance\n\n\n\n\nsu - postgres\npsql template1 < /usr/share/postgresql/9.6/extension/adminpack--1.0.sql\n\nexit\n\n\n\n\n\nou\n\n\npostgres\n=\n# CREATE EXTENSION adminpack;\n\nCREATE EXTENSION\n\n\n\n\n\n\nActivation des connexion TCP/IP \n\n\n\n\nvim /etc/postgresql/9.6/main/postgresql.conf\n  \nlisten_addresses\n \n=\n \n'localhost'\n\n  \npassword_encryption\n \n=\n on\n\nservice postgresql restart\n\n\n\n\nAdministration web (voir section LAMP pour l'installation) :\n\u00b6\n\n\napt-get install phppgadmin\n\n\n\n\n\n\nmodifier /etc/apache2/conf-available/phppgadmin.conf pour les acc\u00e8s\n\n\n\n\nln /etc/apache2/conf-available/phppgadmin.conf /etc/apache2/sites-available/.\na2ensite phppgadmin.conf\n\n\n\n\n\n\nrestart des services  apache2 et postresql et connexion au site http://ipduserv/phppgadmin\n\n\n\n\nR\u00e9plication \"streaming\" PostgresSQL\n\u00b6\n\n\nPr\u00e9requis\n\u00b6\n\n\n2 serveurs avec PostgreSQL (ma\u00eetre et esclave\n\n\n\n\n\n\nServeur ma\u00eetre :\n\u00b6\n\n\n\n\n\n\nvim /etc/postgresql/9.6/main/postgresql.conf     \n  \nlisten_addresse\n \n=\n \n'*'\n\n  \nwal_level\n \n=\n hot_standby \nwal_keep_segments\n \n=\n \n10\n\n  \nmax_wal_senders\n \n=\n \n3\n\n\n\n\n\n\n\nUser pour la r\u00e9plication\n\n\n\n\npsql -h localhost -U postgres -W -c CREATE USER utilrepl WITH REPLICATION PASSWORD \n'motdepasse'\n;\n\"\n\n\n\n\n\n\n\nDroit de connexion pour l'user de r\u00e9plication\n\n\n\n\nvim /etc/postgresql/9.6/main/pg_hba.conf \nhost    replication     utilrepl        ip esclave/cidr          md5\n\n\n\n\n\n\nOn arr\u00eate de le service\n\n\n\n\nservice postgresql stop\n\n\n\n\n\n\n\n\nServer escalve :\n\u00b6\n\n\n\n\n\n\nvim /etc/postgresql/9.6/main/postgresql.conf\n\nlisten_addresses\n \n=\n \n'*'\n \n\nhot_standby\n \n=\n on\n\n\n\n\n\n\nOn arr\u00eate l'esclave et on d\u00e9truit tous les fichiers de la base\n\n\n\n\n/etc/init.d/postgresql stop \n\ncd\n /var/lib/postgresql/9.6/main/ \nrm -rf * \nvim /var/lib/postgresql/9.6/main/recovery.conf \n\nprimary_conninfo\n \n=\n \n'host=serveur ma\u00eetre port=5432 user=utilrepl password=motdepasse'\n \n\nstandby_mode\n \n=\n on\n\n\n\n\n\n\nOn copie tout du ma\u00eetre vers l'esclave\n\n\n\n\nrsync -av /var/lib/postgresql/9.6/main/* ip esclave:/var/lib/postgresql/9.6/main/\n\n\n\n\n\n\nRed\u00e9marrer les services sur les deux serveurs\n\n\n\n\nservice postgresql start\n\n\n\n\n\n\ncheck de la r\u00e9plication\n\n\n\n\npsql -h localhost -U postgres -W -c \n\"select * from pg_stat_replication;\"\n\n\n\n\n\nTroubleshoot\n\u00b6\n\n\nR\u00e9cup\u00e9ration de mot de passe oubli\u00e9\n\u00b6\n\n\n\n\nArr\u00eat du service\n\n\n\n\nservice postgresql stop\n\n\n\n\n\n\nmodification de pg_hba.conf\n\n\n\n\nvim /usr/lib/pgsql/data/pg_hba.conf\n  \nlocal\n all all ...\n\n#modifier en : \n\n  \nlocal\n all postgres trust\n\n\n\n\n\n\nRelancer le service et changer le mdp \n\n\n\n\nservice postgresql start \nsu - postgres $ psql -d template1 -U postgres \nalter user postgres with password \n'votrenouveaumotdepasse'\n;\n\n\n#version une commande\n\n psql -U postgres template1 -c \n\"alter user postgres with password 'votrenouveaumotdepasse';\"\n\n\n\n\n\n\n\nRemodifier pg_hba.conf pour avoir \"local all postgres ident\" et relancer le service !\n\n\n\n\nTuning\n\u00b6\n\n\n\n\nvoir \nhttps://www.dsfc.net/logiciel-libre/postgresql/tuning-postgresql-configuration-memoire-linux/\n\n\n\n\nBackup\n\u00b6\n\n\n\n\nVoir section mysql sinon : \n\n\nhttp://www.pgbarman.org/",
            "title": "PostgreSQL"
        },
        {
            "location": "/AdminSys/BDD/PostgreSQL/#postgresql",
            "text": "\u2139\ufe0f pour l'installation chercher LAMP",
            "title": "PostgreSQL"
        },
        {
            "location": "/AdminSys/BDD/PostgreSQL/#commande",
            "text": "Modifier le mot de passe de l'utilisateur syst\u00e8me postgres    passwd postgres   Modifier le mot de passe de l'utilisateur administrateur de la base postgres    su - postgres\npsql -d template1 -c  \"ALTER USER postgres WITH PASSWORD 'mot de passe'\"   ou  psql postgres = # \\password postgres    Cr\u00e9er une base    su - postgres\ncreatedb  \"nom de la base\"    Se connecter \u00e0 une base   psql  \"nom de la base\"    help   \\h   fermer la connexion   \\q    Cr\u00e9er un utilisateur    psql -d template1 -c  \"create user \" nom de l 'user\" with password ' motdepasse ' \"    Pour g\u00e9rer la base \u00e0 distance   su - postgres\npsql template1 < /usr/share/postgresql/9.6/extension/adminpack--1.0.sql exit   ou  postgres = # CREATE EXTENSION adminpack; \nCREATE EXTENSION   Activation des connexion TCP/IP    vim /etc/postgresql/9.6/main/postgresql.conf\n   listen_addresses   =   'localhost' \n   password_encryption   =  on\n\nservice postgresql restart",
            "title": "Commande"
        },
        {
            "location": "/AdminSys/BDD/PostgreSQL/#administration-web-voir-section-lamp-pour-linstallation",
            "text": "apt-get install phppgadmin   modifier /etc/apache2/conf-available/phppgadmin.conf pour les acc\u00e8s   ln /etc/apache2/conf-available/phppgadmin.conf /etc/apache2/sites-available/.\na2ensite phppgadmin.conf   restart des services  apache2 et postresql et connexion au site http://ipduserv/phppgadmin",
            "title": "Administration web (voir section LAMP pour l'installation) :"
        },
        {
            "location": "/AdminSys/BDD/PostgreSQL/#replication-streaming-postgressql",
            "text": "",
            "title": "R\u00e9plication \"streaming\" PostgresSQL"
        },
        {
            "location": "/AdminSys/BDD/PostgreSQL/#prerequis",
            "text": "2 serveurs avec PostgreSQL (ma\u00eetre et esclave",
            "title": "Pr\u00e9requis"
        },
        {
            "location": "/AdminSys/BDD/PostgreSQL/#serveur-maitre",
            "text": "vim /etc/postgresql/9.6/main/postgresql.conf     \n   listen_addresse   =   '*' \n   wal_level   =  hot_standby  wal_keep_segments   =   10 \n   max_wal_senders   =   3    User pour la r\u00e9plication   psql -h localhost -U postgres -W -c CREATE USER utilrepl WITH REPLICATION PASSWORD  'motdepasse' ; \"    Droit de connexion pour l'user de r\u00e9plication   vim /etc/postgresql/9.6/main/pg_hba.conf \nhost    replication     utilrepl        ip esclave/cidr          md5   On arr\u00eate de le service   service postgresql stop",
            "title": "Serveur ma\u00eetre :"
        },
        {
            "location": "/AdminSys/BDD/PostgreSQL/#server-escalve",
            "text": "vim /etc/postgresql/9.6/main/postgresql.conf listen_addresses   =   '*'   hot_standby   =  on   On arr\u00eate l'esclave et on d\u00e9truit tous les fichiers de la base   /etc/init.d/postgresql stop  cd  /var/lib/postgresql/9.6/main/ \nrm -rf * \nvim /var/lib/postgresql/9.6/main/recovery.conf  primary_conninfo   =   'host=serveur ma\u00eetre port=5432 user=utilrepl password=motdepasse'   standby_mode   =  on   On copie tout du ma\u00eetre vers l'esclave   rsync -av /var/lib/postgresql/9.6/main/* ip esclave:/var/lib/postgresql/9.6/main/   Red\u00e9marrer les services sur les deux serveurs   service postgresql start   check de la r\u00e9plication   psql -h localhost -U postgres -W -c  \"select * from pg_stat_replication;\"",
            "title": "Server escalve :"
        },
        {
            "location": "/AdminSys/BDD/PostgreSQL/#troubleshoot",
            "text": "",
            "title": "Troubleshoot"
        },
        {
            "location": "/AdminSys/BDD/PostgreSQL/#recuperation-de-mot-de-passe-oublie",
            "text": "Arr\u00eat du service   service postgresql stop   modification de pg_hba.conf   vim /usr/lib/pgsql/data/pg_hba.conf\n   local  all all ... #modifier en :  \n   local  all postgres trust   Relancer le service et changer le mdp    service postgresql start \nsu - postgres $ psql -d template1 -U postgres \nalter user postgres with password  'votrenouveaumotdepasse' ;  #version une commande \n psql -U postgres template1 -c  \"alter user postgres with password 'votrenouveaumotdepasse';\"    Remodifier pg_hba.conf pour avoir \"local all postgres ident\" et relancer le service !",
            "title": "R\u00e9cup\u00e9ration de mot de passe oubli\u00e9"
        },
        {
            "location": "/AdminSys/BDD/PostgreSQL/#tuning",
            "text": "voir  https://www.dsfc.net/logiciel-libre/postgresql/tuning-postgresql-configuration-memoire-linux/",
            "title": "Tuning"
        },
        {
            "location": "/AdminSys/BDD/PostgreSQL/#backup",
            "text": "Voir section mysql sinon :   http://www.pgbarman.org/",
            "title": "Backup"
        },
        {
            "location": "/AdminSys/Stockage/GlusterFS/",
            "text": "CLUSTERING\n\u00b6\n\n\nInstallation Serveur\n\u00b6\n\n\n\n\nPaquets\n\n\n\n\napt-get update \n&&\n apt-get install glusterfs-server\n\n\n\n\n\n\nPort \u00e0 ouvrir : \n\n\n\n\n111\n \n24007\n  \n24008\n \n24009\n\n\n\n\nAutoriser les serveurs \u00e0 communiquer :\n\n\n\n\ngluster peer probe \n\"ipserveur\"\n\n\n\n\n\n\n\n\n\ncheck :\n\n\ngluster peer status\n\n\n\n\n\n\n\n\nCr\u00e9ation d'un volume : \n\n\n\n\n\n\ngluster volume create \n\"nomduvolume\"\n replica \n2\n transport tcp \n\"ipserver1\"\n:\n\"dossierPATH\"\n \n\"ipserver2\"\n:\n\"dossierPATH\"\n \n(\nforce si racine\n)\n\n\n\n\n\n\n\nD\u00e9marrage du volume : \n\n\n\n\ngluster volume start \n\"nomduvolume\"\n\n\n\n\n\n\n\n\n\ncheck :\n\n\ngluster volume info\n\n\n\n\n\n\n\n\nAjouter une autorisation :\n\n\n\n\n\n\ngluster volume \nset\n \n\"nomduvolume\"\n auth.allow \n\"ipclient\"\n\n\n\n\n\n\n\non peut v\u00e9rifier les acc\u00e8s autoris\u00e9s avec la commande \ngluster volume info\n\n\n\n\nInstallation Client\n\u00b6\n\n\n\n\nPaquets\n\n\n\n\napt-get update \n&&\n apt-get install glusterfs-client\n\n\n\n\n\n\nMonter le volume glusterFS\n\n\n\n\nmount.glusterfs \n\"ipduserveur\"\n:/\n\"nomduvolume\"\n \n\"dossier\"\n\n\n\n\n\n\n\n\n\ncheck avec \nmount\n & l'espace disque avec \ndf -h\n\n\n\n\n\n\nfstab \n\n\n\n\n\n\n\"ipduserveur\"\n:/\n\"nomduvolume\"\n \n\"dossier\"\n glusterfs defaults,_netdev \n0\n \n0\n\n\n\n\n\naller plus loin voir : \nhttp://docs.gluster.org",
            "title": "GlusterFS"
        },
        {
            "location": "/AdminSys/Stockage/GlusterFS/#clustering",
            "text": "",
            "title": "CLUSTERING"
        },
        {
            "location": "/AdminSys/Stockage/GlusterFS/#installation-serveur",
            "text": "Paquets   apt-get update  &&  apt-get install glusterfs-server   Port \u00e0 ouvrir :    111   24007    24008   24009   Autoriser les serveurs \u00e0 communiquer :   gluster peer probe  \"ipserveur\"     check :  gluster peer status    Cr\u00e9ation d'un volume :     gluster volume create  \"nomduvolume\"  replica  2  transport tcp  \"ipserver1\" : \"dossierPATH\"   \"ipserver2\" : \"dossierPATH\"   ( force si racine )    D\u00e9marrage du volume :    gluster volume start  \"nomduvolume\"     check :  gluster volume info    Ajouter une autorisation :    gluster volume  set   \"nomduvolume\"  auth.allow  \"ipclient\"    on peut v\u00e9rifier les acc\u00e8s autoris\u00e9s avec la commande  gluster volume info",
            "title": "Installation Serveur"
        },
        {
            "location": "/AdminSys/Stockage/GlusterFS/#installation-client",
            "text": "Paquets   apt-get update  &&  apt-get install glusterfs-client   Monter le volume glusterFS   mount.glusterfs  \"ipduserveur\" :/ \"nomduvolume\"   \"dossier\"     check avec  mount  & l'espace disque avec  df -h    fstab     \"ipduserveur\" :/ \"nomduvolume\"   \"dossier\"  glusterfs defaults,_netdev  0   0   aller plus loin voir :  http://docs.gluster.org",
            "title": "Installation Client"
        },
        {
            "location": "/AdminSys/Stockage/LVM/",
            "text": "LVM\n\u00b6\n\n\n\n\nLogical Volume Manager\n\n\n\n\n\n\nInstallation du paquet lvm2\n\n\n\n\napt-get install lvm2\n\n\n\n\n\n\nCr\u00e9ation d'un volume physique :\n\n\n\n\npvcreate /dev/md0 (ou autre partition)\n\n\n\n\n\n\n\n\ninfo sur les PV \npvdisplay\n\n\n\n\n\n\nCr\u00e9ation d'un groupe de volumes :\n\n\n\n\n\n\nvgcreate \n\"NomDuVolume\"\n \n\"VolumePhysique\"\n\n\n\n\n\n\n\n\n\ninfo sur les VG \nvgdisplay\n\n\n\n\n\n\nCr\u00e9ation d'un volume logique :\n\n\n\n\n\n\nlvcreate -n \n\"NomDuVolumeLogique\"\n -L \n\"TailleK-M-G-T\"\n\n\n\n\n\n\n\nCommandes utiles :\n\n\n\n\npvscan\n : liste les diff\u00e9rents volumes physiques disponibles\n\n\n# pvscan\n   PV /dev/md0    VG groupevol           lvm2 [1020,00 MiB / 252,00 MiB free]\n  PV /dev/sda5   VG serveurlvmraid-vg   lvm2 [7,76 GiB / 0    free]\n  Total: 2 [8,75 GiB] / in use: 2 [8,75 GiB] / in no VG: 0 [0   ]\n\n\n\n\nvgscan\n : liste les diff\u00e9rents volume groups\n\n\n# vgscan\n  Reading volume groups from cache.\n  Found volume group \"groupevol\" using metadata type lvm2\n  Found volume group \"serveurlvmraid-vg\" using metadata type lvm2\n\n\n\n\nlvscan\n : liste les diff\u00e9rents volumes logiques\n\n\nlvscan\n  ACTIVE            '/dev/groupevol/vol1' [256,00 MiB] inherit\n  ACTIVE            '/dev/groupevol/vol2' [512,00 MiB] inherit\n  ACTIVE            '/dev/serveurlvmraid-vg/root' [6,76 GiB] inherit\n  ACTIVE            '/dev/serveurlvmraid-vg/swap_1' [1,00 GiB] inherit\n\n\n\n\n\n\nNe pas oublier de formater et de monter les volumes :\n\n\n\n\n mkfs -t ext4 /dev/groupevol/vol1 \n mount /dev/groupevol/vol1 /mnt/lv1\n\n\n\n\n\n\nAgrandissement d'une partition \u00e0 chaud\n\n\n\n\n#volume logique\n\nlvresize -L \n\"taille\"\n \n\"VL\"\n\n\n#exemple \n\nlvresize -L 512M /dev/groupevol/vol2\n\n#syst\u00e8me de fichier\n\nresize2fs -p \n\"VL\"\n \n\"taille\"\n\n\n#exemple\n\nresize2fs -p /dev/groupevol/vol2 512M",
            "title": "LVM"
        },
        {
            "location": "/AdminSys/Stockage/LVM/#lvm",
            "text": "Logical Volume Manager    Installation du paquet lvm2   apt-get install lvm2   Cr\u00e9ation d'un volume physique :   pvcreate /dev/md0 (ou autre partition)    info sur les PV  pvdisplay    Cr\u00e9ation d'un groupe de volumes :    vgcreate  \"NomDuVolume\"   \"VolumePhysique\"     info sur les VG  vgdisplay    Cr\u00e9ation d'un volume logique :    lvcreate -n  \"NomDuVolumeLogique\"  -L  \"TailleK-M-G-T\"    Commandes utiles :   pvscan  : liste les diff\u00e9rents volumes physiques disponibles  # pvscan\n   PV /dev/md0    VG groupevol           lvm2 [1020,00 MiB / 252,00 MiB free]\n  PV /dev/sda5   VG serveurlvmraid-vg   lvm2 [7,76 GiB / 0    free]\n  Total: 2 [8,75 GiB] / in use: 2 [8,75 GiB] / in no VG: 0 [0   ]  vgscan  : liste les diff\u00e9rents volume groups  # vgscan\n  Reading volume groups from cache.\n  Found volume group \"groupevol\" using metadata type lvm2\n  Found volume group \"serveurlvmraid-vg\" using metadata type lvm2  lvscan  : liste les diff\u00e9rents volumes logiques  lvscan\n  ACTIVE            '/dev/groupevol/vol1' [256,00 MiB] inherit\n  ACTIVE            '/dev/groupevol/vol2' [512,00 MiB] inherit\n  ACTIVE            '/dev/serveurlvmraid-vg/root' [6,76 GiB] inherit\n  ACTIVE            '/dev/serveurlvmraid-vg/swap_1' [1,00 GiB] inherit   Ne pas oublier de formater et de monter les volumes :    mkfs -t ext4 /dev/groupevol/vol1 \n mount /dev/groupevol/vol1 /mnt/lv1   Agrandissement d'une partition \u00e0 chaud   #volume logique \nlvresize -L  \"taille\"   \"VL\"  #exemple  \nlvresize -L 512M /dev/groupevol/vol2 #syst\u00e8me de fichier \nresize2fs -p  \"VL\"   \"taille\"  #exemple \nresize2fs -p /dev/groupevol/vol2 512M",
            "title": "LVM"
        },
        {
            "location": "/AdminSys/Stockage/Raid logiciel linux/",
            "text": "RAID\n\u00b6\n\n\n\n\nRedundant Array of Independent Disks\n\n\n\n\nRAID HARWARE : \u00e9volue mal, probl\u00e8me de panne\n\n\nRAID SOFTWARE : \u00e9volue avec le syteme, ne consomme plus autant\n\n\n\u21aa\ufe0f  pr\u00e9vention de panne !\n\n\nRAID 1\n\u00b6\n\n\nInstallation d'un systeme RAID logiciel sur DEBIAN9 :\n\n\nPr\u00e9requis :\n\u00b6\n\n\nDebian9 \u00e0 jour avec 3 disques (2 pour le RAID1 et 1 pour le Spare)\n\n\n\n\nInstallation de mdam logiciel de raid\n\n\n\n\napt-get install mdadm\n\n\n\n\n\n\nCr\u00e9ation du RAID1\n\n\n\n\nmdadm --create /dev/md0 --level\n=\n1\n --raid-devices\n=\n2\n /dev/sdb /dev/sdc\nmdadm: Note: this array has metadata at the start and\n    may not be suitable as a boot device.  If you plan to\n    store \n'/boot'\n on this device please ensure that\n    your boot-loader understands md/v1.x metadata, or use\n    --metadata\n=\n0\n.90\nContinue creating array? \n(\ny/n\n)\n y\nmdadm: Defaulting to version \n1\n.2 metadata\nmdadm: array /dev/md0 started.\n\n\n\n\n\n\nV\u00e9rification\n\n\n\n\nmdadm -D /dev/md0\n/dev/md0:\n        Version : \n1\n.2\n  Creation Time : Tue Jan  \n9\n \n18\n:37:46 \n2018\n\n     Raid Level : raid1\n     Array Size : \n1047552\n \n(\n1023\n.00 MiB \n1072\n.69 MB\n)\n\n  Used Dev Size : \n1047552\n \n(\n1023\n.00 MiB \n1072\n.69 MB\n)\n\n   Raid Devices : \n2\n\n  Total Devices : \n2\n\n    Persistence : Superblock is persistent\n\n    Update Time : Tue Jan  \n9\n \n18\n:37:51 \n2018\n\n          State : clean\n Active Devices : \n2\n\nWorking Devices : \n2\n\n Failed Devices : \n0\n\n  Spare Devices : \n0\n\n\n           Name : serveurlvmraid:0  \n(\nlocal\n to host serveurlvmraid\n)\n\n           UUID : e6e53ca0:6b4b6199:e68b7e73:177deb1e\n         Events : \n17\n\n\n    Number   Major   Minor   RaidDevice State\n       \n0\n       \n8\n       \n16\n        \n0\n      active sync   /dev/sdb\n       \n1\n       \n8\n       \n32\n        \n1\n      active sync   /dev/sdc\n\n\n\n\n\n\nAjout d'un disque de SPARE : \n\n\n\n\nroot@serveurlvmraid:\n[\n/home/anas\n]\n: mdadm --manage /dev/md0 --add /dev/sdd\nmdadm: added /dev/sdd\n\n\n\n\n\n\nV\u00e9rification :\n\n\n\n\nmdadm -D /dev/md0\n/dev/md0:\n        Version : \n1\n.2\n  Creation Time : Tue Jan  \n9\n \n18\n:37:46 \n2018\n\n     Raid Level : raid1\n     Array Size : \n1047552\n \n(\n1023\n.00 MiB \n1072\n.69 MB\n)\n\n  Used Dev Size : \n1047552\n \n(\n1023\n.00 MiB \n1072\n.69 MB\n)\n\n   Raid Devices : \n2\n\n  Total Devices : \n3\n\n    Persistence : Superblock is persistent\n\n    Update Time : Tue Jan  \n9\n \n18\n:39:53 \n2018\n\n          State : clean\n Active Devices : \n2\n\nWorking Devices : \n3\n\n Failed Devices : \n0\n\n  Spare Devices : \n1\n\n\n           Name : serveurlvmraid:0  \n(\nlocal\n to host serveurlvmraid\n)\n\n           UUID : e6e53ca0:6b4b6199:e68b7e73:177deb1e\n         Events : \n18\n\n\n    Number   Major   Minor   RaidDevice State\n       \n0\n       \n8\n       \n16\n        \n0\n      active sync   /dev/sdb\n       \n1\n       \n8\n       \n32\n        \n1\n      active sync   /dev/sdc\n\n       \n2\n       \n8\n       \n48\n        -      spare   /dev/sdd\n\n\n\n\n\n\nTroubleshot : \n\n\n\n\nSyst\u00e8me qui ne boot pas : \n\n\n\n\n\n\nboot sur un live CD\n\n\n\n\n\n\nbash\n   mdadm --examine --scan >> /etc/mdadm/mdadm.conf\n\n\n\n\n\n\nbash\n   service mdadm-raid restart\n\n\n\n\n\n\nbash\n   mount /dev/mdX /mnt/raidX\n\n\n\n\n\n\nRemplacement de disques \u00e0 chaud\n\n\n\n\n\n\nlancer une simulation de disque d\u00e9faillant :\n\n\n mdadm --fail /dev/md0 /dev/sdc\n mdadm: \nset\n /dev/sdc faulty in /dev/md0\n\n\n\n\nVoir l'avancer de la reconstruction :\n\n\nwatch -n \n1\n  \n\"cat /proc/mdstat\"\n\n\n\n\n\n\u2022 Remplacement du disque par un neuf:\n\n\nmdadm --manage --remove /dev/md0 /dev/sdc\nmdadm --manage --add /dev/md0 /dev/sdc\n\n\n\n\n\u2022 check :\n\n\nmdadm -D /dev/md0\n\n\n\n\n\u2022 Ecrire la config finale :\n\n\nmdadm --detail --scan >> /etc/mdadm/mdadm.conf",
            "title": "RAID"
        },
        {
            "location": "/AdminSys/Stockage/Raid logiciel linux/#raid",
            "text": "Redundant Array of Independent Disks   RAID HARWARE : \u00e9volue mal, probl\u00e8me de panne  RAID SOFTWARE : \u00e9volue avec le syteme, ne consomme plus autant  \u21aa\ufe0f  pr\u00e9vention de panne !",
            "title": "RAID"
        },
        {
            "location": "/AdminSys/Stockage/Raid logiciel linux/#raid-1",
            "text": "Installation d'un systeme RAID logiciel sur DEBIAN9 :",
            "title": "RAID 1"
        },
        {
            "location": "/AdminSys/Stockage/Raid logiciel linux/#prerequis",
            "text": "Debian9 \u00e0 jour avec 3 disques (2 pour le RAID1 et 1 pour le Spare)   Installation de mdam logiciel de raid   apt-get install mdadm   Cr\u00e9ation du RAID1   mdadm --create /dev/md0 --level = 1  --raid-devices = 2  /dev/sdb /dev/sdc\nmdadm: Note: this array has metadata at the start and\n    may not be suitable as a boot device.  If you plan to\n    store  '/boot'  on this device please ensure that\n    your boot-loader understands md/v1.x metadata, or use\n    --metadata = 0 .90\nContinue creating array?  ( y/n )  y\nmdadm: Defaulting to version  1 .2 metadata\nmdadm: array /dev/md0 started.   V\u00e9rification   mdadm -D /dev/md0\n/dev/md0:\n        Version :  1 .2\n  Creation Time : Tue Jan   9   18 :37:46  2018 \n     Raid Level : raid1\n     Array Size :  1047552   ( 1023 .00 MiB  1072 .69 MB ) \n  Used Dev Size :  1047552   ( 1023 .00 MiB  1072 .69 MB ) \n   Raid Devices :  2 \n  Total Devices :  2 \n    Persistence : Superblock is persistent\n\n    Update Time : Tue Jan   9   18 :37:51  2018 \n          State : clean\n Active Devices :  2 \nWorking Devices :  2 \n Failed Devices :  0 \n  Spare Devices :  0 \n\n           Name : serveurlvmraid:0   ( local  to host serveurlvmraid ) \n           UUID : e6e53ca0:6b4b6199:e68b7e73:177deb1e\n         Events :  17 \n\n    Number   Major   Minor   RaidDevice State\n        0         8         16          0       active sync   /dev/sdb\n        1         8         32          1       active sync   /dev/sdc   Ajout d'un disque de SPARE :    root@serveurlvmraid: [ /home/anas ] : mdadm --manage /dev/md0 --add /dev/sdd\nmdadm: added /dev/sdd   V\u00e9rification :   mdadm -D /dev/md0\n/dev/md0:\n        Version :  1 .2\n  Creation Time : Tue Jan   9   18 :37:46  2018 \n     Raid Level : raid1\n     Array Size :  1047552   ( 1023 .00 MiB  1072 .69 MB ) \n  Used Dev Size :  1047552   ( 1023 .00 MiB  1072 .69 MB ) \n   Raid Devices :  2 \n  Total Devices :  3 \n    Persistence : Superblock is persistent\n\n    Update Time : Tue Jan   9   18 :39:53  2018 \n          State : clean\n Active Devices :  2 \nWorking Devices :  3 \n Failed Devices :  0 \n  Spare Devices :  1 \n\n           Name : serveurlvmraid:0   ( local  to host serveurlvmraid ) \n           UUID : e6e53ca0:6b4b6199:e68b7e73:177deb1e\n         Events :  18 \n\n    Number   Major   Minor   RaidDevice State\n        0         8         16          0       active sync   /dev/sdb\n        1         8         32          1       active sync   /dev/sdc\n\n        2         8         48         -      spare   /dev/sdd   Troubleshot :    Syst\u00e8me qui ne boot pas :     boot sur un live CD    bash\n   mdadm --examine --scan >> /etc/mdadm/mdadm.conf    bash\n   service mdadm-raid restart    bash\n   mount /dev/mdX /mnt/raidX    Remplacement de disques \u00e0 chaud    lancer une simulation de disque d\u00e9faillant :   mdadm --fail /dev/md0 /dev/sdc\n mdadm:  set  /dev/sdc faulty in /dev/md0  Voir l'avancer de la reconstruction :  watch -n  1    \"cat /proc/mdstat\"   \u2022 Remplacement du disque par un neuf:  mdadm --manage --remove /dev/md0 /dev/sdc\nmdadm --manage --add /dev/md0 /dev/sdc  \u2022 check :  mdadm -D /dev/md0  \u2022 Ecrire la config finale :  mdadm --detail --scan >> /etc/mdadm/mdadm.conf",
            "title": "Pr\u00e9requis :"
        },
        {
            "location": "/AdminSys/Stockage/notions g\u00e9n\u00e9rales/",
            "text": "Pr\u00e9conisation entreprise:\n\u00b6\n\n\nSupport\n\u00b6\n\n\n\n\n\n\nSAS base de donn\u00e9es, entr\u00e9es/ sortie al\u00e9atoires\n\n\n\n\n\n\nSATA le reste\n\n\n\n\nSAS SSD pour grosse perf\n\n\n\n\nSata => stockage froid ou Nas particuli\u00e9 sur les gammes enterprise\n\n\nSas => nearline, like SAS mais moins rapide\n\n\nPolitique de stockage :\n\u00b6\n\n\n/ => ext4\n\n\nswap => swapFS (obligatoire), syt\u00e8me de fichier \u00e0 part et sp\u00e9cifique\n\n\n  ou moins \u00e9gal \u00e0 la quantit\u00e9 de RAM sur le serveur (et non plus)\n\n\n/home => partition \u00e0 part (XFS convient pour le syt\u00e8me de fichier)\n\n\n/var/www/ => btrfs => prometteur (snapshot)\n\n\nwindows => NTFS : mal vieilli ! \n\n\nComparatif DAS / NAS / SAN / Object Storage\n\u00b6\n\n\n\n\n\n\n\n\n\n\nDAS\n\n\nSAN\n\n\nNAS\n\n\nObject Storage\n\n\n\n\n\n\n\n\n\n\nAcc\u00e8s\n\n\nMode bloc\n\n\nMode bloc\n\n\nMode fichier\n\n\nMode Objet\n\n\n\n\n\n\nConnexion\n\n\nSCSI\n\n\nETHERNET\n\n\nIP\n\n\nIP\n\n\n\n\n\n\nPerformances\n\n\nEXCELLENTES\n\n\nEXCELLENTES\n\n\nHAUTES\n\n\nMOYENNES\n\n\n\n\n\n\nLimite des perf.\n\n\nSous-syst\u00e8me SCSI du noyau\n\n\nCommutation\n\n\nSyst\u00e8me de Fichiers\n\n\nProtocoles (HTTP)\n\n\n\n\n\n\nAugmentation de capacit\u00e9\n\n\nArr\u00eat du syst\u00e8me obligatoire\n\n\nFacile\n\n\nTr\u00e8s Facile\n\n\nTr\u00e8s Facile\n\n\n\n\n\n\n\u00c9volutivit\u00e9/ Continuit\u00e9 de service\n\n\nFaible\n\n\nMoyenne\n\n\nElev\u00e9e\n\n\nTr\u00e8s \u00e9lev\u00e9e (cloud)",
            "title": "Notions g\u00e9n\u00e9rales"
        },
        {
            "location": "/AdminSys/Stockage/notions g\u00e9n\u00e9rales/#preconisation-entreprise",
            "text": "",
            "title": "Pr\u00e9conisation entreprise:"
        },
        {
            "location": "/AdminSys/Stockage/notions g\u00e9n\u00e9rales/#support",
            "text": "SAS base de donn\u00e9es, entr\u00e9es/ sortie al\u00e9atoires    SATA le reste   SAS SSD pour grosse perf   Sata => stockage froid ou Nas particuli\u00e9 sur les gammes enterprise  Sas => nearline, like SAS mais moins rapide",
            "title": "Support"
        },
        {
            "location": "/AdminSys/Stockage/notions g\u00e9n\u00e9rales/#politique-de-stockage",
            "text": "/ => ext4  swap => swapFS (obligatoire), syt\u00e8me de fichier \u00e0 part et sp\u00e9cifique    ou moins \u00e9gal \u00e0 la quantit\u00e9 de RAM sur le serveur (et non plus)  /home => partition \u00e0 part (XFS convient pour le syt\u00e8me de fichier)  /var/www/ => btrfs => prometteur (snapshot)  windows => NTFS : mal vieilli !",
            "title": "Politique de stockage :"
        },
        {
            "location": "/AdminSys/Stockage/notions g\u00e9n\u00e9rales/#comparatif-das-nas-san-object-storage",
            "text": "DAS  SAN  NAS  Object Storage      Acc\u00e8s  Mode bloc  Mode bloc  Mode fichier  Mode Objet    Connexion  SCSI  ETHERNET  IP  IP    Performances  EXCELLENTES  EXCELLENTES  HAUTES  MOYENNES    Limite des perf.  Sous-syst\u00e8me SCSI du noyau  Commutation  Syst\u00e8me de Fichiers  Protocoles (HTTP)    Augmentation de capacit\u00e9  Arr\u00eat du syst\u00e8me obligatoire  Facile  Tr\u00e8s Facile  Tr\u00e8s Facile    \u00c9volutivit\u00e9/ Continuit\u00e9 de service  Faible  Moyenne  Elev\u00e9e  Tr\u00e8s \u00e9lev\u00e9e (cloud)",
            "title": "Comparatif DAS / NAS / SAN / Object Storage"
        },
        {
            "location": "/Code/git/",
            "text": "GIT\n\u00b6\n\n\nchoisir l'user au moment du push (https):\n\u00b6\n\n\ngit -c user.email\n=\nname@mail.com -c user.name\n=\n\"Anas Asmi\"\n commit -m \n\"first commit\"",
            "title": "GIT"
        },
        {
            "location": "/Code/git/#git",
            "text": "",
            "title": "GIT"
        },
        {
            "location": "/Code/git/#choisir-luser-au-moment-du-push-https",
            "text": "git -c user.email = name@mail.com -c user.name = \"Anas Asmi\"  commit -m  \"first commit\"",
            "title": "choisir l'user au moment du push (https):"
        },
        {
            "location": "/Code/python/Les_bases/",
            "text": "Les bases\n\u00b6\n\n\nAfficher\n\u00b6\n\n\nPour afficher un message \u00e0 l\u00e9cran on utilise la fonction \nprint()\n :\n\n\nprint\n \n\"(Bonjour \u00e0 tous!)\"\n\n\n\n\n\n qui donnera un affichage de texte les plus simple :\n\n\nBonjour \u00e0 tous\n\n\n\n\n\u00e0 savoir sur print() :\n\u00b6\n\n\n\n\n\n\nLes param\u00e8tres de la fonction print sont s\u00e9par\u00e9s par des virgules.\n\n\nQuand print rencontre un param\u00e8tre entre guillemets, il affiche le contenu entre guillemets.\n\n\nQuand print rencontre un param\u00e8tre sans guillemet, il cherche une variable portant le nom de ce param\u00e8tre et il affiche alors la valeur de la variable.\n\n\n\n\n\n\n#Aller \u00e0 la ligne\n\n\\\nn\n\n\n#tabuler\n\n\\\nt\n\n\n#exemple\n\n\nprint\n \n(\n\"J'adore\n\\n\\t\nPython\"\n)\n\n\n#r\u00e9sultat\n\n\nJ\n'adore\n\n        \nPython\n \n!\n\n\n\n\n\nVariable\n\u00b6\n\n\n\n\nLes variables sont des endroits o\u00f9 sont stock\u00e9es les donn\u00e9es d'un programme.\n\n\nChaque variable poss\u00e8de un \nnom\n et une \nvaleur\n \n\n\nOn appelle \naffectation\n l'instruction qui permet de donner une valeur \u00e0 une variable.\n\n\n\n\nPar exemple : \n\n\nprenom\n \n=\n \n\"Anas\"\n\n\nage\n \n=\n \n\"27\"\n\n\ntaille\n \n=\n \n\"1.70\"\n\n\nprint\n \n(\n\"Bonjour\"\n,\nprenom\n\"!\"\n)\n\n\nprint\n \n(\n\"Tu as\"\n,\nage\n,\n\"ans et mesures\"\n,\ntaille\n,\n\"m.\"\n)\n\n\n\n\n\nCe bout de code affichera : \n\nBonjour Anas !\nTu as 27 ans et mesures 1.70 m.\n\n\n\nIl existe 3 types de variables en python\n\u00b6\n\n\n\n\n\n\n\"string\"\n \n de type \ncha\u00eene de caract\u00e8re\n, dans notre exemple c'est la variable \n\"prenom\"\n\n\n\n\n\n\n\"int\"\n \n de type \nentier\n, dans notre exemple c'est la variable \n\"age\"\n\n\n\n\n\n\n\"\nfloat\n\" \n de type \nnombre \u00e0 virgule\n, dans notre exemple c'est la variable \n\"taille\"\n\n\n\n\n\n\nle s\u00e9parateur d\u00e9cimal est le point et non la virgule.\n\n\nInput()\n\u00b6\n\n\n\n\nProvoque une interruption dans le pmrogramme courant afin de permettre \u00e0 l'utilisateur \u00e0 rentrer des information qui lui sont demand\u00e9es dans l'invite\n\n\n  feed d'une variable \n\n\n\n\nexemple : \n\n\nprenom\n \n=\n \nstr\n(\ninput\n(\n\"Quel est ton prenom ?\"\n))\n\n\nage\n \n=\n \nint\n(\ninput\n(\n\"Quel est ton age ?\"\n))\n\n\ntaille\n \n=\n \nfloat\n(\ninput\n(\n\"Quelle est ta taille ?\"\n))\n\n\nprint\n \n(\n\"Bonjour\"\n,\nprenom\n,\n\"!\"\n)\n\n\nprint\n \n(\n\"Tu as\"\n,\nage\n,\n\"ans et tu mesures\"\n,\ntaille\n,\n\"m.\"\n)\n\n\n\n\n\nCe qui donnera : \n\nQuel est ton prenom ?Anas\nQuel est ton age ?27\nQuelle est ta taille ?1.70\nBonjour Anas !\nTu as 27 ans et tu mesures 1.7 m.\n\n\nLorsqu'une instruction input() est rencontr\u00e9e, les 4 \u00e9tapes suivantes se d\u00e9roulent dans cet ordre :\n\n\n\n\nLe programme affiche le message d'invite\n.\n\n\nLe programme est stopp\u00e9 et attend la saisie de l'utilisateur**. Il doit valider sa saisie par la touche Entr\u00e9e.\n\n\nLe programme convertit la donn\u00e9e de l'utilisateur\n dans le type attendu (str,int ou float)\n\n\nL'affectation = entre cette donn\u00e9e dans la variable\n pr\u00e9vue pour le stockage.\n\n\n\n\nCalculs et op\u00e9rations\n\u00b6\n\n\n\n\nPython permet de faire des calculs math\u00e9matiques assez simplement, avec biens\u00fbr la \npriorit\u00e9 des op\u00e9rations\n\n\n\n\nexemple : \n\n\nprixAuKilo\n \n=\n \n3.5\n\n\npoids\n \n=\n \n3\n\n\nprixTotal\n \n=\n \nprixAuKilo\n \n*\n \npoids\n\n\nprint\n \n(\n\"Pour un prix au kg de\"\n,\nprixAuKilo\n,\n\"\u20ac,\"\n,\npoids\n,\n\"kg de pommes co\u00fbtent\"\n,\nprixTotal\n,\n\"\u20ac\"\n)\n\n\n\n\n\nr\u00e9sultat :\n\n\nPour un prix au kg de 3.5 \u20ac, 3 kg de pommes co\u00fbtent 10.5 \u20ac\n\n\n\n\nautre exemple :\n\n\npython\nprixInitial = 65.50\ntauxRemise = 30\nremise = prixInitial * tauxRemise / 100\nprixFinal = prixInitial - remise\nprint (\"Prix initial :\",prixInitial)\nprint (\"Remise :\",remise)\nprint (\"Prix sold\u00e9 :\",prixFinal)\n\n\nr\u00e9sultat :\n\n\nPrix initial : 65.5\nRemise : 19.65\nPrix sold\u00e9 : 45.85\n\n\n\n\nLes 7 op\u00e9rations sur les nombres :\n\u00b6\n\n\n\n\nl'addition  \n+\n\n\na soustraction  \n-\n\n\nla multiplication  \n*\n\n\nla puissance  \n**\n\n\nle quotient r\u00e9el  \n/\n\n\nle quotient entier \n//\n\n\nle reste de la division \n%\n\n\n\n\nLes 2 op\u00e9rations sur les cha\u00eenes de caract\u00e8res :\n\u00b6\n\n\n\n\nla concat\u00e9nation \n+\n\n\nla r\u00e9p\u00e9tition \n*\n\n\n\n\nExemple concat\u00e9nation :\n\n\nnom\n \n=\n \n\"Fifi \"\n\n\naction\n \n=\n \n\"va \u00e0 la plage\"\n\n\nphrase\n \n=\n \nnom\n \n+\n \naction\n\n\nprint\n \n(\nphrase\n)\n\n\n\n\n\nr\u00e9sultat : \n\n\nFifi va \u00e0 la plage\n\n\n\n\nExemple de r\u00e9p\u00e9tition :\n\n\nnom\n \n=\n \n\"Fifi\"\n\n\nrepetition\n \n=\n \nnom\n \n*\n \n3\n\n\nprint\n \n(\nrepetition\n)\n\n\n\n\n\nr\u00e9sultat :\n\n\nFifiFifiFifi\n\n\n\n\nFonctions math\u00e9matiques standard :\n\u00b6\n\n\n\n\nPython permet d'importer tout type de modules, dont certain pour des fonctions math\u00e9matiques comme la racine carr\u00e9e (voir \nmodule math\n )\n\n\n\n\n\n\npour utiliser un module il faut l'importer et l'utiliser avec une syntaxe pr\u00e9cise :\n\n\n\n\n#importation du module\n\n\nimport\n \nNomDuModule\n\n\n#utilisation du module\n\n\nNomDuModule\n.\nNomDeLaFonction\n\n\n\n\n\nexemple : \n\n\nUn studio carr\u00e9 a une superficie de 40 m carr\u00e9s. Combien mesure le c\u00f4t\u00e9 du studio ?\n\n\nOn cherche donc la racine carr\u00e9e de 40.\n\n\nimport\n \nmath\n \n\naire\n \n=\n \n40\n\n\ncote\n \n=\n \nmath\n.\nsqrt\n(\naire\n)\n \n\nprint\n \n(\n\"Le c\u00f4t\u00e9 d'un carr\u00e9 d'aire\"\n,\naire\n,\n\"mxm mesure\"\n,\ncote\n,\n\"m\"\n)\n\n\n\n\n\n\n\nEn ligne 1, on importe le module math\n\n\nEn ligne 3, pour utiliser la fonction sqrt du module math, on appelle math.sqrt\n\n\n\n\nr\u00e9sultat :\n\n\nLe c\u00f4t\u00e9 d'un carr\u00e9 d'aire 40 mxm mesure 6.324555320336759 m\n\n\n\n\nPour \u00e9viter la lourdeur de la syntaxe math.sqrt, on peut proc\u00e9der autrement :\n\n\nfrom\n \nmath\n \nimport\n \nsqrt\n \n\naire\n \n=\n \n40\n\n\ncote\n \n=\n \nsqrt\n(\naire\n)\n \n\nprint\n \n(\n\"Le c\u00f4t\u00e9 d'un carr\u00e9 d'aire\"\n,\naire\n,\n\"mxm mesure\"\n,\ncote\n,\n\"m\"\n)\n\n\n\n\n\n\n\nEn ligne 1, on importe la fonction sqrt du module math\n\n\nEn ligne 3, il devient donc inutile de rappeler que la fonction sqrt est contenue dans le module math.\n\n\n\n\n pour en savoir plus sur les modules en g\u00e9n\u00e9ral c'est \nici\n\n\nCommenter son code\n\u00b6\n\n\nCitation du site \nhttp://cscircles.cemc.uwaterloo.ca/3-fr/\n :\n\n\n\n\nUn programme informatique ressemble \u00e0 un langage cod\u00e9, ce qui est n\u00e9cessaire pour que l'ordinateur comprenne pr\u00e9cis\u00e9ment ce que vos commandes signifient. Mais, \u00e9tant un langage cod\u00e9, il est difficile pour les humains de le lire. Pour compenser ce probl\u00e8me, vous \u00eates autoris\u00e9s \u00e0 \u00e9crire des notes dans votre programme que l'ordinateur ignore. Ces notes s'appellent des \ncommentaires\n.\n\n\nEn Python, une ligne d'instructions qui contient le symbole # (di\u00e8se) signifie un commentaire. Le reste de la ligne sera ignor\u00e9e quand le programme sera ex\u00e9cut\u00e9.\n\n\n\n\nexemple : \n\n\n# donn\u00e9es de l'exercice :\n\n\nconso110\n \n=\n \n4.7\n \n# la consommation aux 100 km \u00e0 110\n\n\nconso130\n \n=\n \n6\n \n# la consommation aux 100 km \u00e0 130\n\n\ndistance\n \n=\n \n775\n \n# distance Paris-Marseille\n\n\ncoutLitreDiesel\n \n=\n \n1.39\n \n# en ao\u00fbt 2014\n\n\n\n# calcul de la surconsommation\n\n\n# exc\u00e9dent de consommation sur le trajet PM en roulant \u00e0 130 plut\u00f4t qu'\u00e0 110\n\n\nsurconsommation\n \n=\n \ndistance\n \n*\n \n(\nconso130\n \n-\n \nconso110\n)\n \n/\n \n100\n\n\n\n# calcul du surco\u00fbt\n\n\n# surco\u00fbt en roulant \u00e0 130 plut\u00f4t qu'\u00e0 110\n\n\nsurcout\n \n=\n \nsurconsommation\n \n*\n \ncoutLitreDiesel\n\n\n\n# affichage\n\n\nprint\n \n(\n\"Sur le trajet Paris-Marseille de\"\n,\ndistance\n,\n\"kms.\"\n)\n\n\nprint\n \n(\n\"En roulant \u00e0 130 km/h de moyenne plut\u00f4t qu'\u00e0 110\"\n)\n\n\nprint\n \n(\n\"Vous consommerez\"\n,\nsurconsommation\n,\n\"litres de plus\"\n)\n\n\nprint\n \n(\n\"Cela vous co\u00fbtera\"\n,\nsurcout\n,\n\"\u20ac de plus\"\n)\n\n\n\n\n\nLes lignes avec des \"#\" sont des commentaires et donc invisible \u00e0 l'ex\u00e9cution du script, ces commentaires servent uniquement \u00e0 la compr\u00e9hension du code pour les futurs d\u00e9veloppeurs :)\n\n\nEchapper un caract\u00e8re\n\u00b6\n\n\n\n\nLa pr\u00e9sence de l'antislash  avant un caract\u00e8re permet de le prot\u00e9g\u00e9. Il doit \u00eatre affich\u00e9 comme tel.\nLe couple \\\" est appel\u00e9 une \ns\u00e9quence d'\u00e9chappement\n.\n\n\n\n\nexemple :\n\n\nprint\n \n(\n\"Il a cri\u00e9 \n\\\"\nAttention !\n\\\"\n tr\u00e8s fort.\"\n)\n\n\n\n\n\ndonnera (et sans erreurs):\n\n\nIl a cri\u00e9 \"Attention !\" tr\u00e8s fort.\n\n\n\n\nNous venons \"d'\u00e9chapper\" le caract\u00e8re \" pour que print() ne l'interpr\u00e8te pas.\n\n\nLa fonction type()\n\u00b6\n\n\nSi vous ne vous souvenez plus du type d\u2019une variable, utilisez la fonction \ntype()\n qui vous le rappellera.\n\n\n>>>\n \nx\n \n=\n \n2\n\n\n>>>\n \ntype\n(\nx\n)\n\n\n<\nclass\n \n'\nint\n'>\n\n\n>>>\n \ny\n \n=\n \n2.0\n\n\n>>>\n \ntype\n(\ny\n)\n\n\n<\nclass\n \n'\nfloat\n'>\n\n\n>>>\n \nz\n \n=\n \n'2'\n\n\n>>>\n \ntype\n(\nz\n)\n\n\n<\nclass\n \n'\nstr\n'>\n\n\n\n\n\nFaites bien attention, car pour Python, la valeur \n2\n (nombre entier) est diff\u00e9rente de \n2.0\n (nombre r\u00e9el), de m\u00eame que \n2\n (nombre entier) est diff\u00e9rent de \n'2'\n (cha\u00eene de caract\u00e8res). \n\n\nConditionnelles\n\u00b6\n\n\nif simple :\n\u00b6\n\n\nif\n \ncondition\n:\n\n    \ninstruction\n \n1\n\n    \ninstruction\n \n2\n\n    \n...\n\n    \ninstruction\n \nn\n\n\n\n\n\nif else :\n\u00b6\n\n\nif\n \ncondition\n:\n\n    \ninstruction\n \n1\n\n    \ninstruction\n \n2\n\n    \n...\n\n    \ninstruction\n \nn\n\n\nelse\n \n:\n\n    \ninstruction\n \n1\n\n    \ninstruction\n \n2\n\n    \n...\n\n    \ninstruction\n \nn\n\n\n\n\n\nif elif elif ... else : (autant d'elif qu'on veut)\n\u00b6\n\n\nif\n \ncondition\n:\n\n    \ninstruction\n \n1\n\n    \ninstruction\n \n2\n\n    \n...\n\n    \ninstruction\n \nn\n\n\nelif\n \ncondition\n:\n\n    \ninstruction\n \n1\n\n    \ninstruction\n \n2\n\n    \n...\n\n    \ninstruction\n \nn\n\n\nelif\n \ncondition\n:\n\n    \ninstruction\n \n1\n\n    \ninstruction\n \n2\n\n    \n...\n\n    \ninstruction\n \nn\n\n\nelif\n \ncondition\n:\n\n    \ninstruction\n \n1\n\n    \ninstruction\n \n2\n\n    \n...\n\n    \ninstruction\n \nn\n\n\nelse\n:\n\n    \ninstruction\n \n1\n\n    \ninstruction\n \n2\n\n    \n...\n\n    \ninstruction\n \nn\n\n\n\n\n\n\n\nPour constituer un bloc d'instructions, il faut un en-t\u00eate suivi d'instructions d\u00e9cal\u00e9es par rapport \u00e0 l'en-t\u00eate :\n\n\n\n\nDans le cas du if, l'en-t\u00eate est constitu\u00e9 du mot-r\u00e9serv\u00e9 \nif\n, de la \ncondition \u00e0 v\u00e9rifier\n, et \u00ab \n:\n \u00bb pour terminer.\n\n\nLes instructions du bloc sont indent\u00e9es par rapport \u00e0 l'en-t\u00eate\n\n\n\n\n\n\n\n\n\u200b\n\n\n\n\n::warning Le \nguide de style Python\n veut que cette indentation soit de \n4 espaces\n.\n\n\nLes op\u00e9rateurs de comparaison\n\u00b6\n\n\n\n\n\n\n\n\nCondition\n\n\nOp\u00e9rateur\n\n\n\n\n\n\n\n\n\n\n\u00e9gal\n\n\n==\n\n\n\n\n\n\nDiff\u00e9rent\n\n\n!=\n\n\n\n\n\n\nStrictement sup\u00e9rieur\n\n\n>\n\n\n\n\n\n\nStrictement inf\u00e9rieur\n\n\n<\n\n\n\n\n\n\nSup\u00e9rieur ou \u00e9gal\n\n\n>=\n\n\n\n\n\n\nInf\u00e9rieur ou \u00e9gal\n\n\n<=\n\n\n\n\n\n\n\n\nLe ET logique\n\u00b6\n\n\n\n\nV\u00e9rifier que deux conditions sont simultan\u00e9ment r\u00e9alis\u00e9es :  \nand\n\n\n\n\nexemple : \n\n\nage\n \n=\n \n14\n\n\npoids\n \n=\n \n50\n\n\n\nif\n \nage\n \n>\n \n11\n \nand\n \npoids\n \n>=\n \n45\n:\n\n   \nprint\n \n(\n\"Man\u00e8ge autoris\u00e9\"\n)\n\n\n\n\n\nLe OU logique\n\u00b6\n\n\n\n\nV\u00e9rifier que sur deux conditions, une ou moins est r\u00e9alis\u00e9es :  \nor\n\n\n\n\nexemple :\n\n\ntypeVehicule\n \n=\n \n\"Autocar\"\n\n\n\nif\n \ntypeVehicule\n \n==\n \n\"Autocar\"\n \nor\n \ntypeVehicule\n \n==\n \n\"V\u00e9hicule particulier\"\n:\n\n   \nprint\n \n(\n\"Vous pouvez entrer dans le tunnel\"\n)",
            "title": "Les bases"
        },
        {
            "location": "/Code/python/Les_bases/#les-bases",
            "text": "",
            "title": "Les bases"
        },
        {
            "location": "/Code/python/Les_bases/#afficher",
            "text": "Pour afficher un message \u00e0 l\u00e9cran on utilise la fonction  print()  :  print   \"(Bonjour \u00e0 tous!)\"    qui donnera un affichage de texte les plus simple :  Bonjour \u00e0 tous",
            "title": "Afficher"
        },
        {
            "location": "/Code/python/Les_bases/#a-savoir-sur-print",
            "text": "Les param\u00e8tres de la fonction print sont s\u00e9par\u00e9s par des virgules.  Quand print rencontre un param\u00e8tre entre guillemets, il affiche le contenu entre guillemets.  Quand print rencontre un param\u00e8tre sans guillemet, il cherche une variable portant le nom de ce param\u00e8tre et il affiche alors la valeur de la variable.    #Aller \u00e0 la ligne \n\\ n  #tabuler \n\\ t  #exemple  print   ( \"J'adore \\n\\t Python\" )  #r\u00e9sultat  J 'adore \n         Python   !",
            "title": "\u00e0 savoir sur print() :"
        },
        {
            "location": "/Code/python/Les_bases/#variable",
            "text": "Les variables sont des endroits o\u00f9 sont stock\u00e9es les donn\u00e9es d'un programme.  Chaque variable poss\u00e8de un  nom  et une  valeur    On appelle  affectation  l'instruction qui permet de donner une valeur \u00e0 une variable.   Par exemple :   prenom   =   \"Anas\"  age   =   \"27\"  taille   =   \"1.70\"  print   ( \"Bonjour\" , prenom \"!\" )  print   ( \"Tu as\" , age , \"ans et mesures\" , taille , \"m.\" )   Ce bout de code affichera :  Bonjour Anas !\nTu as 27 ans et mesures 1.70 m.",
            "title": "Variable"
        },
        {
            "location": "/Code/python/Les_bases/#il-existe-3-types-de-variables-en-python",
            "text": "\"string\"    de type  cha\u00eene de caract\u00e8re , dans notre exemple c'est la variable  \"prenom\"    \"int\"    de type  entier , dans notre exemple c'est la variable  \"age\"    \" float \"   de type  nombre \u00e0 virgule , dans notre exemple c'est la variable  \"taille\"    le s\u00e9parateur d\u00e9cimal est le point et non la virgule.",
            "title": "Il existe 3 types de variables en python"
        },
        {
            "location": "/Code/python/Les_bases/#input",
            "text": "Provoque une interruption dans le pmrogramme courant afin de permettre \u00e0 l'utilisateur \u00e0 rentrer des information qui lui sont demand\u00e9es dans l'invite    feed d'une variable    exemple :   prenom   =   str ( input ( \"Quel est ton prenom ?\" ))  age   =   int ( input ( \"Quel est ton age ?\" ))  taille   =   float ( input ( \"Quelle est ta taille ?\" ))  print   ( \"Bonjour\" , prenom , \"!\" )  print   ( \"Tu as\" , age , \"ans et tu mesures\" , taille , \"m.\" )   Ce qui donnera : \n\nQuel est ton prenom ?Anas\nQuel est ton age ?27\nQuelle est ta taille ?1.70\nBonjour Anas !\nTu as 27 ans et tu mesures 1.7 m. \nLorsqu'une instruction input() est rencontr\u00e9e, les 4 \u00e9tapes suivantes se d\u00e9roulent dans cet ordre :   Le programme affiche le message d'invite .  Le programme est stopp\u00e9 et attend la saisie de l'utilisateur**. Il doit valider sa saisie par la touche Entr\u00e9e.  Le programme convertit la donn\u00e9e de l'utilisateur  dans le type attendu (str,int ou float)  L'affectation = entre cette donn\u00e9e dans la variable  pr\u00e9vue pour le stockage.",
            "title": "Input()"
        },
        {
            "location": "/Code/python/Les_bases/#calculs-et-operations",
            "text": "Python permet de faire des calculs math\u00e9matiques assez simplement, avec biens\u00fbr la  priorit\u00e9 des op\u00e9rations   exemple :   prixAuKilo   =   3.5  poids   =   3  prixTotal   =   prixAuKilo   *   poids  print   ( \"Pour un prix au kg de\" , prixAuKilo , \"\u20ac,\" , poids , \"kg de pommes co\u00fbtent\" , prixTotal , \"\u20ac\" )   r\u00e9sultat :  Pour un prix au kg de 3.5 \u20ac, 3 kg de pommes co\u00fbtent 10.5 \u20ac  autre exemple :  python\nprixInitial = 65.50\ntauxRemise = 30\nremise = prixInitial * tauxRemise / 100\nprixFinal = prixInitial - remise\nprint (\"Prix initial :\",prixInitial)\nprint (\"Remise :\",remise)\nprint (\"Prix sold\u00e9 :\",prixFinal)  r\u00e9sultat :  Prix initial : 65.5\nRemise : 19.65\nPrix sold\u00e9 : 45.85",
            "title": "Calculs et op\u00e9rations"
        },
        {
            "location": "/Code/python/Les_bases/#les-7-operations-sur-les-nombres",
            "text": "l'addition   +  a soustraction   -  la multiplication   *  la puissance   **  le quotient r\u00e9el   /  le quotient entier  //  le reste de la division  %",
            "title": "Les 7 op\u00e9rations sur les nombres :"
        },
        {
            "location": "/Code/python/Les_bases/#les-2-operations-sur-les-chaines-de-caracteres",
            "text": "la concat\u00e9nation  +  la r\u00e9p\u00e9tition  *   Exemple concat\u00e9nation :  nom   =   \"Fifi \"  action   =   \"va \u00e0 la plage\"  phrase   =   nom   +   action  print   ( phrase )   r\u00e9sultat :   Fifi va \u00e0 la plage  Exemple de r\u00e9p\u00e9tition :  nom   =   \"Fifi\"  repetition   =   nom   *   3  print   ( repetition )   r\u00e9sultat :  FifiFifiFifi",
            "title": "Les 2 op\u00e9rations sur les cha\u00eenes de caract\u00e8res :"
        },
        {
            "location": "/Code/python/Les_bases/#fonctions-mathematiques-standard",
            "text": "Python permet d'importer tout type de modules, dont certain pour des fonctions math\u00e9matiques comme la racine carr\u00e9e (voir  module math  )    pour utiliser un module il faut l'importer et l'utiliser avec une syntaxe pr\u00e9cise :   #importation du module  import   NomDuModule  #utilisation du module  NomDuModule . NomDeLaFonction   exemple :   Un studio carr\u00e9 a une superficie de 40 m carr\u00e9s. Combien mesure le c\u00f4t\u00e9 du studio ?  On cherche donc la racine carr\u00e9e de 40.  import   math   aire   =   40  cote   =   math . sqrt ( aire )   print   ( \"Le c\u00f4t\u00e9 d'un carr\u00e9 d'aire\" , aire , \"mxm mesure\" , cote , \"m\" )    En ligne 1, on importe le module math  En ligne 3, pour utiliser la fonction sqrt du module math, on appelle math.sqrt   r\u00e9sultat :  Le c\u00f4t\u00e9 d'un carr\u00e9 d'aire 40 mxm mesure 6.324555320336759 m  Pour \u00e9viter la lourdeur de la syntaxe math.sqrt, on peut proc\u00e9der autrement :  from   math   import   sqrt   aire   =   40  cote   =   sqrt ( aire )   print   ( \"Le c\u00f4t\u00e9 d'un carr\u00e9 d'aire\" , aire , \"mxm mesure\" , cote , \"m\" )    En ligne 1, on importe la fonction sqrt du module math  En ligne 3, il devient donc inutile de rappeler que la fonction sqrt est contenue dans le module math.    pour en savoir plus sur les modules en g\u00e9n\u00e9ral c'est  ici",
            "title": "Fonctions math\u00e9matiques standard :"
        },
        {
            "location": "/Code/python/Les_bases/#commenter-son-code",
            "text": "Citation du site  http://cscircles.cemc.uwaterloo.ca/3-fr/  :   Un programme informatique ressemble \u00e0 un langage cod\u00e9, ce qui est n\u00e9cessaire pour que l'ordinateur comprenne pr\u00e9cis\u00e9ment ce que vos commandes signifient. Mais, \u00e9tant un langage cod\u00e9, il est difficile pour les humains de le lire. Pour compenser ce probl\u00e8me, vous \u00eates autoris\u00e9s \u00e0 \u00e9crire des notes dans votre programme que l'ordinateur ignore. Ces notes s'appellent des  commentaires .  En Python, une ligne d'instructions qui contient le symbole # (di\u00e8se) signifie un commentaire. Le reste de la ligne sera ignor\u00e9e quand le programme sera ex\u00e9cut\u00e9.   exemple :   # donn\u00e9es de l'exercice :  conso110   =   4.7   # la consommation aux 100 km \u00e0 110  conso130   =   6   # la consommation aux 100 km \u00e0 130  distance   =   775   # distance Paris-Marseille  coutLitreDiesel   =   1.39   # en ao\u00fbt 2014  # calcul de la surconsommation  # exc\u00e9dent de consommation sur le trajet PM en roulant \u00e0 130 plut\u00f4t qu'\u00e0 110  surconsommation   =   distance   *   ( conso130   -   conso110 )   /   100  # calcul du surco\u00fbt  # surco\u00fbt en roulant \u00e0 130 plut\u00f4t qu'\u00e0 110  surcout   =   surconsommation   *   coutLitreDiesel  # affichage  print   ( \"Sur le trajet Paris-Marseille de\" , distance , \"kms.\" )  print   ( \"En roulant \u00e0 130 km/h de moyenne plut\u00f4t qu'\u00e0 110\" )  print   ( \"Vous consommerez\" , surconsommation , \"litres de plus\" )  print   ( \"Cela vous co\u00fbtera\" , surcout , \"\u20ac de plus\" )   Les lignes avec des \"#\" sont des commentaires et donc invisible \u00e0 l'ex\u00e9cution du script, ces commentaires servent uniquement \u00e0 la compr\u00e9hension du code pour les futurs d\u00e9veloppeurs :)",
            "title": "Commenter son code"
        },
        {
            "location": "/Code/python/Les_bases/#echapper-un-caractere",
            "text": "La pr\u00e9sence de l'antislash  avant un caract\u00e8re permet de le prot\u00e9g\u00e9. Il doit \u00eatre affich\u00e9 comme tel.\nLe couple \\\" est appel\u00e9 une  s\u00e9quence d'\u00e9chappement .   exemple :  print   ( \"Il a cri\u00e9  \\\" Attention ! \\\"  tr\u00e8s fort.\" )   donnera (et sans erreurs):  Il a cri\u00e9 \"Attention !\" tr\u00e8s fort.  Nous venons \"d'\u00e9chapper\" le caract\u00e8re \" pour que print() ne l'interpr\u00e8te pas.",
            "title": "Echapper un caract\u00e8re"
        },
        {
            "location": "/Code/python/Les_bases/#la-fonction-type",
            "text": "Si vous ne vous souvenez plus du type d\u2019une variable, utilisez la fonction  type()  qui vous le rappellera.  >>>   x   =   2  >>>   type ( x )  < class   ' int '>  >>>   y   =   2.0  >>>   type ( y )  < class   ' float '>  >>>   z   =   '2'  >>>   type ( z )  < class   ' str '>   Faites bien attention, car pour Python, la valeur  2  (nombre entier) est diff\u00e9rente de  2.0  (nombre r\u00e9el), de m\u00eame que  2  (nombre entier) est diff\u00e9rent de  '2'  (cha\u00eene de caract\u00e8res).",
            "title": "La fonction type()"
        },
        {
            "location": "/Code/python/Les_bases/#conditionnelles",
            "text": "",
            "title": "Conditionnelles"
        },
        {
            "location": "/Code/python/Les_bases/#if-simple",
            "text": "if   condition : \n     instruction   1 \n     instruction   2 \n     ... \n     instruction   n",
            "title": "if simple :"
        },
        {
            "location": "/Code/python/Les_bases/#if-else",
            "text": "if   condition : \n     instruction   1 \n     instruction   2 \n     ... \n     instruction   n  else   : \n     instruction   1 \n     instruction   2 \n     ... \n     instruction   n",
            "title": "if else :"
        },
        {
            "location": "/Code/python/Les_bases/#if-elif-elif-else-autant-delif-quon-veut",
            "text": "if   condition : \n     instruction   1 \n     instruction   2 \n     ... \n     instruction   n  elif   condition : \n     instruction   1 \n     instruction   2 \n     ... \n     instruction   n  elif   condition : \n     instruction   1 \n     instruction   2 \n     ... \n     instruction   n  elif   condition : \n     instruction   1 \n     instruction   2 \n     ... \n     instruction   n  else : \n     instruction   1 \n     instruction   2 \n     ... \n     instruction   n    Pour constituer un bloc d'instructions, il faut un en-t\u00eate suivi d'instructions d\u00e9cal\u00e9es par rapport \u00e0 l'en-t\u00eate :   Dans le cas du if, l'en-t\u00eate est constitu\u00e9 du mot-r\u00e9serv\u00e9  if , de la  condition \u00e0 v\u00e9rifier , et \u00ab  :  \u00bb pour terminer.  Les instructions du bloc sont indent\u00e9es par rapport \u00e0 l'en-t\u00eate     \u200b   ::warning Le  guide de style Python  veut que cette indentation soit de  4 espaces .",
            "title": "if elif elif ... else : (autant d'elif qu'on veut)"
        },
        {
            "location": "/Code/python/Les_bases/#les-operateurs-de-comparaison",
            "text": "Condition  Op\u00e9rateur      \u00e9gal  ==    Diff\u00e9rent  !=    Strictement sup\u00e9rieur  >    Strictement inf\u00e9rieur  <    Sup\u00e9rieur ou \u00e9gal  >=    Inf\u00e9rieur ou \u00e9gal  <=",
            "title": "Les op\u00e9rateurs de comparaison"
        },
        {
            "location": "/Code/python/Les_bases/#le-et-logique",
            "text": "V\u00e9rifier que deux conditions sont simultan\u00e9ment r\u00e9alis\u00e9es :   and   exemple :   age   =   14  poids   =   50  if   age   >   11   and   poids   >=   45 : \n    print   ( \"Man\u00e8ge autoris\u00e9\" )",
            "title": "Le ET logique"
        },
        {
            "location": "/Code/python/Les_bases/#le-ou-logique",
            "text": "V\u00e9rifier que sur deux conditions, une ou moins est r\u00e9alis\u00e9es :   or   exemple :  typeVehicule   =   \"Autocar\"  if   typeVehicule   ==   \"Autocar\"   or   typeVehicule   ==   \"V\u00e9hicule particulier\" : \n    print   ( \"Vous pouvez entrer dans le tunnel\" )",
            "title": "Le OU logique"
        },
        {
            "location": "/Code/python/Les_fonctions/",
            "text": "Les bases\n\u00b6\n\n\nAfficher\n\u00b6\n\n\nPour afficher un message \u00e0 l\u00e9cran on utilise la fonction \nprint()\n :\n\n\nprint\n \n\"(Bonjour \u00e0 tous!)\"\n\n\n\n\n\n qui donnera un affichage de texte les plus simple :\n\n\nBonjour \u00e0 tous\n\n\n\n\n\u00e0 savoir sur print() :\n\u00b6\n\n\n\n\n\n\nLes param\u00e8tres de la fonction print sont s\u00e9par\u00e9s par des virgules.\n\n\nQuand print rencontre un param\u00e8tre entre guillemets, il affiche le contenu entre guillemets.\n\n\nQuand print rencontre un param\u00e8tre sans guillemet, il cherche une variable portant le nom de ce param\u00e8tre et il affiche alors la valeur de la variable.\n\n\n\n\n\n\n#Aller \u00e0 la ligne\n\n\\\nn\n\n\n#tabuler\n\n\\\nt\n\n\n#exemple\n\n\nprint\n \n(\n\"J'adore\n\\n\\t\nPython\"\n)\n\n\n#r\u00e9sultat\n\n\nJ\n'adore\n\n        \nPython\n \n!\n\n\n\n\n\nVariable\n\u00b6\n\n\n\n\nLes variables sont des endroits o\u00f9 sont stock\u00e9es les donn\u00e9es d'un programme.\n\n\nChaque variable poss\u00e8de un \nnom\n et une \nvaleur\n \n\n\nOn appelle \naffectation\n l'instruction qui permet de donner une valeur \u00e0 une variable.\n\n\n\n\nPar exemple : \n\n\nprenom\n \n=\n \n\"Anas\"\n\n\nage\n \n=\n \n\"27\"\n\n\ntaille\n \n=\n \n\"1.70\"\n\n\nprint\n \n(\n\"Bonjour\"\n,\nprenom\n\"!\"\n)\n\n\nprint\n \n(\n\"Tu as\"\n,\nage\n,\n\"ans et mesures\"\n,\ntaille\n,\n\"m.\"\n)\n\n\n\n\n\nCe bout de code affichera : \n\nBonjour Anas !\nTu as 27 ans et mesures 1.70 m.\n\n\n\nIl existe 3 types de variables en python\n\u00b6\n\n\n\n\n\n\n\"string\"\n \n de type \ncha\u00eene de caract\u00e8re\n, dans notre exemple c'est la variable \n\"prenom\"\n\n\n\n\n\n\n\"int\"\n \n de type \nentier\n, dans notre exemple c'est la variable \n\"age\"\n\n\n\n\n\n\n\"\nfloat\n\" \n de type \nnombre \u00e0 virgule\n, dans notre exemple c'est la variable \n\"taille\"\n\n\n\n\n\n\nle s\u00e9parateur d\u00e9cimal est le point et non la virgule.\n\n\nInput()\n\u00b6\n\n\n\n\nProvoque une interruption dans le pmrogramme courant afin de permettre \u00e0 l'utilisateur \u00e0 rentrer des information qui lui sont demand\u00e9es dans l'invite\n\n\n  feed d'une variable \n\n\n\n\nexemple : \n\n\nprenom\n \n=\n \nstr\n(\ninput\n(\n\"Quel est ton prenom ?\"\n))\n\n\nage\n \n=\n \nint\n(\ninput\n(\n\"Quel est ton age ?\"\n))\n\n\ntaille\n \n=\n \nfloat\n(\ninput\n(\n\"Quelle est ta taille ?\"\n))\n\n\nprint\n \n(\n\"Bonjour\"\n,\nprenom\n,\n\"!\"\n)\n\n\nprint\n \n(\n\"Tu as\"\n,\nage\n,\n\"ans et tu mesures\"\n,\ntaille\n,\n\"m.\"\n)\n\n\n\n\n\nCe qui donnera : \n\nQuel est ton prenom ?Anas\nQuel est ton age ?27\nQuelle est ta taille ?1.70\nBonjour Anas !\nTu as 27 ans et tu mesures 1.7 m.\n\n\nLorsqu'une instruction input() est rencontr\u00e9e, les 4 \u00e9tapes suivantes se d\u00e9roulent dans cet ordre :\n\n\n\n\nLe programme affiche le message d'invite\n.\n\n\nLe programme est stopp\u00e9 et attend la saisie de l'utilisateur**. Il doit valider sa saisie par la touche Entr\u00e9e.\n\n\nLe programme convertit la donn\u00e9e de l'utilisateur\n dans le type attendu (str,int ou float)\n\n\nL'affectation = entre cette donn\u00e9e dans la variable\n pr\u00e9vue pour le stockage.\n\n\n\n\nCalculs et op\u00e9rations\n\u00b6\n\n\n\n\nPython permet de faire des calculs math\u00e9matiques assez simplement, avec biens\u00fbr la \npriorit\u00e9 des op\u00e9rations\n\n\n\n\nexemple : \n\n\nprixAuKilo\n \n=\n \n3.5\n\n\npoids\n \n=\n \n3\n\n\nprixTotal\n \n=\n \nprixAuKilo\n \n*\n \npoids\n\n\nprint\n \n(\n\"Pour un prix au kg de\"\n,\nprixAuKilo\n,\n\"\u20ac,\"\n,\npoids\n,\n\"kg de pommes co\u00fbtent\"\n,\nprixTotal\n,\n\"\u20ac\"\n)\n\n\n\n\n\nr\u00e9sultat :\n\n\nPour un prix au kg de 3.5 \u20ac, 3 kg de pommes co\u00fbtent 10.5 \u20ac\n\n\n\n\nautre exemple :\n\n\npython\nprixInitial = 65.50\ntauxRemise = 30\nremise = prixInitial * tauxRemise / 100\nprixFinal = prixInitial - remise\nprint (\"Prix initial :\",prixInitial)\nprint (\"Remise :\",remise)\nprint (\"Prix sold\u00e9 :\",prixFinal)\n\n\nr\u00e9sultat :\n\n\nPrix initial : 65.5\nRemise : 19.65\nPrix sold\u00e9 : 45.85\n\n\n\n\nLes 7 op\u00e9rations sur les nombres :\n\u00b6\n\n\n\n\nl'addition  \n+\n\n\na soustraction  \n-\n\n\nla multiplication  \n*\n\n\nla puissance  \n**\n\n\nle quotient r\u00e9el  \n/\n\n\nle quotient entier \n//\n\n\nle reste de la division \n%\n\n\n\n\nLes 2 op\u00e9rations sur les cha\u00eenes de caract\u00e8res :\n\u00b6\n\n\n\n\nla concat\u00e9nation \n+\n\n\nla r\u00e9p\u00e9tition \n*\n\n\n\n\nExemple concat\u00e9nation :\n\n\nnom\n \n=\n \n\"Fifi \"\n\n\naction\n \n=\n \n\"va \u00e0 la plage\"\n\n\nphrase\n \n=\n \nnom\n \n+\n \naction\n\n\nprint\n \n(\nphrase\n)\n\n\n\n\n\nr\u00e9sultat : \n\n\nFifi va \u00e0 la plage\n\n\n\n\nExemple de r\u00e9p\u00e9tition :\n\n\nnom\n \n=\n \n\"Fifi\"\n\n\nrepetition\n \n=\n \nnom\n \n*\n \n3\n\n\nprint\n \n(\nrepetition\n)\n\n\n\n\n\nr\u00e9sultat :\n\n\nFifiFifiFifi\n\n\n\n\nFonctions math\u00e9matiques standard :\n\u00b6\n\n\n\n\nPython permet d'importer tout type de modules, dont certain pour des fonctions math\u00e9matiques comme la racine carr\u00e9e (voir \nmodule math\n )\n\n\n\n\n\n\npour utiliser un module il faut l'importer et l'utiliser avec une syntaxe pr\u00e9cise :\n\n\n\n\n#importation du module\n\n\nimport\n \nNomDuModule\n\n\n#utilisation du module\n\n\nNomDuModule\n.\nNomDeLaFonction\n\n\n\n\n\nexemple : \n\n\nUn studio carr\u00e9 a une superficie de 40 m carr\u00e9s. Combien mesure le c\u00f4t\u00e9 du studio ?\n\n\nOn cherche donc la racine carr\u00e9e de 40.\n\n\nimport\n \nmath\n \n\naire\n \n=\n \n40\n\n\ncote\n \n=\n \nmath\n.\nsqrt\n(\naire\n)\n \n\nprint\n \n(\n\"Le c\u00f4t\u00e9 d'un carr\u00e9 d'aire\"\n,\naire\n,\n\"mxm mesure\"\n,\ncote\n,\n\"m\"\n)\n\n\n\n\n\n\n\nEn ligne 1, on importe le module math\n\n\nEn ligne 3, pour utiliser la fonction sqrt du module math, on appelle math.sqrt\n\n\n\n\nr\u00e9sultat :\n\n\nLe c\u00f4t\u00e9 d'un carr\u00e9 d'aire 40 mxm mesure 6.324555320336759 m\n\n\n\n\nPour \u00e9viter la lourdeur de la syntaxe math.sqrt, on peut proc\u00e9der autrement :\n\n\nfrom\n \nmath\n \nimport\n \nsqrt\n \n\naire\n \n=\n \n40\n\n\ncote\n \n=\n \nsqrt\n(\naire\n)\n \n\nprint\n \n(\n\"Le c\u00f4t\u00e9 d'un carr\u00e9 d'aire\"\n,\naire\n,\n\"mxm mesure\"\n,\ncote\n,\n\"m\"\n)\n\n\n\n\n\n\n\nEn ligne 1, on importe la fonction sqrt du module math\n\n\nEn ligne 3, il devient donc inutile de rappeler que la fonction sqrt est contenue dans le module math.\n\n\n\n\n pour en savoir plus sur les modules en g\u00e9n\u00e9ral c'est \nici\n\n\nCommenter son code\n\u00b6\n\n\nCitation du site \nhttp://cscircles.cemc.uwaterloo.ca/3-fr/\n :\n\n\n\n\nUn programme informatique ressemble \u00e0 un langage cod\u00e9, ce qui est n\u00e9cessaire pour que l'ordinateur comprenne pr\u00e9cis\u00e9ment ce que vos commandes signifient. Mais, \u00e9tant un langage cod\u00e9, il est difficile pour les humains de le lire. Pour compenser ce probl\u00e8me, vous \u00eates autoris\u00e9s \u00e0 \u00e9crire des notes dans votre programme que l'ordinateur ignore. Ces notes s'appellent des \ncommentaires\n.\n\n\nEn Python, une ligne d'instructions qui contient le symbole # (di\u00e8se) signifie un commentaire. Le reste de la ligne sera ignor\u00e9e quand le programme sera ex\u00e9cut\u00e9.\n\n\n\n\nexemple : \n\n\n# donn\u00e9es de l'exercice :\n\n\nconso110\n \n=\n \n4.7\n \n# la consommation aux 100 km \u00e0 110\n\n\nconso130\n \n=\n \n6\n \n# la consommation aux 100 km \u00e0 130\n\n\ndistance\n \n=\n \n775\n \n# distance Paris-Marseille\n\n\ncoutLitreDiesel\n \n=\n \n1.39\n \n# en ao\u00fbt 2014\n\n\n\n# calcul de la surconsommation\n\n\n# exc\u00e9dent de consommation sur le trajet PM en roulant \u00e0 130 plut\u00f4t qu'\u00e0 110\n\n\nsurconsommation\n \n=\n \ndistance\n \n*\n \n(\nconso130\n \n-\n \nconso110\n)\n \n/\n \n100\n\n\n\n# calcul du surco\u00fbt\n\n\n# surco\u00fbt en roulant \u00e0 130 plut\u00f4t qu'\u00e0 110\n\n\nsurcout\n \n=\n \nsurconsommation\n \n*\n \ncoutLitreDiesel\n\n\n\n# affichage\n\n\nprint\n \n(\n\"Sur le trajet Paris-Marseille de\"\n,\ndistance\n,\n\"kms.\"\n)\n\n\nprint\n \n(\n\"En roulant \u00e0 130 km/h de moyenne plut\u00f4t qu'\u00e0 110\"\n)\n\n\nprint\n \n(\n\"Vous consommerez\"\n,\nsurconsommation\n,\n\"litres de plus\"\n)\n\n\nprint\n \n(\n\"Cela vous co\u00fbtera\"\n,\nsurcout\n,\n\"\u20ac de plus\"\n)\n\n\n\n\n\nLes lignes avec des \"#\" sont des commentaires et donc invisible \u00e0 l'ex\u00e9cution du script, ces commentaires servent uniquement \u00e0 la compr\u00e9hension du code pour les futurs d\u00e9veloppeurs :)\n\n\nEchapper un caract\u00e8re\n\u00b6\n\n\n\n\nLa pr\u00e9sence de l'antislash  avant un caract\u00e8re permet de le prot\u00e9g\u00e9. Il doit \u00eatre affich\u00e9 comme tel.\nLe couple \\\" est appel\u00e9 une \ns\u00e9quence d'\u00e9chappement\n.\n\n\n\n\nexemple :\n\n\nprint\n \n(\n\"Il a cri\u00e9 \n\\\"\nAttention !\n\\\"\n tr\u00e8s fort.\"\n)\n\n\n\n\n\ndonnera (et sans erreurs):\n\n\nIl a cri\u00e9 \"Attention !\" tr\u00e8s fort.\n\n\n\n\nNous venons \"d'\u00e9chapper\" le caract\u00e8re \" pour que print() ne l'interpr\u00e8te pas.\n\n\nLa fonction type()\n\u00b6\n\n\nSi vous ne vous souvenez plus du type d\u2019une variable, utilisez la fonction \ntype()\n qui vous le rappellera.\n\n\n>>>\n \nx\n \n=\n \n2\n\n\n>>>\n \ntype\n(\nx\n)\n\n\n<\nclass\n \n'\nint\n'>\n\n\n>>>\n \ny\n \n=\n \n2.0\n\n\n>>>\n \ntype\n(\ny\n)\n\n\n<\nclass\n \n'\nfloat\n'>\n\n\n>>>\n \nz\n \n=\n \n'2'\n\n\n>>>\n \ntype\n(\nz\n)\n\n\n<\nclass\n \n'\nstr\n'>\n\n\n\n\n\nFaites bien attention, car pour Python, la valeur \n2\n (nombre entier) est diff\u00e9rente de \n2.0\n (nombre r\u00e9el), de m\u00eame que \n2\n (nombre entier) est diff\u00e9rent de \n'2'\n (cha\u00eene de caract\u00e8res). \n\n\nConditionnelles\n\u00b6\n\n\nif simple :\n\u00b6\n\n\nif\n \ncondition\n:\n\n    \ninstruction\n \n1\n\n    \ninstruction\n \n2\n\n    \n...\n\n    \ninstruction\n \nn\n\n\n\n\n\nif else :\n\u00b6\n\n\nif\n \ncondition\n:\n\n    \ninstruction\n \n1\n\n    \ninstruction\n \n2\n\n    \n...\n\n    \ninstruction\n \nn\n\n\nelse\n \n:\n\n    \ninstruction\n \n1\n\n    \ninstruction\n \n2\n\n    \n...\n\n    \ninstruction\n \nn\n\n\n\n\n\nif elif elif ... else : (autant d'elif qu'on veut)\n\u00b6\n\n\nif\n \ncondition\n:\n\n    \ninstruction\n \n1\n\n    \ninstruction\n \n2\n\n    \n...\n\n    \ninstruction\n \nn\n\n\nelif\n \ncondition\n:\n\n    \ninstruction\n \n1\n\n    \ninstruction\n \n2\n\n    \n...\n\n    \ninstruction\n \nn\n\n\nelif\n \ncondition\n:\n\n    \ninstruction\n \n1\n\n    \ninstruction\n \n2\n\n    \n...\n\n    \ninstruction\n \nn\n\n\nelif\n \ncondition\n:\n\n    \ninstruction\n \n1\n\n    \ninstruction\n \n2\n\n    \n...\n\n    \ninstruction\n \nn\n\n\nelse\n:\n\n    \ninstruction\n \n1\n\n    \ninstruction\n \n2\n\n    \n...\n\n    \ninstruction\n \nn\n\n\n\n\n\n\n\nPour constituer un bloc d'instructions, il faut un en-t\u00eate suivi d'instructions d\u00e9cal\u00e9es par rapport \u00e0 l'en-t\u00eate :\n\n\n\n\nDans le cas du if, l'en-t\u00eate est constitu\u00e9 du mot-r\u00e9serv\u00e9 \nif\n, de la \ncondition \u00e0 v\u00e9rifier\n, et \u00ab \n:\n \u00bb pour terminer.\n\n\nLes instructions du bloc sont indent\u00e9es par rapport \u00e0 l'en-t\u00eate\n\n\n\n\n\n\n\n\n\u200b\n\n\n\n\n::warning Le \nguide de style Python\n veut que cette indentation soit de \n4 espaces\n.\n\n\nLes op\u00e9rateurs de comparaison\n\u00b6\n\n\n\n\n\n\n\n\nCondition\n\n\nOp\u00e9rateur\n\n\n\n\n\n\n\n\n\n\n\u00e9gal\n\n\n==\n\n\n\n\n\n\nDiff\u00e9rent\n\n\n!=\n\n\n\n\n\n\nStrictement sup\u00e9rieur\n\n\n>\n\n\n\n\n\n\nStrictement inf\u00e9rieur\n\n\n<\n\n\n\n\n\n\nSup\u00e9rieur ou \u00e9gal\n\n\n>=\n\n\n\n\n\n\nInf\u00e9rieur ou \u00e9gal\n\n\n<=\n\n\n\n\n\n\n\n\nLe ET logique\n\u00b6\n\n\n\n\nV\u00e9rifier que deux conditions sont simultan\u00e9ment r\u00e9alis\u00e9es :  \nand\n\n\n\n\nexemple : \n\n\nage\n \n=\n \n14\n\n\npoids\n \n=\n \n50\n\n\n\nif\n \nage\n \n>\n \n11\n \nand\n \npoids\n \n>=\n \n45\n:\n\n   \nprint\n \n(\n\"Man\u00e8ge autoris\u00e9\"\n)\n\n\n\n\n\nLe OU logique\n\u00b6\n\n\n\n\nV\u00e9rifier que sur deux conditions, une ou moins est r\u00e9alis\u00e9es :  \nor\n\n\n\n\nexemple :\n\n\ntypeVehicule\n \n=\n \n\"Autocar\"\n\n\n\nif\n \ntypeVehicule\n \n==\n \n\"Autocar\"\n \nor\n \ntypeVehicule\n \n==\n \n\"V\u00e9hicule particulier\"\n:\n\n   \nprint\n \n(\n\"Vous pouvez entrer dans le tunnel\"\n)",
            "title": "Les bases"
        },
        {
            "location": "/Code/python/Les_fonctions/#les-bases",
            "text": "",
            "title": "Les bases"
        },
        {
            "location": "/Code/python/Les_fonctions/#afficher",
            "text": "Pour afficher un message \u00e0 l\u00e9cran on utilise la fonction  print()  :  print   \"(Bonjour \u00e0 tous!)\"    qui donnera un affichage de texte les plus simple :  Bonjour \u00e0 tous",
            "title": "Afficher"
        },
        {
            "location": "/Code/python/Les_fonctions/#a-savoir-sur-print",
            "text": "Les param\u00e8tres de la fonction print sont s\u00e9par\u00e9s par des virgules.  Quand print rencontre un param\u00e8tre entre guillemets, il affiche le contenu entre guillemets.  Quand print rencontre un param\u00e8tre sans guillemet, il cherche une variable portant le nom de ce param\u00e8tre et il affiche alors la valeur de la variable.    #Aller \u00e0 la ligne \n\\ n  #tabuler \n\\ t  #exemple  print   ( \"J'adore \\n\\t Python\" )  #r\u00e9sultat  J 'adore \n         Python   !",
            "title": "\u00e0 savoir sur print() :"
        },
        {
            "location": "/Code/python/Les_fonctions/#variable",
            "text": "Les variables sont des endroits o\u00f9 sont stock\u00e9es les donn\u00e9es d'un programme.  Chaque variable poss\u00e8de un  nom  et une  valeur    On appelle  affectation  l'instruction qui permet de donner une valeur \u00e0 une variable.   Par exemple :   prenom   =   \"Anas\"  age   =   \"27\"  taille   =   \"1.70\"  print   ( \"Bonjour\" , prenom \"!\" )  print   ( \"Tu as\" , age , \"ans et mesures\" , taille , \"m.\" )   Ce bout de code affichera :  Bonjour Anas !\nTu as 27 ans et mesures 1.70 m.",
            "title": "Variable"
        },
        {
            "location": "/Code/python/Les_fonctions/#il-existe-3-types-de-variables-en-python",
            "text": "\"string\"    de type  cha\u00eene de caract\u00e8re , dans notre exemple c'est la variable  \"prenom\"    \"int\"    de type  entier , dans notre exemple c'est la variable  \"age\"    \" float \"   de type  nombre \u00e0 virgule , dans notre exemple c'est la variable  \"taille\"    le s\u00e9parateur d\u00e9cimal est le point et non la virgule.",
            "title": "Il existe 3 types de variables en python"
        },
        {
            "location": "/Code/python/Les_fonctions/#input",
            "text": "Provoque une interruption dans le pmrogramme courant afin de permettre \u00e0 l'utilisateur \u00e0 rentrer des information qui lui sont demand\u00e9es dans l'invite    feed d'une variable    exemple :   prenom   =   str ( input ( \"Quel est ton prenom ?\" ))  age   =   int ( input ( \"Quel est ton age ?\" ))  taille   =   float ( input ( \"Quelle est ta taille ?\" ))  print   ( \"Bonjour\" , prenom , \"!\" )  print   ( \"Tu as\" , age , \"ans et tu mesures\" , taille , \"m.\" )   Ce qui donnera : \n\nQuel est ton prenom ?Anas\nQuel est ton age ?27\nQuelle est ta taille ?1.70\nBonjour Anas !\nTu as 27 ans et tu mesures 1.7 m. \nLorsqu'une instruction input() est rencontr\u00e9e, les 4 \u00e9tapes suivantes se d\u00e9roulent dans cet ordre :   Le programme affiche le message d'invite .  Le programme est stopp\u00e9 et attend la saisie de l'utilisateur**. Il doit valider sa saisie par la touche Entr\u00e9e.  Le programme convertit la donn\u00e9e de l'utilisateur  dans le type attendu (str,int ou float)  L'affectation = entre cette donn\u00e9e dans la variable  pr\u00e9vue pour le stockage.",
            "title": "Input()"
        },
        {
            "location": "/Code/python/Les_fonctions/#calculs-et-operations",
            "text": "Python permet de faire des calculs math\u00e9matiques assez simplement, avec biens\u00fbr la  priorit\u00e9 des op\u00e9rations   exemple :   prixAuKilo   =   3.5  poids   =   3  prixTotal   =   prixAuKilo   *   poids  print   ( \"Pour un prix au kg de\" , prixAuKilo , \"\u20ac,\" , poids , \"kg de pommes co\u00fbtent\" , prixTotal , \"\u20ac\" )   r\u00e9sultat :  Pour un prix au kg de 3.5 \u20ac, 3 kg de pommes co\u00fbtent 10.5 \u20ac  autre exemple :  python\nprixInitial = 65.50\ntauxRemise = 30\nremise = prixInitial * tauxRemise / 100\nprixFinal = prixInitial - remise\nprint (\"Prix initial :\",prixInitial)\nprint (\"Remise :\",remise)\nprint (\"Prix sold\u00e9 :\",prixFinal)  r\u00e9sultat :  Prix initial : 65.5\nRemise : 19.65\nPrix sold\u00e9 : 45.85",
            "title": "Calculs et op\u00e9rations"
        },
        {
            "location": "/Code/python/Les_fonctions/#les-7-operations-sur-les-nombres",
            "text": "l'addition   +  a soustraction   -  la multiplication   *  la puissance   **  le quotient r\u00e9el   /  le quotient entier  //  le reste de la division  %",
            "title": "Les 7 op\u00e9rations sur les nombres :"
        },
        {
            "location": "/Code/python/Les_fonctions/#les-2-operations-sur-les-chaines-de-caracteres",
            "text": "la concat\u00e9nation  +  la r\u00e9p\u00e9tition  *   Exemple concat\u00e9nation :  nom   =   \"Fifi \"  action   =   \"va \u00e0 la plage\"  phrase   =   nom   +   action  print   ( phrase )   r\u00e9sultat :   Fifi va \u00e0 la plage  Exemple de r\u00e9p\u00e9tition :  nom   =   \"Fifi\"  repetition   =   nom   *   3  print   ( repetition )   r\u00e9sultat :  FifiFifiFifi",
            "title": "Les 2 op\u00e9rations sur les cha\u00eenes de caract\u00e8res :"
        },
        {
            "location": "/Code/python/Les_fonctions/#fonctions-mathematiques-standard",
            "text": "Python permet d'importer tout type de modules, dont certain pour des fonctions math\u00e9matiques comme la racine carr\u00e9e (voir  module math  )    pour utiliser un module il faut l'importer et l'utiliser avec une syntaxe pr\u00e9cise :   #importation du module  import   NomDuModule  #utilisation du module  NomDuModule . NomDeLaFonction   exemple :   Un studio carr\u00e9 a une superficie de 40 m carr\u00e9s. Combien mesure le c\u00f4t\u00e9 du studio ?  On cherche donc la racine carr\u00e9e de 40.  import   math   aire   =   40  cote   =   math . sqrt ( aire )   print   ( \"Le c\u00f4t\u00e9 d'un carr\u00e9 d'aire\" , aire , \"mxm mesure\" , cote , \"m\" )    En ligne 1, on importe le module math  En ligne 3, pour utiliser la fonction sqrt du module math, on appelle math.sqrt   r\u00e9sultat :  Le c\u00f4t\u00e9 d'un carr\u00e9 d'aire 40 mxm mesure 6.324555320336759 m  Pour \u00e9viter la lourdeur de la syntaxe math.sqrt, on peut proc\u00e9der autrement :  from   math   import   sqrt   aire   =   40  cote   =   sqrt ( aire )   print   ( \"Le c\u00f4t\u00e9 d'un carr\u00e9 d'aire\" , aire , \"mxm mesure\" , cote , \"m\" )    En ligne 1, on importe la fonction sqrt du module math  En ligne 3, il devient donc inutile de rappeler que la fonction sqrt est contenue dans le module math.    pour en savoir plus sur les modules en g\u00e9n\u00e9ral c'est  ici",
            "title": "Fonctions math\u00e9matiques standard :"
        },
        {
            "location": "/Code/python/Les_fonctions/#commenter-son-code",
            "text": "Citation du site  http://cscircles.cemc.uwaterloo.ca/3-fr/  :   Un programme informatique ressemble \u00e0 un langage cod\u00e9, ce qui est n\u00e9cessaire pour que l'ordinateur comprenne pr\u00e9cis\u00e9ment ce que vos commandes signifient. Mais, \u00e9tant un langage cod\u00e9, il est difficile pour les humains de le lire. Pour compenser ce probl\u00e8me, vous \u00eates autoris\u00e9s \u00e0 \u00e9crire des notes dans votre programme que l'ordinateur ignore. Ces notes s'appellent des  commentaires .  En Python, une ligne d'instructions qui contient le symbole # (di\u00e8se) signifie un commentaire. Le reste de la ligne sera ignor\u00e9e quand le programme sera ex\u00e9cut\u00e9.   exemple :   # donn\u00e9es de l'exercice :  conso110   =   4.7   # la consommation aux 100 km \u00e0 110  conso130   =   6   # la consommation aux 100 km \u00e0 130  distance   =   775   # distance Paris-Marseille  coutLitreDiesel   =   1.39   # en ao\u00fbt 2014  # calcul de la surconsommation  # exc\u00e9dent de consommation sur le trajet PM en roulant \u00e0 130 plut\u00f4t qu'\u00e0 110  surconsommation   =   distance   *   ( conso130   -   conso110 )   /   100  # calcul du surco\u00fbt  # surco\u00fbt en roulant \u00e0 130 plut\u00f4t qu'\u00e0 110  surcout   =   surconsommation   *   coutLitreDiesel  # affichage  print   ( \"Sur le trajet Paris-Marseille de\" , distance , \"kms.\" )  print   ( \"En roulant \u00e0 130 km/h de moyenne plut\u00f4t qu'\u00e0 110\" )  print   ( \"Vous consommerez\" , surconsommation , \"litres de plus\" )  print   ( \"Cela vous co\u00fbtera\" , surcout , \"\u20ac de plus\" )   Les lignes avec des \"#\" sont des commentaires et donc invisible \u00e0 l'ex\u00e9cution du script, ces commentaires servent uniquement \u00e0 la compr\u00e9hension du code pour les futurs d\u00e9veloppeurs :)",
            "title": "Commenter son code"
        },
        {
            "location": "/Code/python/Les_fonctions/#echapper-un-caractere",
            "text": "La pr\u00e9sence de l'antislash  avant un caract\u00e8re permet de le prot\u00e9g\u00e9. Il doit \u00eatre affich\u00e9 comme tel.\nLe couple \\\" est appel\u00e9 une  s\u00e9quence d'\u00e9chappement .   exemple :  print   ( \"Il a cri\u00e9  \\\" Attention ! \\\"  tr\u00e8s fort.\" )   donnera (et sans erreurs):  Il a cri\u00e9 \"Attention !\" tr\u00e8s fort.  Nous venons \"d'\u00e9chapper\" le caract\u00e8re \" pour que print() ne l'interpr\u00e8te pas.",
            "title": "Echapper un caract\u00e8re"
        },
        {
            "location": "/Code/python/Les_fonctions/#la-fonction-type",
            "text": "Si vous ne vous souvenez plus du type d\u2019une variable, utilisez la fonction  type()  qui vous le rappellera.  >>>   x   =   2  >>>   type ( x )  < class   ' int '>  >>>   y   =   2.0  >>>   type ( y )  < class   ' float '>  >>>   z   =   '2'  >>>   type ( z )  < class   ' str '>   Faites bien attention, car pour Python, la valeur  2  (nombre entier) est diff\u00e9rente de  2.0  (nombre r\u00e9el), de m\u00eame que  2  (nombre entier) est diff\u00e9rent de  '2'  (cha\u00eene de caract\u00e8res).",
            "title": "La fonction type()"
        },
        {
            "location": "/Code/python/Les_fonctions/#conditionnelles",
            "text": "",
            "title": "Conditionnelles"
        },
        {
            "location": "/Code/python/Les_fonctions/#if-simple",
            "text": "if   condition : \n     instruction   1 \n     instruction   2 \n     ... \n     instruction   n",
            "title": "if simple :"
        },
        {
            "location": "/Code/python/Les_fonctions/#if-else",
            "text": "if   condition : \n     instruction   1 \n     instruction   2 \n     ... \n     instruction   n  else   : \n     instruction   1 \n     instruction   2 \n     ... \n     instruction   n",
            "title": "if else :"
        },
        {
            "location": "/Code/python/Les_fonctions/#if-elif-elif-else-autant-delif-quon-veut",
            "text": "if   condition : \n     instruction   1 \n     instruction   2 \n     ... \n     instruction   n  elif   condition : \n     instruction   1 \n     instruction   2 \n     ... \n     instruction   n  elif   condition : \n     instruction   1 \n     instruction   2 \n     ... \n     instruction   n  elif   condition : \n     instruction   1 \n     instruction   2 \n     ... \n     instruction   n  else : \n     instruction   1 \n     instruction   2 \n     ... \n     instruction   n    Pour constituer un bloc d'instructions, il faut un en-t\u00eate suivi d'instructions d\u00e9cal\u00e9es par rapport \u00e0 l'en-t\u00eate :   Dans le cas du if, l'en-t\u00eate est constitu\u00e9 du mot-r\u00e9serv\u00e9  if , de la  condition \u00e0 v\u00e9rifier , et \u00ab  :  \u00bb pour terminer.  Les instructions du bloc sont indent\u00e9es par rapport \u00e0 l'en-t\u00eate     \u200b   ::warning Le  guide de style Python  veut que cette indentation soit de  4 espaces .",
            "title": "if elif elif ... else : (autant d'elif qu'on veut)"
        },
        {
            "location": "/Code/python/Les_fonctions/#les-operateurs-de-comparaison",
            "text": "Condition  Op\u00e9rateur      \u00e9gal  ==    Diff\u00e9rent  !=    Strictement sup\u00e9rieur  >    Strictement inf\u00e9rieur  <    Sup\u00e9rieur ou \u00e9gal  >=    Inf\u00e9rieur ou \u00e9gal  <=",
            "title": "Les op\u00e9rateurs de comparaison"
        },
        {
            "location": "/Code/python/Les_fonctions/#le-et-logique",
            "text": "V\u00e9rifier que deux conditions sont simultan\u00e9ment r\u00e9alis\u00e9es :   and   exemple :   age   =   14  poids   =   50  if   age   >   11   and   poids   >=   45 : \n    print   ( \"Man\u00e8ge autoris\u00e9\" )",
            "title": "Le ET logique"
        },
        {
            "location": "/Code/python/Les_fonctions/#le-ou-logique",
            "text": "V\u00e9rifier que sur deux conditions, une ou moins est r\u00e9alis\u00e9es :   or   exemple :  typeVehicule   =   \"Autocar\"  if   typeVehicule   ==   \"Autocar\"   or   typeVehicule   ==   \"V\u00e9hicule particulier\" : \n    print   ( \"Vous pouvez entrer dans le tunnel\" )",
            "title": "Le OU logique"
        },
        {
            "location": "/Code/python/les_structures_conditionnelles/",
            "text": "Les bases\n\u00b6\n\n\nAfficher\n\u00b6\n\n\nPour afficher un message \u00e0 l\u00e9cran on utilise la fonction \nprint()\n :\n\n\nprint\n \n\"(Bonjour \u00e0 tous!)\"\n\n\n\n\n\n qui donnera un affichage de texte les plus simple :\n\n\nBonjour \u00e0 tous\n\n\n\n\n\u00e0 savoir sur print() :\n\u00b6\n\n\n\n\n\n\nLes param\u00e8tres de la fonction print sont s\u00e9par\u00e9s par des virgules.\n\n\nQuand print rencontre un param\u00e8tre entre guillemets, il affiche le contenu entre guillemets.\n\n\nQuand print rencontre un param\u00e8tre sans guillemet, il cherche une variable portant le nom de ce param\u00e8tre et il affiche alors la valeur de la variable.\n\n\n\n\n\n\n#Aller \u00e0 la ligne\n\n\\\nn\n\n\n#tabuler\n\n\\\nt\n\n\n#exemple\n\n\nprint\n \n(\n\"J'adore\n\\n\\t\nPython\"\n)\n\n\n#r\u00e9sultat\n\n\nJ\n'adore\n\n        \nPython\n \n!\n\n\n\n\n\nVariable\n\u00b6\n\n\n\n\nLes variables sont des endroits o\u00f9 sont stock\u00e9es les donn\u00e9es d'un programme.\n\n\nChaque variable poss\u00e8de un \nnom\n et une \nvaleur\n \n\n\nOn appelle \naffectation\n l'instruction qui permet de donner une valeur \u00e0 une variable.\n\n\n\n\nPar exemple : \n\n\nprenom\n \n=\n \n\"Anas\"\n\n\nage\n \n=\n \n\"27\"\n\n\ntaille\n \n=\n \n\"1.70\"\n\n\nprint\n \n(\n\"Bonjour\"\n,\nprenom\n\"!\"\n)\n\n\nprint\n \n(\n\"Tu as\"\n,\nage\n,\n\"ans et mesures\"\n,\ntaille\n,\n\"m.\"\n)\n\n\n\n\n\nCe bout de code affichera : \n\nBonjour Anas !\nTu as 27 ans et mesures 1.70 m.\n\n\n\nIl existe 3 types de variables en python\n\u00b6\n\n\n\n\n\n\n\"string\"\n \n de type \ncha\u00eene de caract\u00e8re\n, dans notre exemple c'est la variable \n\"prenom\"\n\n\n\n\n\n\n\"int\"\n \n de type \nentier\n, dans notre exemple c'est la variable \n\"age\"\n\n\n\n\n\n\n\"\nfloat\n\" \n de type \nnombre \u00e0 virgule\n, dans notre exemple c'est la variable \n\"taille\"\n\n\n\n\n\n\nle s\u00e9parateur d\u00e9cimal est le point et non la virgule.\n\n\nInput()\n\u00b6\n\n\n\n\nProvoque une interruption dans le pmrogramme courant afin de permettre \u00e0 l'utilisateur \u00e0 rentrer des information qui lui sont demand\u00e9es dans l'invite\n\n\n  feed d'une variable \n\n\n\n\nexemple : \n\n\nprenom\n \n=\n \nstr\n(\ninput\n(\n\"Quel est ton prenom ?\"\n))\n\n\nage\n \n=\n \nint\n(\ninput\n(\n\"Quel est ton age ?\"\n))\n\n\ntaille\n \n=\n \nfloat\n(\ninput\n(\n\"Quelle est ta taille ?\"\n))\n\n\nprint\n \n(\n\"Bonjour\"\n,\nprenom\n,\n\"!\"\n)\n\n\nprint\n \n(\n\"Tu as\"\n,\nage\n,\n\"ans et tu mesures\"\n,\ntaille\n,\n\"m.\"\n)\n\n\n\n\n\nCe qui donnera : \n\nQuel est ton prenom ?Anas\nQuel est ton age ?27\nQuelle est ta taille ?1.70\nBonjour Anas !\nTu as 27 ans et tu mesures 1.7 m.\n\n\nLorsqu'une instruction input() est rencontr\u00e9e, les 4 \u00e9tapes suivantes se d\u00e9roulent dans cet ordre :\n\n\n\n\nLe programme affiche le message d'invite\n.\n\n\nLe programme est stopp\u00e9 et attend la saisie de l'utilisateur**. Il doit valider sa saisie par la touche Entr\u00e9e.\n\n\nLe programme convertit la donn\u00e9e de l'utilisateur\n dans le type attendu (str,int ou float)\n\n\nL'affectation = entre cette donn\u00e9e dans la variable\n pr\u00e9vue pour le stockage.\n\n\n\n\nCalculs et op\u00e9rations\n\u00b6\n\n\n\n\nPython permet de faire des calculs math\u00e9matiques assez simplement, avec biens\u00fbr la \npriorit\u00e9 des op\u00e9rations\n\n\n\n\nexemple : \n\n\nprixAuKilo\n \n=\n \n3.5\n\n\npoids\n \n=\n \n3\n\n\nprixTotal\n \n=\n \nprixAuKilo\n \n*\n \npoids\n\n\nprint\n \n(\n\"Pour un prix au kg de\"\n,\nprixAuKilo\n,\n\"\u20ac,\"\n,\npoids\n,\n\"kg de pommes co\u00fbtent\"\n,\nprixTotal\n,\n\"\u20ac\"\n)\n\n\n\n\n\nr\u00e9sultat :\n\n\nPour un prix au kg de 3.5 \u20ac, 3 kg de pommes co\u00fbtent 10.5 \u20ac\n\n\n\n\nautre exemple :\n\n\npython\nprixInitial = 65.50\ntauxRemise = 30\nremise = prixInitial * tauxRemise / 100\nprixFinal = prixInitial - remise\nprint (\"Prix initial :\",prixInitial)\nprint (\"Remise :\",remise)\nprint (\"Prix sold\u00e9 :\",prixFinal)\n\n\nr\u00e9sultat :\n\n\nPrix initial : 65.5\nRemise : 19.65\nPrix sold\u00e9 : 45.85\n\n\n\n\nLes 7 op\u00e9rations sur les nombres :\n\u00b6\n\n\n\n\nl'addition  \n+\n\n\na soustraction  \n-\n\n\nla multiplication  \n*\n\n\nla puissance  \n**\n\n\nle quotient r\u00e9el  \n/\n\n\nle quotient entier \n//\n\n\nle reste de la division \n%\n\n\n\n\nLes 2 op\u00e9rations sur les cha\u00eenes de caract\u00e8res :\n\u00b6\n\n\n\n\nla concat\u00e9nation \n+\n\n\nla r\u00e9p\u00e9tition \n*\n\n\n\n\nExemple concat\u00e9nation :\n\n\nnom\n \n=\n \n\"Fifi \"\n\n\naction\n \n=\n \n\"va \u00e0 la plage\"\n\n\nphrase\n \n=\n \nnom\n \n+\n \naction\n\n\nprint\n \n(\nphrase\n)\n\n\n\n\n\nr\u00e9sultat : \n\n\nFifi va \u00e0 la plage\n\n\n\n\nExemple de r\u00e9p\u00e9tition :\n\n\nnom\n \n=\n \n\"Fifi\"\n\n\nrepetition\n \n=\n \nnom\n \n*\n \n3\n\n\nprint\n \n(\nrepetition\n)\n\n\n\n\n\nr\u00e9sultat :\n\n\nFifiFifiFifi\n\n\n\n\nFonctions math\u00e9matiques standard :\n\u00b6\n\n\n\n\nPython permet d'importer tout type de modules, dont certain pour des fonctions math\u00e9matiques comme la racine carr\u00e9e (voir \nmodule math\n )\n\n\n\n\n\n\npour utiliser un module il faut l'importer et l'utiliser avec une syntaxe pr\u00e9cise :\n\n\n\n\n#importation du module\n\n\nimport\n \nNomDuModule\n\n\n#utilisation du module\n\n\nNomDuModule\n.\nNomDeLaFonction\n\n\n\n\n\nexemple : \n\n\nUn studio carr\u00e9 a une superficie de 40 m carr\u00e9s. Combien mesure le c\u00f4t\u00e9 du studio ?\n\n\nOn cherche donc la racine carr\u00e9e de 40.\n\n\nimport\n \nmath\n \n\naire\n \n=\n \n40\n\n\ncote\n \n=\n \nmath\n.\nsqrt\n(\naire\n)\n \n\nprint\n \n(\n\"Le c\u00f4t\u00e9 d'un carr\u00e9 d'aire\"\n,\naire\n,\n\"mxm mesure\"\n,\ncote\n,\n\"m\"\n)\n\n\n\n\n\n\n\nEn ligne 1, on importe le module math\n\n\nEn ligne 3, pour utiliser la fonction sqrt du module math, on appelle math.sqrt\n\n\n\n\nr\u00e9sultat :\n\n\nLe c\u00f4t\u00e9 d'un carr\u00e9 d'aire 40 mxm mesure 6.324555320336759 m\n\n\n\n\nPour \u00e9viter la lourdeur de la syntaxe math.sqrt, on peut proc\u00e9der autrement :\n\n\nfrom\n \nmath\n \nimport\n \nsqrt\n \n\naire\n \n=\n \n40\n\n\ncote\n \n=\n \nsqrt\n(\naire\n)\n \n\nprint\n \n(\n\"Le c\u00f4t\u00e9 d'un carr\u00e9 d'aire\"\n,\naire\n,\n\"mxm mesure\"\n,\ncote\n,\n\"m\"\n)\n\n\n\n\n\n\n\nEn ligne 1, on importe la fonction sqrt du module math\n\n\nEn ligne 3, il devient donc inutile de rappeler que la fonction sqrt est contenue dans le module math.\n\n\n\n\n pour en savoir plus sur les modules en g\u00e9n\u00e9ral c'est \nici\n\n\nCommenter son code\n\u00b6\n\n\nCitation du site \nhttp://cscircles.cemc.uwaterloo.ca/3-fr/\n :\n\n\n\n\nUn programme informatique ressemble \u00e0 un langage cod\u00e9, ce qui est n\u00e9cessaire pour que l'ordinateur comprenne pr\u00e9cis\u00e9ment ce que vos commandes signifient. Mais, \u00e9tant un langage cod\u00e9, il est difficile pour les humains de le lire. Pour compenser ce probl\u00e8me, vous \u00eates autoris\u00e9s \u00e0 \u00e9crire des notes dans votre programme que l'ordinateur ignore. Ces notes s'appellent des \ncommentaires\n.\n\n\nEn Python, une ligne d'instructions qui contient le symbole # (di\u00e8se) signifie un commentaire. Le reste de la ligne sera ignor\u00e9e quand le programme sera ex\u00e9cut\u00e9.\n\n\n\n\nexemple : \n\n\n# donn\u00e9es de l'exercice :\n\n\nconso110\n \n=\n \n4.7\n \n# la consommation aux 100 km \u00e0 110\n\n\nconso130\n \n=\n \n6\n \n# la consommation aux 100 km \u00e0 130\n\n\ndistance\n \n=\n \n775\n \n# distance Paris-Marseille\n\n\ncoutLitreDiesel\n \n=\n \n1.39\n \n# en ao\u00fbt 2014\n\n\n\n# calcul de la surconsommation\n\n\n# exc\u00e9dent de consommation sur le trajet PM en roulant \u00e0 130 plut\u00f4t qu'\u00e0 110\n\n\nsurconsommation\n \n=\n \ndistance\n \n*\n \n(\nconso130\n \n-\n \nconso110\n)\n \n/\n \n100\n\n\n\n# calcul du surco\u00fbt\n\n\n# surco\u00fbt en roulant \u00e0 130 plut\u00f4t qu'\u00e0 110\n\n\nsurcout\n \n=\n \nsurconsommation\n \n*\n \ncoutLitreDiesel\n\n\n\n# affichage\n\n\nprint\n \n(\n\"Sur le trajet Paris-Marseille de\"\n,\ndistance\n,\n\"kms.\"\n)\n\n\nprint\n \n(\n\"En roulant \u00e0 130 km/h de moyenne plut\u00f4t qu'\u00e0 110\"\n)\n\n\nprint\n \n(\n\"Vous consommerez\"\n,\nsurconsommation\n,\n\"litres de plus\"\n)\n\n\nprint\n \n(\n\"Cela vous co\u00fbtera\"\n,\nsurcout\n,\n\"\u20ac de plus\"\n)\n\n\n\n\n\nLes lignes avec des \"#\" sont des commentaires et donc invisible \u00e0 l'ex\u00e9cution du script, ces commentaires servent uniquement \u00e0 la compr\u00e9hension du code pour les futurs d\u00e9veloppeurs :)\n\n\nEchapper un caract\u00e8re\n\u00b6\n\n\n\n\nLa pr\u00e9sence de l'antislash  avant un caract\u00e8re permet de le prot\u00e9g\u00e9. Il doit \u00eatre affich\u00e9 comme tel.\nLe couple \\\" est appel\u00e9 une \ns\u00e9quence d'\u00e9chappement\n.\n\n\n\n\nexemple :\n\n\nprint\n \n(\n\"Il a cri\u00e9 \n\\\"\nAttention !\n\\\"\n tr\u00e8s fort.\"\n)\n\n\n\n\n\ndonnera (et sans erreurs):\n\n\nIl a cri\u00e9 \"Attention !\" tr\u00e8s fort.\n\n\n\n\nNous venons \"d'\u00e9chapper\" le caract\u00e8re \" pour que print() ne l'interpr\u00e8te pas.\n\n\nLa fonction type()\n\u00b6\n\n\nSi vous ne vous souvenez plus du type d\u2019une variable, utilisez la fonction \ntype()\n qui vous le rappellera.\n\n\n>>>\n \nx\n \n=\n \n2\n\n\n>>>\n \ntype\n(\nx\n)\n\n\n<\nclass\n \n'\nint\n'>\n\n\n>>>\n \ny\n \n=\n \n2.0\n\n\n>>>\n \ntype\n(\ny\n)\n\n\n<\nclass\n \n'\nfloat\n'>\n\n\n>>>\n \nz\n \n=\n \n'2'\n\n\n>>>\n \ntype\n(\nz\n)\n\n\n<\nclass\n \n'\nstr\n'>\n\n\n\n\n\nFaites bien attention, car pour Python, la valeur \n2\n (nombre entier) est diff\u00e9rente de \n2.0\n (nombre r\u00e9el), de m\u00eame que \n2\n (nombre entier) est diff\u00e9rent de \n'2'\n (cha\u00eene de caract\u00e8res).",
            "title": "Les bases"
        },
        {
            "location": "/Code/python/les_structures_conditionnelles/#les-bases",
            "text": "",
            "title": "Les bases"
        },
        {
            "location": "/Code/python/les_structures_conditionnelles/#afficher",
            "text": "Pour afficher un message \u00e0 l\u00e9cran on utilise la fonction  print()  :  print   \"(Bonjour \u00e0 tous!)\"    qui donnera un affichage de texte les plus simple :  Bonjour \u00e0 tous",
            "title": "Afficher"
        },
        {
            "location": "/Code/python/les_structures_conditionnelles/#a-savoir-sur-print",
            "text": "Les param\u00e8tres de la fonction print sont s\u00e9par\u00e9s par des virgules.  Quand print rencontre un param\u00e8tre entre guillemets, il affiche le contenu entre guillemets.  Quand print rencontre un param\u00e8tre sans guillemet, il cherche une variable portant le nom de ce param\u00e8tre et il affiche alors la valeur de la variable.    #Aller \u00e0 la ligne \n\\ n  #tabuler \n\\ t  #exemple  print   ( \"J'adore \\n\\t Python\" )  #r\u00e9sultat  J 'adore \n         Python   !",
            "title": "\u00e0 savoir sur print() :"
        },
        {
            "location": "/Code/python/les_structures_conditionnelles/#variable",
            "text": "Les variables sont des endroits o\u00f9 sont stock\u00e9es les donn\u00e9es d'un programme.  Chaque variable poss\u00e8de un  nom  et une  valeur    On appelle  affectation  l'instruction qui permet de donner une valeur \u00e0 une variable.   Par exemple :   prenom   =   \"Anas\"  age   =   \"27\"  taille   =   \"1.70\"  print   ( \"Bonjour\" , prenom \"!\" )  print   ( \"Tu as\" , age , \"ans et mesures\" , taille , \"m.\" )   Ce bout de code affichera :  Bonjour Anas !\nTu as 27 ans et mesures 1.70 m.",
            "title": "Variable"
        },
        {
            "location": "/Code/python/les_structures_conditionnelles/#il-existe-3-types-de-variables-en-python",
            "text": "\"string\"    de type  cha\u00eene de caract\u00e8re , dans notre exemple c'est la variable  \"prenom\"    \"int\"    de type  entier , dans notre exemple c'est la variable  \"age\"    \" float \"   de type  nombre \u00e0 virgule , dans notre exemple c'est la variable  \"taille\"    le s\u00e9parateur d\u00e9cimal est le point et non la virgule.",
            "title": "Il existe 3 types de variables en python"
        },
        {
            "location": "/Code/python/les_structures_conditionnelles/#input",
            "text": "Provoque une interruption dans le pmrogramme courant afin de permettre \u00e0 l'utilisateur \u00e0 rentrer des information qui lui sont demand\u00e9es dans l'invite    feed d'une variable    exemple :   prenom   =   str ( input ( \"Quel est ton prenom ?\" ))  age   =   int ( input ( \"Quel est ton age ?\" ))  taille   =   float ( input ( \"Quelle est ta taille ?\" ))  print   ( \"Bonjour\" , prenom , \"!\" )  print   ( \"Tu as\" , age , \"ans et tu mesures\" , taille , \"m.\" )   Ce qui donnera : \n\nQuel est ton prenom ?Anas\nQuel est ton age ?27\nQuelle est ta taille ?1.70\nBonjour Anas !\nTu as 27 ans et tu mesures 1.7 m. \nLorsqu'une instruction input() est rencontr\u00e9e, les 4 \u00e9tapes suivantes se d\u00e9roulent dans cet ordre :   Le programme affiche le message d'invite .  Le programme est stopp\u00e9 et attend la saisie de l'utilisateur**. Il doit valider sa saisie par la touche Entr\u00e9e.  Le programme convertit la donn\u00e9e de l'utilisateur  dans le type attendu (str,int ou float)  L'affectation = entre cette donn\u00e9e dans la variable  pr\u00e9vue pour le stockage.",
            "title": "Input()"
        },
        {
            "location": "/Code/python/les_structures_conditionnelles/#calculs-et-operations",
            "text": "Python permet de faire des calculs math\u00e9matiques assez simplement, avec biens\u00fbr la  priorit\u00e9 des op\u00e9rations   exemple :   prixAuKilo   =   3.5  poids   =   3  prixTotal   =   prixAuKilo   *   poids  print   ( \"Pour un prix au kg de\" , prixAuKilo , \"\u20ac,\" , poids , \"kg de pommes co\u00fbtent\" , prixTotal , \"\u20ac\" )   r\u00e9sultat :  Pour un prix au kg de 3.5 \u20ac, 3 kg de pommes co\u00fbtent 10.5 \u20ac  autre exemple :  python\nprixInitial = 65.50\ntauxRemise = 30\nremise = prixInitial * tauxRemise / 100\nprixFinal = prixInitial - remise\nprint (\"Prix initial :\",prixInitial)\nprint (\"Remise :\",remise)\nprint (\"Prix sold\u00e9 :\",prixFinal)  r\u00e9sultat :  Prix initial : 65.5\nRemise : 19.65\nPrix sold\u00e9 : 45.85",
            "title": "Calculs et op\u00e9rations"
        },
        {
            "location": "/Code/python/les_structures_conditionnelles/#les-7-operations-sur-les-nombres",
            "text": "l'addition   +  a soustraction   -  la multiplication   *  la puissance   **  le quotient r\u00e9el   /  le quotient entier  //  le reste de la division  %",
            "title": "Les 7 op\u00e9rations sur les nombres :"
        },
        {
            "location": "/Code/python/les_structures_conditionnelles/#les-2-operations-sur-les-chaines-de-caracteres",
            "text": "la concat\u00e9nation  +  la r\u00e9p\u00e9tition  *   Exemple concat\u00e9nation :  nom   =   \"Fifi \"  action   =   \"va \u00e0 la plage\"  phrase   =   nom   +   action  print   ( phrase )   r\u00e9sultat :   Fifi va \u00e0 la plage  Exemple de r\u00e9p\u00e9tition :  nom   =   \"Fifi\"  repetition   =   nom   *   3  print   ( repetition )   r\u00e9sultat :  FifiFifiFifi",
            "title": "Les 2 op\u00e9rations sur les cha\u00eenes de caract\u00e8res :"
        },
        {
            "location": "/Code/python/les_structures_conditionnelles/#fonctions-mathematiques-standard",
            "text": "Python permet d'importer tout type de modules, dont certain pour des fonctions math\u00e9matiques comme la racine carr\u00e9e (voir  module math  )    pour utiliser un module il faut l'importer et l'utiliser avec une syntaxe pr\u00e9cise :   #importation du module  import   NomDuModule  #utilisation du module  NomDuModule . NomDeLaFonction   exemple :   Un studio carr\u00e9 a une superficie de 40 m carr\u00e9s. Combien mesure le c\u00f4t\u00e9 du studio ?  On cherche donc la racine carr\u00e9e de 40.  import   math   aire   =   40  cote   =   math . sqrt ( aire )   print   ( \"Le c\u00f4t\u00e9 d'un carr\u00e9 d'aire\" , aire , \"mxm mesure\" , cote , \"m\" )    En ligne 1, on importe le module math  En ligne 3, pour utiliser la fonction sqrt du module math, on appelle math.sqrt   r\u00e9sultat :  Le c\u00f4t\u00e9 d'un carr\u00e9 d'aire 40 mxm mesure 6.324555320336759 m  Pour \u00e9viter la lourdeur de la syntaxe math.sqrt, on peut proc\u00e9der autrement :  from   math   import   sqrt   aire   =   40  cote   =   sqrt ( aire )   print   ( \"Le c\u00f4t\u00e9 d'un carr\u00e9 d'aire\" , aire , \"mxm mesure\" , cote , \"m\" )    En ligne 1, on importe la fonction sqrt du module math  En ligne 3, il devient donc inutile de rappeler que la fonction sqrt est contenue dans le module math.    pour en savoir plus sur les modules en g\u00e9n\u00e9ral c'est  ici",
            "title": "Fonctions math\u00e9matiques standard :"
        },
        {
            "location": "/Code/python/les_structures_conditionnelles/#commenter-son-code",
            "text": "Citation du site  http://cscircles.cemc.uwaterloo.ca/3-fr/  :   Un programme informatique ressemble \u00e0 un langage cod\u00e9, ce qui est n\u00e9cessaire pour que l'ordinateur comprenne pr\u00e9cis\u00e9ment ce que vos commandes signifient. Mais, \u00e9tant un langage cod\u00e9, il est difficile pour les humains de le lire. Pour compenser ce probl\u00e8me, vous \u00eates autoris\u00e9s \u00e0 \u00e9crire des notes dans votre programme que l'ordinateur ignore. Ces notes s'appellent des  commentaires .  En Python, une ligne d'instructions qui contient le symbole # (di\u00e8se) signifie un commentaire. Le reste de la ligne sera ignor\u00e9e quand le programme sera ex\u00e9cut\u00e9.   exemple :   # donn\u00e9es de l'exercice :  conso110   =   4.7   # la consommation aux 100 km \u00e0 110  conso130   =   6   # la consommation aux 100 km \u00e0 130  distance   =   775   # distance Paris-Marseille  coutLitreDiesel   =   1.39   # en ao\u00fbt 2014  # calcul de la surconsommation  # exc\u00e9dent de consommation sur le trajet PM en roulant \u00e0 130 plut\u00f4t qu'\u00e0 110  surconsommation   =   distance   *   ( conso130   -   conso110 )   /   100  # calcul du surco\u00fbt  # surco\u00fbt en roulant \u00e0 130 plut\u00f4t qu'\u00e0 110  surcout   =   surconsommation   *   coutLitreDiesel  # affichage  print   ( \"Sur le trajet Paris-Marseille de\" , distance , \"kms.\" )  print   ( \"En roulant \u00e0 130 km/h de moyenne plut\u00f4t qu'\u00e0 110\" )  print   ( \"Vous consommerez\" , surconsommation , \"litres de plus\" )  print   ( \"Cela vous co\u00fbtera\" , surcout , \"\u20ac de plus\" )   Les lignes avec des \"#\" sont des commentaires et donc invisible \u00e0 l'ex\u00e9cution du script, ces commentaires servent uniquement \u00e0 la compr\u00e9hension du code pour les futurs d\u00e9veloppeurs :)",
            "title": "Commenter son code"
        },
        {
            "location": "/Code/python/les_structures_conditionnelles/#echapper-un-caractere",
            "text": "La pr\u00e9sence de l'antislash  avant un caract\u00e8re permet de le prot\u00e9g\u00e9. Il doit \u00eatre affich\u00e9 comme tel.\nLe couple \\\" est appel\u00e9 une  s\u00e9quence d'\u00e9chappement .   exemple :  print   ( \"Il a cri\u00e9  \\\" Attention ! \\\"  tr\u00e8s fort.\" )   donnera (et sans erreurs):  Il a cri\u00e9 \"Attention !\" tr\u00e8s fort.  Nous venons \"d'\u00e9chapper\" le caract\u00e8re \" pour que print() ne l'interpr\u00e8te pas.",
            "title": "Echapper un caract\u00e8re"
        },
        {
            "location": "/Code/python/les_structures_conditionnelles/#la-fonction-type",
            "text": "Si vous ne vous souvenez plus du type d\u2019une variable, utilisez la fonction  type()  qui vous le rappellera.  >>>   x   =   2  >>>   type ( x )  < class   ' int '>  >>>   y   =   2.0  >>>   type ( y )  < class   ' float '>  >>>   z   =   '2'  >>>   type ( z )  < class   ' str '>   Faites bien attention, car pour Python, la valeur  2  (nombre entier) est diff\u00e9rente de  2.0  (nombre r\u00e9el), de m\u00eame que  2  (nombre entier) est diff\u00e9rent de  '2'  (cha\u00eene de caract\u00e8res).",
            "title": "La fonction type()"
        },
        {
            "location": "/Code/shell/G\u00e9n\u00e9ralit\u00e9/",
            "text": "G\u00e9n\u00e9ralit\u00e9\n\u00b6\n\n\nLes variables\n\u00b6\n\n\n3 types de variables\n\u00b6\n\n\n\n\nVariables utilisateur : \nCe sont les variables que le d\u00e9veloppeur d\u00e9finit de mani\u00e8re locale dans son programme\n\n\nVariables d'environnement : \nCe sont des variables d\u00e9finies de mani\u00e8re globales et qui sont utilisables dans diff\u00e9rents programmes\n\n\nParam\u00e8tres de position : \n\u00c0 l'appel d'un script, ce sont les arguments pass\u00e9s en param\u00e8tres sur la ligne de commandes\n\n\n\n\nAffectation\n\u00b6\n\n\nOp\u00e9rateur = \n\n\n#!/bin/bash\n\n\n# Affectation\n\n\nvar1\n=\n1\n\n\nvar2\n=\n2\n\n\n\n\n\n\n\nWarning\n\n\n\n\nL'affectation via l\u2019op\u00e9rateur = est une commande \"variable=valeur\"Il n'y a donc pas d'espaces entre le nom de la variable, l'op\u00e9rateur et la valeur\n\n\n\n\nIdentification\n\u00b6\n\n\nEn bash une variable est indentifi\u00e9e par un nom, c'est \u00e0 dire une suite de lettre. elle peut contenir une des chiffres ou des caract\u00e8res \"soulign\u00e9\" mais ne peut commencer par un chiffre.\n\n\n# Bien\n\n\nmaVariable\n=\n\"Un nom de variable correct\"\n\n\nma_variable\n=\n\"Un nom de variable correct\"\n\n\nvar1\n=\n\"Un nom de variable correct\"\n\n\n\n# Pas bien\n\nc\n'\nest quoi ce \nnom\n=\n\"Un nom de variable incorrect\"\n\n\n123soleil\n=\n\"Un nom de variable incorrect\"\n\n\n\n\n\n\n\nImportant\n\n\n\n\nLes variables sous bash ne sont pas typ\u00e9s ! Les variables sont stock\u00e9es sous forme de cha\u00eene de caract\u00e8res.\n\n\nSubstitution de variable\n\u00b6\n\n\nPour appeler une variables et obtenir sa valeur, il faut plac\u00e9 un \n$\n devant sza r\u00e9f\u00e9rence.\n\n\n#affectation\n\n\nPrenom\n=\nAnas\n\n#substitution\n\n\necho\n \n\"\n$Prenom\n est un pr\u00e9nom original...\"\n\n\n\n\n\nSimples et doubles quotes\n\u00b6\n\n\n\n\nLes doubles quotes (guillemets partiels ou protection faibles) permettent de grouper des mots sans annuler le remplacement des variables :\n\n\n\n\n#affectation\n\n\nPrenom\n=\nAnas\n\n#substitution\n\n\necho\n \n\"\n$Prenom\n est un pr\u00e9nom original...\"\n\n\n#affichage\n\nAnas est un pr\u00e9nom original...\n\n\n\n\n\n\nLes simples quotes (Guillemets complets ou protection forte) permettent de grouper des mots et annulent toute \u00e9valuation : \n\n\n\n\n#affectation\n\n\nPrenom\n=\nAnas\n\n#substitution\n\n\necho\n \n'$Prenom est un pr\u00e9nom original...'\n\n\n#affichage\n\n\n$Prenom\n est un pr\u00e9nom original...\n\n\n\n\nD\u00e9limitation\n\u00b6\n\n\nLes variables d'environnement sont des variables globales qui permettent de d\u00e9finir des valeurs pouvant \u00eatre utilis\u00e9es dans n'importe quel programme ex\u00e9cut\u00e9 dans le m\u00eame environnement.\n\n\nLa liste des variables d'environnement est donn\u00e9e par la commande env\n\n\nComme pour les Les accolades ${variable} permettent de d\u00e9limiter le nom d'une variable.\n\n\ncash\n=\n\"15\"\n\n\necho\n \n\"Montant : \n$cash0\n Euro\"\n\nMontant :  Euro\n\necho\n \n\"Montant : \n${\ncash\n}\n0 Euro\"\n\nMontant : \n150\n Euro\n\n\n\n\nSubstitution de commandes\n\u00b6\n\n\nAffectation du r\u00e9sultat d'une commande dans une variable : \n$(commande)\n\n\nrepCourant\n=\n$(\npwd\n)\n\n\necho\n \n\"Vous \u00eates dans le r\u00e9pertoire \n$repCourant\n\"\n\n\nVous \u00eates dans le r\u00e9pertoire /home/joda\n\n\n\nnbProcesseur\n=\n$(\ncat /proc/cpuinfo \n|\n grep ^processor \n|\n wc -l\n)\n\n\necho\n \n\"Le nombre de processeur s'\u00e9l\u00e8ve \u00e0 \n$nbProcesseur\n\"\n\n\nLe nombre de processeur s\n'\n\u00e9l\u00e8ve \u00e0 \n6\n\n\n\n\n\nAffectation par lecture\n\u00b6\n\n\nLa commande \nread\n permet d'affecter une ou des valeurs \u00e0 une ou des variables.\n\n\nread\n var1 var2\n\nvaleur1 valeur2\n\n\necho\n \n\"La premi\u00e8re valeur saisie est : \n$var1\n\"\n\n\nLa premi\u00e8re valeur saisie est : valeur1\n\n\necho\n \n\"La seconde valeur saisie est : \n$var2\n\"\n\n\nLa seconde valeur saisie est : valeur2\n\nBASH $>\n\n\n\n\n!!! note\nSi il y a moins de variables que de mots saisis, le BASH affecte \u00e0 la derni\u00e8re variable tous les mots non affect\u00e9s.Si il y a plus de variables que de mots saisis, le BASH affecte une cha\u00eene vide aux variables non utilis\u00e9es.Si il n'y a pas de variables en param\u00e8tre, la ligne lue est enregistr\u00e9e dans la variable pr\u00e9d\u00e9finie : REPLY\n\n\n\n\nLes param\u00e8tres optionnels\n\n\n\n\n***-p** 'Texte' *: Affiche une chaine d'appel\n\n\n-s\n : N'affiche pas ce que l'utilisateur saisi\n\n\n-n val\n : Limite le nombre de caract\u00e8re\n\n\n-t val\n : Limite la saisie au temps indiqu\u00e9 en seconde\n\n\n\n\nLes variables d'environnement\n\u00b6\n\n\nAcc\u00e9der aux valeurs\n\n\nLes variables d'environnement sont des variables globales qui permettent de d\u00e9finir des valeurs pouvant \u00eatre utilis\u00e9es dans n'importe quel programme ex\u00e9cut\u00e9 dans le m\u00eame environnement.\n\n\nLa liste des variables d'environnement est donn\u00e9e par la commande \nenv\n\n\nTests, boucles et conditions\n\u00b6\n\n\nles branchements conditionnels\n\u00b6\n\n\nle 'if'\n\u00b6\n\n\nsyntax : si... [[OU SI...][SINON...]]\n\n\n#!/bin/bash\n\n\n\nstVal\n=\n\"Bruno\"\n\n\n# Branchement conditionnel\n\n\nif\n \n[\n \n$stVal\n \n==\n \n\"Bruno\"\n \n]\n;\n \nthen\n\n  \n# Premier bloc d'instructions\n\n  \necho\n \n\"Salut Bruno !\"\n\n\nelif\n \n[\n \n$stVal\n \n==\n \n\"Michel\"\n \n]\n;\n \nthen\n\n  \n# Deuxi\u00e8me bloc d'instructions\n\n  \necho\n \n\"Bien le bonjour Michel\"\n\n\nelif\n \n[\n \n$stVal\n \n==\n \n\"Jean\"\n \n]\n;\n \nthen\n\n  \n# Troisi\u00e8me bloc d'instructions\n\n  \necho\n \n\"H\u00e9 Jean, \u00e7a va ?\"\n\n\nelse\n\n  \n# Bloc d'instructions par d\u00e9faut\n\n  \necho\n \n\"J'te connais pas, ouste !\"\n\n\nfi\n\n\n\n\n\nBranchement conditionnel : Le \"if\"\n\n\nUn branchement conditionnel de la forme SI ... [[OU SI ...] [SINON ...]] permet de d\u00e9terminer, selon le r\u00e9sultat de l'expression logique (vrai ou faux) renvoy\u00e9 par le pr\u00e9dicat, quel bloc d'instructions sera ex\u00e9cut\u00e9.\n\n\n#!/bin/bash\n\nstVal=\"Bruno\"\n# Branchement conditionnel\nif [ $stVal == \"Bruno\" ]; then\n    # Premier bloc d'instructions\n    echo \"Salut Bruno !\"\nelif [ $stVal == \"Michel\" ]; then\n    # Deuxi\u00e8me bloc d'instructions\n    echo \"Bien le bonjour Michel\"\nelif [ $stVal == \"Jean\" ]; then\n    # Troisi\u00e8me bloc d'instructions\n    echo \"H\u00e9 Jean, \u00e7a va ?\"\nelse\n    # Bloc d'instructions par d\u00e9faut\n    echo \"J'te connais pas, ouste !\"\nfi\n\n\n\n\nREMARQUEIl peut y avoir un nombre quelconque de elif et le dernier else est toujours facultatif\n\n\n\n\nBranchement multiple : Le \"case\"\n\n\nUn branchement multiple permet de d\u00e9terminer si la valeur sur laquelle ce branchement est effectu\u00e9 est \u00e9gale \u00e0 l'une des constantes.\n\n\nDans le cas d'une correspondance, le bloc d'instructions associ\u00e9 \u00e0 cette constante sera ex\u00e9cut\u00e9, sinon le \nBASH\n ex\u00e9cutera le bloc d'instructions correspondant \u00e0 la constante par d\u00e9faut, symbolis\u00e9e par *).\n\n\n#!/bin/bash\n\nstVal=\"Jean\"\ncase $stVal in\n  \"Bruno\")\n    # Premier bloc d'instructions\n    echo \"Salut Bruno !\"\n    ;;\n  \"Michel\")\n    # Deuxi\u00e8me bloc d'instructions\n    echo \"Bien le bonjour Michel\"\n    ;;\n  \"Jean\")\n    # Troisi\u00e8me bloc d'instructions\n    echo \"H\u00e9 Jean, \u00e7a va ?\"\n    ;;\n  *)\n  # Bloc d'instructions par d\u00e9faut\n    echo \"J'te connais pas, ouste !\"\n    ;;\nesac\nREMARQUEIl peut y avoir un nombre quelconque de constante et celle par d\u00e9faut est facultative\n\n\n\n\nLes boucles\n\u00b6\n\n\nLa boucle While\n\n\nDans une boucle while, tant que le test est v\u00e9rifi\u00e9, le bloc d'instructions est ex\u00e9cut\u00e9. Si d\u00e8s le d\u00e9part le test n'est pas v\u00e9rifi\u00e9, le bloc d'instructions ne sera jamais ex\u00e9cut\u00e9.\n\n\n#!/bin/bash\n\n\ni\n=\n0\n\n\nwhile\n \n[\n \n$i\n -lt \n\"10\"\n \n]\n;\n \ndo\n\n  \n# Bloc d'instructions\n\n  \n((\ni++\n))\n\n  \necho\n \n$i\n\n\ndone\n\n\n\n\n\nLa boucle For (1)\n\n\nDans une boucle for ... in, le bloc d'instructions est ex\u00e9cut\u00e9 autant de fois qu'il y a de valeurs en entr\u00e9e. \u00c0 chaque it\u00e9ration, le bloc d'instructions s\u2019ex\u00e9cutera avec chacune des valeurs.\n\n\n#!/bin/bash\n\n\nvals\n=\n'/mnt /dev /proc /sys /tmp /usr/bin /var/tmp'\n\n\nfor\n i in \n$vals\n;\n \ndo\n\n  \n# Bloc d'instructions\n\n  \necho\n \n$i\n \n# 1er Passage avec \"/mnt\", 2\u00e8me avec \"/dev\", 3\u00e8me avec \"/proc\"...\n\n\ndone\n\n\n\n\n\nLa boucle For (2)\n\n\nDans une boucle for, le bloc d'instructions est ex\u00e9cut\u00e9 tant qu'il y a de valeurs g\u00e9n\u00e9r\u00e9es respectant la condition. \u00c0 chaque it\u00e9ration, le bloc d'instructions s\u2019ex\u00e9cutera avec chacune de ces valeurs.\n\n\n#!/bin/bash\nfor ((i = 10; i >= 0; i -= 1)); do\n  # Bloc d'instructions\n  echo $i\ndone \n\n\n\n\nIFS (Internal Field Separator)\n\n\nLors de l\u2019ex\u00e9cution d'une boucle for ... in, le \nBASH\n utilise la valeur de la variable \nIFS\n (\nespace, tabulation, retour \u00e0 la ligne\n) pour isoler dans la cha\u00eene d'entr\u00e9e chacun des \u00e9l\u00e9ments constituants de la boucle.\n\n\nBASH $> vals='/mnt /dev /proc /sys /tmp /usr/bin /var/tmp'BASH $> for i in $vals; do echo $i; done/mnt/dev/proc/sys/tmp/usr/bin/var/tmpBASH $> \n\n\n\n\nDans certains cas, un probl\u00e8me survient quand le flux de donn\u00e9e doit contenir un espace.\n\n\nBASH $> vals='/mnt /dev /proc /sys /tmp /usr/bin /home/joda/Mes Documents'BASH $> for i in $vals; do echo $i; done/mnt/dev/proc/sys/tmp/usr/bin/home/joda/MesDocumentsBASH $> \n\n\n\n\nLa solution consiste a changer la valeur de la variable \nIFS\n avec un caract\u00e8re choisit. Par exemple dans le cas de nom de fichier ou de r\u00e9pertoire, il est plus approprier de s\u00e9parer la liste avec une virgule.\n\n\nBASH $> IFS=$','BASH $> vals='/mnt,/dev,/proc,/sys,/tmp,/usr/bin,/home/joda/Mes Documents'BASH $> for i in $vals; do echo $i; done/mnt/dev/proc/sys/tmp/usr/bin/home/joda/Mes DocumentsBASH $> unset IFSBASH $> \nATTENTIONIl ne faut pas oublier de r\u00e9initialiser la variable IFS avec la commande unset pour qu'elle retrouve sa valeur par d\u00e9faut. En effet le changement de valeur de cette variable pourrait impacter le reste de votre script**La boucle For (1)**\n\n\n\n\nDans une boucle for ... in, le bloc d'instructions est ex\u00e9cut\u00e9 autant de fois qu'il y a de valeurs en entr\u00e9e. \u00c0 chaque it\u00e9ration, le bloc d'instructions s\u2019ex\u00e9cutera avec chacune des valeurs.\n\n\n#!/bin/bash\nvals='/mnt /dev /proc /sys /tmp /usr/bin /var/tmp'\nfor i in $vals; do\n  # Bloc d'instructions\n  echo $i # 1er Passage avec \"/mnt\", 2\u00e8me avec \"/dev\", 3\u00e8me avec \"/proc\"...\ndone\n\n\n\n\nLa boucle For (2)\n\n\nDans une boucle for, le bloc d'instructions est ex\u00e9cut\u00e9 tant qu'il y a de valeurs g\u00e9n\u00e9r\u00e9es respectant la condition. \u00c0 chaque it\u00e9ration, le bloc d'instructions s\u2019ex\u00e9cutera avec chacune de ces valeurs.\n\n\n#!/bin/bash\nfor ((i = 10; i >= 0; i -= 1)); do\n  # Bloc d'instructions\n  echo $i\ndone \n\n\n\n\nIFS (Internal Field Separator)\n\n\nLors de l\u2019ex\u00e9cution d'une boucle for ... in, le \nBASH\n utilise la valeur de la variable \nIFS\n (\nespace, tabulation, retour \u00e0 la ligne\n) pour isoler dans la cha\u00eene d'entr\u00e9e chacun des \u00e9l\u00e9ments constituants de la boucle.\n\n\nBASH $> vals='/mnt /dev /proc /sys /tmp /usr/bin /var/tmp'BASH $> for i in $vals; do echo $i; done/mnt/dev/proc/sys/tmp/usr/bin/var/tmpBASH $> \n\n\n\n\nDans certains cas, un probl\u00e8me survient quand le flux de donn\u00e9e doit contenir un espace.\n\n\nBASH $> vals='/mnt /dev /proc /sys /tmp /usr/bin /home/joda/Mes Documents'BASH $> for i in $vals; do echo $i; done/mnt/dev/proc/sys/tmp/usr/bin/home/joda/MesDocumentsBASH $> \n\n\n\n\nLa solution consiste a changer la valeur de la variable \nIFS\n avec un caract\u00e8re choisit. Par exemple dans le cas de nom de fichier ou de r\u00e9pertoire, il est plus approprier de s\u00e9parer la liste avec une virgule.\n\n\nBASH $> IFS=$','BASH $> vals='/mnt,/dev,/proc,/sys,/tmp,/usr/bin,/home/joda/Mes Documents'BASH $> for i in $vals; do echo $i; done/mnt/dev/proc/sys/tmp/usr/bin/home/joda/Mes DocumentsBASH $> unset IFSBASH $> \nATTENTIONIl ne faut pas oublier de r\u00e9initialiser la variable IFS avec la commande unset pour qu'elle retrouve sa valeur par d\u00e9faut. En effet le changement de valeur de cette variable pourrait impacter le reste de votre script\n\n\n\n\ntest : \n\n\ndouble {[[[([[]#]#\n[[#]\n[#~]])]]]}",
            "title": "G\u00e9n\u00e9ralit\u00e9"
        },
        {
            "location": "/Code/shell/G\u00e9n\u00e9ralit\u00e9/#generalite",
            "text": "",
            "title": "G\u00e9n\u00e9ralit\u00e9"
        },
        {
            "location": "/Code/shell/G\u00e9n\u00e9ralit\u00e9/#les-variables",
            "text": "",
            "title": "Les variables"
        },
        {
            "location": "/Code/shell/G\u00e9n\u00e9ralit\u00e9/#3-types-de-variables",
            "text": "Variables utilisateur :  Ce sont les variables que le d\u00e9veloppeur d\u00e9finit de mani\u00e8re locale dans son programme  Variables d'environnement :  Ce sont des variables d\u00e9finies de mani\u00e8re globales et qui sont utilisables dans diff\u00e9rents programmes  Param\u00e8tres de position :  \u00c0 l'appel d'un script, ce sont les arguments pass\u00e9s en param\u00e8tres sur la ligne de commandes",
            "title": "3 types de variables"
        },
        {
            "location": "/Code/shell/G\u00e9n\u00e9ralit\u00e9/#affectation",
            "text": "Op\u00e9rateur =   #!/bin/bash  # Affectation  var1 = 1  var2 = 2    Warning   L'affectation via l\u2019op\u00e9rateur = est une commande \"variable=valeur\"Il n'y a donc pas d'espaces entre le nom de la variable, l'op\u00e9rateur et la valeur",
            "title": "Affectation"
        },
        {
            "location": "/Code/shell/G\u00e9n\u00e9ralit\u00e9/#identification",
            "text": "En bash une variable est indentifi\u00e9e par un nom, c'est \u00e0 dire une suite de lettre. elle peut contenir une des chiffres ou des caract\u00e8res \"soulign\u00e9\" mais ne peut commencer par un chiffre.  # Bien  maVariable = \"Un nom de variable correct\"  ma_variable = \"Un nom de variable correct\"  var1 = \"Un nom de variable correct\"  # Pas bien \nc ' est quoi ce  nom = \"Un nom de variable incorrect\"  123soleil = \"Un nom de variable incorrect\"    Important   Les variables sous bash ne sont pas typ\u00e9s ! Les variables sont stock\u00e9es sous forme de cha\u00eene de caract\u00e8res.",
            "title": "Identification"
        },
        {
            "location": "/Code/shell/G\u00e9n\u00e9ralit\u00e9/#substitution-de-variable",
            "text": "Pour appeler une variables et obtenir sa valeur, il faut plac\u00e9 un  $  devant sza r\u00e9f\u00e9rence.  #affectation  Prenom = Anas #substitution  echo   \" $Prenom  est un pr\u00e9nom original...\"",
            "title": "Substitution de variable"
        },
        {
            "location": "/Code/shell/G\u00e9n\u00e9ralit\u00e9/#simples-et-doubles-quotes",
            "text": "Les doubles quotes (guillemets partiels ou protection faibles) permettent de grouper des mots sans annuler le remplacement des variables :   #affectation  Prenom = Anas #substitution  echo   \" $Prenom  est un pr\u00e9nom original...\"  #affichage \nAnas est un pr\u00e9nom original...   Les simples quotes (Guillemets complets ou protection forte) permettent de grouper des mots et annulent toute \u00e9valuation :    #affectation  Prenom = Anas #substitution  echo   '$Prenom est un pr\u00e9nom original...'  #affichage  $Prenom  est un pr\u00e9nom original...",
            "title": "Simples et doubles quotes"
        },
        {
            "location": "/Code/shell/G\u00e9n\u00e9ralit\u00e9/#delimitation",
            "text": "Les variables d'environnement sont des variables globales qui permettent de d\u00e9finir des valeurs pouvant \u00eatre utilis\u00e9es dans n'importe quel programme ex\u00e9cut\u00e9 dans le m\u00eame environnement.  La liste des variables d'environnement est donn\u00e9e par la commande env  Comme pour les Les accolades ${variable} permettent de d\u00e9limiter le nom d'une variable.  cash = \"15\"  echo   \"Montant :  $cash0  Euro\" \nMontant :  Euro echo   \"Montant :  ${ cash } 0 Euro\" \nMontant :  150  Euro",
            "title": "D\u00e9limitation"
        },
        {
            "location": "/Code/shell/G\u00e9n\u00e9ralit\u00e9/#substitution-de-commandes",
            "text": "Affectation du r\u00e9sultat d'une commande dans une variable :  $(commande)  repCourant = $( pwd )  echo   \"Vous \u00eates dans le r\u00e9pertoire  $repCourant \" \n\nVous \u00eates dans le r\u00e9pertoire /home/joda nbProcesseur = $( cat /proc/cpuinfo  |  grep ^processor  |  wc -l )  echo   \"Le nombre de processeur s'\u00e9l\u00e8ve \u00e0  $nbProcesseur \" \n\nLe nombre de processeur s ' \u00e9l\u00e8ve \u00e0  6",
            "title": "Substitution de commandes"
        },
        {
            "location": "/Code/shell/G\u00e9n\u00e9ralit\u00e9/#affectation-par-lecture",
            "text": "La commande  read  permet d'affecter une ou des valeurs \u00e0 une ou des variables.  read  var1 var2\n\nvaleur1 valeur2 echo   \"La premi\u00e8re valeur saisie est :  $var1 \" \n\nLa premi\u00e8re valeur saisie est : valeur1 echo   \"La seconde valeur saisie est :  $var2 \" \n\nLa seconde valeur saisie est : valeur2\n\nBASH $>  !!! note\nSi il y a moins de variables que de mots saisis, le BASH affecte \u00e0 la derni\u00e8re variable tous les mots non affect\u00e9s.Si il y a plus de variables que de mots saisis, le BASH affecte une cha\u00eene vide aux variables non utilis\u00e9es.Si il n'y a pas de variables en param\u00e8tre, la ligne lue est enregistr\u00e9e dans la variable pr\u00e9d\u00e9finie : REPLY  Les param\u00e8tres optionnels   ***-p** 'Texte' *: Affiche une chaine d'appel  -s  : N'affiche pas ce que l'utilisateur saisi  -n val  : Limite le nombre de caract\u00e8re  -t val  : Limite la saisie au temps indiqu\u00e9 en seconde",
            "title": "Affectation par lecture"
        },
        {
            "location": "/Code/shell/G\u00e9n\u00e9ralit\u00e9/#les-variables-denvironnement",
            "text": "Acc\u00e9der aux valeurs  Les variables d'environnement sont des variables globales qui permettent de d\u00e9finir des valeurs pouvant \u00eatre utilis\u00e9es dans n'importe quel programme ex\u00e9cut\u00e9 dans le m\u00eame environnement.  La liste des variables d'environnement est donn\u00e9e par la commande  env",
            "title": "Les variables d'environnement"
        },
        {
            "location": "/Code/shell/G\u00e9n\u00e9ralit\u00e9/#tests-boucles-et-conditions",
            "text": "",
            "title": "Tests, boucles et conditions"
        },
        {
            "location": "/Code/shell/G\u00e9n\u00e9ralit\u00e9/#les-branchements-conditionnels",
            "text": "",
            "title": "les branchements conditionnels"
        },
        {
            "location": "/Code/shell/G\u00e9n\u00e9ralit\u00e9/#le-if",
            "text": "syntax : si... [[OU SI...][SINON...]]  #!/bin/bash  stVal = \"Bruno\"  # Branchement conditionnel  if   [   $stVal   ==   \"Bruno\"   ] ;   then \n   # Premier bloc d'instructions \n   echo   \"Salut Bruno !\"  elif   [   $stVal   ==   \"Michel\"   ] ;   then \n   # Deuxi\u00e8me bloc d'instructions \n   echo   \"Bien le bonjour Michel\"  elif   [   $stVal   ==   \"Jean\"   ] ;   then \n   # Troisi\u00e8me bloc d'instructions \n   echo   \"H\u00e9 Jean, \u00e7a va ?\"  else \n   # Bloc d'instructions par d\u00e9faut \n   echo   \"J'te connais pas, ouste !\"  fi   Branchement conditionnel : Le \"if\"  Un branchement conditionnel de la forme SI ... [[OU SI ...] [SINON ...]] permet de d\u00e9terminer, selon le r\u00e9sultat de l'expression logique (vrai ou faux) renvoy\u00e9 par le pr\u00e9dicat, quel bloc d'instructions sera ex\u00e9cut\u00e9.  #!/bin/bash\n\nstVal=\"Bruno\"\n# Branchement conditionnel\nif [ $stVal == \"Bruno\" ]; then\n    # Premier bloc d'instructions\n    echo \"Salut Bruno !\"\nelif [ $stVal == \"Michel\" ]; then\n    # Deuxi\u00e8me bloc d'instructions\n    echo \"Bien le bonjour Michel\"\nelif [ $stVal == \"Jean\" ]; then\n    # Troisi\u00e8me bloc d'instructions\n    echo \"H\u00e9 Jean, \u00e7a va ?\"\nelse\n    # Bloc d'instructions par d\u00e9faut\n    echo \"J'te connais pas, ouste !\"\nfi  REMARQUEIl peut y avoir un nombre quelconque de elif et le dernier else est toujours facultatif  Branchement multiple : Le \"case\"  Un branchement multiple permet de d\u00e9terminer si la valeur sur laquelle ce branchement est effectu\u00e9 est \u00e9gale \u00e0 l'une des constantes.  Dans le cas d'une correspondance, le bloc d'instructions associ\u00e9 \u00e0 cette constante sera ex\u00e9cut\u00e9, sinon le  BASH  ex\u00e9cutera le bloc d'instructions correspondant \u00e0 la constante par d\u00e9faut, symbolis\u00e9e par *).  #!/bin/bash\n\nstVal=\"Jean\"\ncase $stVal in\n  \"Bruno\")\n    # Premier bloc d'instructions\n    echo \"Salut Bruno !\"\n    ;;\n  \"Michel\")\n    # Deuxi\u00e8me bloc d'instructions\n    echo \"Bien le bonjour Michel\"\n    ;;\n  \"Jean\")\n    # Troisi\u00e8me bloc d'instructions\n    echo \"H\u00e9 Jean, \u00e7a va ?\"\n    ;;\n  *)\n  # Bloc d'instructions par d\u00e9faut\n    echo \"J'te connais pas, ouste !\"\n    ;;\nesac\nREMARQUEIl peut y avoir un nombre quelconque de constante et celle par d\u00e9faut est facultative",
            "title": "le 'if'"
        },
        {
            "location": "/Code/shell/G\u00e9n\u00e9ralit\u00e9/#les-boucles",
            "text": "La boucle While  Dans une boucle while, tant que le test est v\u00e9rifi\u00e9, le bloc d'instructions est ex\u00e9cut\u00e9. Si d\u00e8s le d\u00e9part le test n'est pas v\u00e9rifi\u00e9, le bloc d'instructions ne sera jamais ex\u00e9cut\u00e9.  #!/bin/bash  i = 0  while   [   $i  -lt  \"10\"   ] ;   do \n   # Bloc d'instructions \n   (( i++ )) \n   echo   $i  done   La boucle For (1)  Dans une boucle for ... in, le bloc d'instructions est ex\u00e9cut\u00e9 autant de fois qu'il y a de valeurs en entr\u00e9e. \u00c0 chaque it\u00e9ration, le bloc d'instructions s\u2019ex\u00e9cutera avec chacune des valeurs.  #!/bin/bash  vals = '/mnt /dev /proc /sys /tmp /usr/bin /var/tmp'  for  i in  $vals ;   do \n   # Bloc d'instructions \n   echo   $i   # 1er Passage avec \"/mnt\", 2\u00e8me avec \"/dev\", 3\u00e8me avec \"/proc\"...  done   La boucle For (2)  Dans une boucle for, le bloc d'instructions est ex\u00e9cut\u00e9 tant qu'il y a de valeurs g\u00e9n\u00e9r\u00e9es respectant la condition. \u00c0 chaque it\u00e9ration, le bloc d'instructions s\u2019ex\u00e9cutera avec chacune de ces valeurs.  #!/bin/bash\nfor ((i = 10; i >= 0; i -= 1)); do\n  # Bloc d'instructions\n  echo $i\ndone   IFS (Internal Field Separator)  Lors de l\u2019ex\u00e9cution d'une boucle for ... in, le  BASH  utilise la valeur de la variable  IFS  ( espace, tabulation, retour \u00e0 la ligne ) pour isoler dans la cha\u00eene d'entr\u00e9e chacun des \u00e9l\u00e9ments constituants de la boucle.  BASH $> vals='/mnt /dev /proc /sys /tmp /usr/bin /var/tmp'BASH $> for i in $vals; do echo $i; done/mnt/dev/proc/sys/tmp/usr/bin/var/tmpBASH $>   Dans certains cas, un probl\u00e8me survient quand le flux de donn\u00e9e doit contenir un espace.  BASH $> vals='/mnt /dev /proc /sys /tmp /usr/bin /home/joda/Mes Documents'BASH $> for i in $vals; do echo $i; done/mnt/dev/proc/sys/tmp/usr/bin/home/joda/MesDocumentsBASH $>   La solution consiste a changer la valeur de la variable  IFS  avec un caract\u00e8re choisit. Par exemple dans le cas de nom de fichier ou de r\u00e9pertoire, il est plus approprier de s\u00e9parer la liste avec une virgule.  BASH $> IFS=$','BASH $> vals='/mnt,/dev,/proc,/sys,/tmp,/usr/bin,/home/joda/Mes Documents'BASH $> for i in $vals; do echo $i; done/mnt/dev/proc/sys/tmp/usr/bin/home/joda/Mes DocumentsBASH $> unset IFSBASH $> \nATTENTIONIl ne faut pas oublier de r\u00e9initialiser la variable IFS avec la commande unset pour qu'elle retrouve sa valeur par d\u00e9faut. En effet le changement de valeur de cette variable pourrait impacter le reste de votre script**La boucle For (1)**  Dans une boucle for ... in, le bloc d'instructions est ex\u00e9cut\u00e9 autant de fois qu'il y a de valeurs en entr\u00e9e. \u00c0 chaque it\u00e9ration, le bloc d'instructions s\u2019ex\u00e9cutera avec chacune des valeurs.  #!/bin/bash\nvals='/mnt /dev /proc /sys /tmp /usr/bin /var/tmp'\nfor i in $vals; do\n  # Bloc d'instructions\n  echo $i # 1er Passage avec \"/mnt\", 2\u00e8me avec \"/dev\", 3\u00e8me avec \"/proc\"...\ndone  La boucle For (2)  Dans une boucle for, le bloc d'instructions est ex\u00e9cut\u00e9 tant qu'il y a de valeurs g\u00e9n\u00e9r\u00e9es respectant la condition. \u00c0 chaque it\u00e9ration, le bloc d'instructions s\u2019ex\u00e9cutera avec chacune de ces valeurs.  #!/bin/bash\nfor ((i = 10; i >= 0; i -= 1)); do\n  # Bloc d'instructions\n  echo $i\ndone   IFS (Internal Field Separator)  Lors de l\u2019ex\u00e9cution d'une boucle for ... in, le  BASH  utilise la valeur de la variable  IFS  ( espace, tabulation, retour \u00e0 la ligne ) pour isoler dans la cha\u00eene d'entr\u00e9e chacun des \u00e9l\u00e9ments constituants de la boucle.  BASH $> vals='/mnt /dev /proc /sys /tmp /usr/bin /var/tmp'BASH $> for i in $vals; do echo $i; done/mnt/dev/proc/sys/tmp/usr/bin/var/tmpBASH $>   Dans certains cas, un probl\u00e8me survient quand le flux de donn\u00e9e doit contenir un espace.  BASH $> vals='/mnt /dev /proc /sys /tmp /usr/bin /home/joda/Mes Documents'BASH $> for i in $vals; do echo $i; done/mnt/dev/proc/sys/tmp/usr/bin/home/joda/MesDocumentsBASH $>   La solution consiste a changer la valeur de la variable  IFS  avec un caract\u00e8re choisit. Par exemple dans le cas de nom de fichier ou de r\u00e9pertoire, il est plus approprier de s\u00e9parer la liste avec une virgule.  BASH $> IFS=$','BASH $> vals='/mnt,/dev,/proc,/sys,/tmp,/usr/bin,/home/joda/Mes Documents'BASH $> for i in $vals; do echo $i; done/mnt/dev/proc/sys/tmp/usr/bin/home/joda/Mes DocumentsBASH $> unset IFSBASH $> \nATTENTIONIl ne faut pas oublier de r\u00e9initialiser la variable IFS avec la commande unset pour qu'elle retrouve sa valeur par d\u00e9faut. En effet le changement de valeur de cette variable pourrait impacter le reste de votre script  test :   double {[[[([[]#]# [[#] [#~]])]]]}",
            "title": "Les boucles"
        },
        {
            "location": "/DevOps/Ansible/FOR-CEPTION/",
            "text": "FOR-CEPTION\n\u00b6\n\n\n\n\nL'id\u00e9e \u00e9tait de faire une petite boucle afin de faire de la rolling update sur une application... \u00e0 la base  uniquement sur artifact mais au final il s'est av\u00e9rer pratique de faire un loop sur un include afin de jouer les doctrines migration version par version.\n\n\n\n\nloop simple\n\u00b6\n\n\n\n\navec une liste de variables\n\n\n\n\n-\n \nname\n:\n \nloop mk folder\n\n  \nfile\n:\n\n    \npath\n:\n \n\"/tmp/{{\n \nitem\n \n}}\"\n\n    \nstate\n:\n \ndirectory\n\n  \nwith_items\n:\n \n\"{{\n \nvar_list\n \n}}\"\n\n\n\n-\n \nname\n:\n \nloop untar\n\n  \nunarchive\n:\n\n    \nsrc\n:\n \n\"artifacts_{{\n \nitem\n \n}}.zip\"\n\n    \ndest\n:\n \n\"/tmp/{{\n \nitem\n \n}}\"\n\n  \nwith_items\n:\n \n\"{{\n \nvar_list\n \n}}\"\n\n\n\n\n\nloop include\n\u00b6\n\n\n-\n \ninclude_taks\n:\n \ntask.yml\n\n  \nloop\n:\n \n\"{{\n \nvar_list\n \n}}\"\n\n\n\n#task.yml\n\n\n-\n \nname\n:\n \nextraction de l'archive projet v {{ item }}\n \n  \nunarchive\n:\n\n    \nsrc\n:\n \n\"/tmp/{{\n \nitem\n \n}}/archive.tar.gz\"\n\n    \ndest\n:\n \n\"/path/to/folder\"\n\n    \nremote_src\n:\n \nyes\n\n\n\n\n\nUne fois les boucles termin\u00e9s on repart sur les t\u00e2ches habituels pour finir l'installation.",
            "title": "FOR-CEPTION"
        },
        {
            "location": "/DevOps/Ansible/FOR-CEPTION/#for-ception",
            "text": "L'id\u00e9e \u00e9tait de faire une petite boucle afin de faire de la rolling update sur une application... \u00e0 la base  uniquement sur artifact mais au final il s'est av\u00e9rer pratique de faire un loop sur un include afin de jouer les doctrines migration version par version.",
            "title": "FOR-CEPTION"
        },
        {
            "location": "/DevOps/Ansible/FOR-CEPTION/#loop-simple",
            "text": "avec une liste de variables   -   name :   loop mk folder \n   file : \n     path :   \"/tmp/{{   item   }}\" \n     state :   directory \n   with_items :   \"{{   var_list   }}\"  -   name :   loop untar \n   unarchive : \n     src :   \"artifacts_{{   item   }}.zip\" \n     dest :   \"/tmp/{{   item   }}\" \n   with_items :   \"{{   var_list   }}\"",
            "title": "loop simple"
        },
        {
            "location": "/DevOps/Ansible/FOR-CEPTION/#loop-include",
            "text": "-   include_taks :   task.yml \n   loop :   \"{{   var_list   }}\"  #task.yml  -   name :   extraction de l'archive projet v {{ item }}  \n   unarchive : \n     src :   \"/tmp/{{   item   }}/archive.tar.gz\" \n     dest :   \"/path/to/folder\" \n     remote_src :   yes   Une fois les boucles termin\u00e9s on repart sur les t\u00e2ches habituels pour finir l'installation.",
            "title": "loop include"
        }
    ]
}